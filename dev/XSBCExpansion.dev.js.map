{"version":3,"file":"XSBCExpansion.dev.js","sources":["../../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../../scr/Models/ModInfo.ts","../../scr/Utilities/BCSDK.ts","../../scr/Utilities/Utilities.ts","../../scr/Base/Data.ts","../../scr/Utilities/DataManager.ts","../../scr/Utilities/TimerProcessInjector.ts","../../scr/Models/ModuleInfo.ts","../../scr/Base/BaseModule.ts","../../scr/Modules/WombTattoos.ts","../../scr/Utilities/AssetManager.ts","../../scr/Utilities/HookManager.ts","../../scr/Utilities/MessageManager.ts","../../scr/Modules/Arousal.ts","../../scr/Utilities/Modules/ModulesLoader.ts","../../scr/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.1.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const e=\"1.1.0\";function o(e){alert(\"Mod ERROR:\\n\"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&\"object\"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${o}\\nPatch1:\\n${t.get(o)||\"\"}\\nPatch2:\\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(\".\");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const d=o[a[a.length-1]];if(\"function\"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(d.toString().replaceAll(\"\\r\\n\",\"\\n\")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){\"string\"==typeof e&&\"string\"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&\"object\"==typeof e||o(\"Failed to register mod: Expected info object, got \"+typeof e),\"string\"==typeof e.name&&e.name||o(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof e.name);let i=`'${e.name}'`;\"string\"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,\"string\"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&\"string\"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&\"object\"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(d));const s=e=>{\"string\"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);\"number\"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))\"string\"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),\"string\"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>(\"string\"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith(\"1.0.\")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&\"object\"==typeof o&&\"string\"==typeof o.name&&\"string\"==typeof o.version?e.registerMod(o.name,o.version,\"object\"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","export const MOD_NAME = 'XSBE';\nexport const MOD_FULL_NAME = \"Xiaosu's BC Expansion\";\n\nexport const REPOSITORY_URL = 'https://github.com/iceriny/XiaosuBCExpansion';","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport * as ModInfo from \"../Models/ModInfo\";\nimport * as Info from \"../Models/SDKInfo\";\n\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----SDK----  VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV    //\nexport const bcModSDK = bcModSDKRef.registerMod({\n    name: ModInfo.MOD_NAME,\n    fullName: ModInfo.MOD_FULL_NAME,\n    version: XSBE_VERSION.startsWith(\"v\") ? XSBE_VERSION.slice(1) : XSBE_VERSION,\n    repository: ModInfo.REPOSITORY_URL\n});\nexport function hookFunction(target: string, priority: Info.HookPriority, hook:Info.PatchHook): () => void {\n    const removeCallback = bcModSDK.hookFunction(target, priority, hook);\n    return removeCallback;\n}\n\nexport function patchFunction(functionName: string, patches: Record<string, string | null>): void {\n    bcModSDK.patchFunction(functionName, patches);\n}\n\nexport function removePatches(functionName: string){\n    bcModSDK.removePatches(functionName);\n}\n\n//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----SDK----  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //","/**\n * Debug信息对象接口\n */\ninterface XSDebugMSG {\n    name?: string;\n    type?: DebugMSGType;\n    content: unknown;\n}\n/**\n * Debug信息类型\n */\nexport enum DebugMSGType {\n    DebugLog,\n    Workflow_Log,\n}\n/**\n * 发送debug信息到控制台\n * @param msg 信息\n * @param color 可选颜色参数\n * @param style 可选的css风格参数\n * @returns 无\n */\nexport function conDebug(msg: XSDebugMSG | string,isError: boolean = false, color: string | null = null, style: string | null = null) {\n    if (DEBUG === false) return;\n\n\n    const result: object = typeof msg === \"string\" ? {\n        name: \"XiaoSuActivity_Debug\",\n        type: DebugMSGType.DebugLog,\n        content: msg,\n        time: new Date().toLocaleString(),\n        ModVersion: XSBE_VERSION,\n    } : {\n        name: msg.name,\n        type: msg.type,\n        content: msg.content,\n        time: new Date().toLocaleString(),\n        ModVersion: XSBE_VERSION\n    }\n    if (style) {\n        console.debug(\"%c小酥的模组信息: \", style, result);\n    } else {\n        let theColor = 'rgba(191, 154, 175, 1)';\n        if (isError) {\n            theColor = 'rgba(255, 0, 0, 1)'\n        }\n        if (color) {\n            theColor = color\n        }\n        console.debug(\"%c小酥的模组信息: \", `background-color: ${theColor}; font-weight: bold;`, result);\n    }\n}\n\nexport function SkillSetNegativeModifier(name: SkillType, value: number, duration: number) {\n    const bondage = SkillGetLevelReal(Player, name);\n    SkillSetModifier(Player, name, bondage + SkillGetModifier(Player, name) - value <= 0 ? -bondage : -value, duration);\n}","/** @Mod的数据类 */\nexport type dataType = 'online' | 'setting' | 'local'\n\nexport const PlayerStorage = () => Player?.XSBE;\nexport const PlayerOnlineSharedSettingsStorage = () => Player.OnlineSharedSettings?.XSBE;\nexport const ExtensionStorage = () => Player.ExtensionSettings?.XSBE as string;\n/**\n * mod所使用的数据的类\n */\nexport class Data<T extends IData> {\n    private prefix: string = \"XSBE_\";\n    /** 在线分享数据的key集合 */\n    private onlineKeys: Set<keyof T>;\n    /** 设置数据的key集合 */\n    private settingKeys: Set<keyof T>;\n    /** 本地数据的key集合 */\n    private localKeys: Set<keyof T>;\n\n    private static readonly defaultData = {\n        XSBE: {\n            Settings: {},\n            OnlineData: {}\n        },\n        CharacterOnlineSharedSettings: {\n            XSBE: {}\n        }\n    }\n    /**\n     * 创建数据类\n     * @param data 以此为模板创建数据\n     * @param onlineKeys 数据中哪些键是在线分享数据\n     * @param settingKeys 数据中哪些键是设置键\n     * @param localKeys 数据中哪些键是本地数据键\n     */\n    constructor(private data: T, onlineKeys: (keyof T)[], settingKeys: (keyof T)[], localKeys: (keyof T)[]) {\n        this.onlineKeys = new Set(onlineKeys);\n        this.settingKeys = new Set(settingKeys);\n        this.localKeys = new Set(localKeys);\n        if (!Player.XSBE) {\n            Player['XSBE'] = Data.defaultData.XSBE\n        }\n        if (!Player.OnlineSharedSettings?.XSBE) {\n            Player.OnlineSharedSettings!['XSBE'] = Data.defaultData.CharacterOnlineSharedSettings.XSBE\n        }\n        for (const k in this.data) {\n            this.dataSetHandle(k, this.data[k], false)\n        }\n\n        if (ExtensionStorage()) {\n            // 比对服务器数据和本地数据谁更新\n            this.compareServerDataAndLocalDataAndUpdate();\n        } else {\n            this.updateExtensionSettings();\n        }\n\n    }\n\n\n    /**\n     * 比较服务器数据和本地数据并更新\n     */\n    private compareServerDataAndLocalDataAndUpdate() {\n        // 获取服务器数据\n        const serverExtensionSettingObject = this.getExtensionSettings() as Record<keyof T, T[keyof T]> | Record<string, never>;\n        // 获取服务器数据的时间戳\n        const serverTimestamp: number = (serverExtensionSettingObject['timestamp'] as number | undefined) ?? 0;\n        // 获取本地数据\n        const localDataObject = this.getLocalStorage() as Record<keyof T, T[keyof T]>;\n        // 获取本地数据的时间戳\n        const localTimestamp: number = (localDataObject['timestamp'] as number | undefined) ?? 0;\n\n        if (serverExtensionSettingObject) {\n            if (serverTimestamp >= localTimestamp) {\n                // 如果服务器数据的时间戳大于等于本地数据的时间戳，则更新更新内存数据\n                for (const k in serverExtensionSettingObject) {\n                    if (Object.hasOwnProperty.call(this.data, k)) {\n                        if (k == 'version') continue; // 将来添加版本号的比对功能\n                        const dataValue = this.data[k as keyof T];\n                        const serverValue = serverExtensionSettingObject[k];\n                        if (dataValue !== serverValue) {\n                            this.data[k as keyof T] = serverValue;\n                        }\n                    }\n                }\n            } else {\n                // 如果本地数据的时间戳大于服务器数据的时间戳，则使用本地数据更新内存数据\n                for (const k in localDataObject) {\n                    if (Object.hasOwnProperty.call(this.data, k)) {\n                        if (k == 'version') continue;// 将来添加版本号的比对功能\n                        const dataValue = this.data[k as keyof T];\n                        const localValue = localDataObject[k];\n                        if (dataValue !== localValue) {\n                            this.data[k as keyof T] = localValue;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 获取数据\n     * 因为在set时同步了数据到Player.XSBE中 所以这里获取到的应该和Player中的一致\n     * @param key key值\n     * @returns 获取到的数据\n     */\n    get<K extends keyof T>(key: K): T[K] {\n        return this.data[key];\n    }\n\n    /**\n     * 设置数据 同步到Player中 可选的同步到服务器\n     * @param key 设置数据的键\n     * @param value 设置数据的值\n     * @param upload 是否同步到服务器\n     */\n    set<K extends keyof T>(key: K, value: T[K], dataType?: dataType, upload: boolean = false) {\n        this.data[key] = value;\n        if (dataType) {\n            switch (dataType) {\n                case 'online':\n                    this.onlineKeys.add(key);\n                    this.localKeys.add(key);\n                    break;\n                case 'setting':\n                    this.settingKeys.add(key);\n                    this.localKeys.add(key);\n                    break;\n                case 'local':\n                    this.localKeys.add(key);\n                    break;\n            }\n        }\n        this.dataSetHandle(key, value, upload);\n    }\n\n\n\n    /**\n     * 处理数据 this.data 与 Player和服务器 之间的同步\n     * @param key 设置的数据的键\n     * @param value 设置数据的值\n     * @param upload 是否同步到服务器\n     */\n    private dataSetHandle<K extends keyof T>(key: K, value: T[K], upload: boolean) {\n        if (this.localKeys.has(key)) {\n            localStorage.setItem(this.getLocalKeyFromKey(key), JSON.stringify(value));\n            if (this.settingKeys.has(key)) {\n                Player.XSBE!.Settings![key as string] = value;\n            } else if (upload && this.onlineKeys.has(key)) {\n                if (Player.OnlineSharedSettings) Player.OnlineSharedSettings!.XSBE![key as string] = value;\n                Player.XSBE![key as string] = value;\n                this.updateExtensionSettings();\n            } else {\n                // set on Player\n                Player.XSBE![key as string] = value;\n            }\n        } else {\n            // set on Player\n            Player.XSBE![key as string] = value;\n        }\n    }\n\n    /**\n     * 更新ExtensionSettings到服务器\n     */\n    updateExtensionSettings() {\n        // 创建一个新对象，用于存储满足条件的键值对\n        const ExtensionSettingsObject: T = {} as T;\n        // 使用循环遍历原始对象的键值对\n        for (const key in this.data) {\n            if (Object.hasOwnProperty.call(this.data, key)) {\n                if (this.localKeys.has(key)) {\n                    // 将满足条件的键值对添加到新对象中\n                    ExtensionSettingsObject[key] = this.data[key];\n                }\n            }\n        }\n        if (!ExtensionStorage()) {\n            Player.ExtensionSettings.XSBE = ''\n        }\n        Player.ExtensionSettings.XSBE = LZString.compressToBase64(JSON.stringify(ExtensionSettingsObject));\n        ServerPlayerExtensionSettingsSync('XSBE');\n    }\n\n    /**\n     * 获取服务器数据并更新本地数据\n     */\n    downloadExtensionSettings<K extends keyof T>() {\n        if (ExtensionStorage()) {\n            const ExtensionSettingsObject = this.getExtensionSettings() as Record<K, T[K]>;\n            for (const key in ExtensionSettingsObject) {\n                if (Object.hasOwnProperty.call(this.data, key)) {\n                    this.set(key as K, ExtensionSettingsObject[key]);\n                }\n            }\n        }\n    }\n\n    /**\n     * 获取服务器的ExtensionSettings字符串解压后返回为一个对象\n     * @returns 返回从服务器获取到的数据的对象\n     */\n    getExtensionSettings() {\n        return JSON.parse(LZString.decompressFromBase64(ExtensionStorage()) ?? '') as object;\n    }\n\n    /**\n     * 获取从本地储存空间获取到的数据对象\n     * @returns 返回从本地空间获取到的数据对象\n     */\n    getLocalStorage<K extends keyof T>(): object {\n        const localStorageObject = {};\n        for (const k of this.localKeys) {\n            const value = localStorage.getItem(this.getLocalKeyFromKey(k)) as string;\n            if (value) {\n                (localStorageObject as Record<K, T[K]>)[k as K] = JSON.parse(value) as T[K];\n            }\n        }\n        return localStorageObject;\n    }\n\n    /**\n     * 通过输入的Key值获取到本地空间的key键\n     * @param key key\n     * @returns 本地空间的键\n     */\n    getLocalKeyFromKey(key: keyof T): string {\n        return `${this.prefix}${key as string}`;\n    }\n\n}\n","import { Data } from \"../Base/Data\"\n\n\nexport class DataManager {\n    private static private_data: Data<IData>;\n\n    public static Init() {\n        DataManager.private_data = new Data({\n            version: XSBE_VERSION,\n            timestamp: CommonTime(),\n            enabled: false as boolean,\n            hasWombTattoos: false as boolean,\n            aftertaste: 0\n        }, ['hasWombTattoos', 'aftertaste'], ['enabled'], [\"version\", \"timestamp\", \"hasWombTattoos\", \"enabled\", \"aftertaste\"])\n\n        window.XSBE_Data = DataManager.private_data\n    }\n\n    static get data() {\n        return DataManager.private_data\n    }\n    static getCharacterData<T extends (Data<IData> | XSBE_SharedSettings)>(C: Character | PlayerCharacter): T | undefined {\n        if (C.IsPlayer()) return this.data as T;\n        else return C.OnlineSharedSettings?.XSBE as T;\n    }\n\n}","import { hookFunction } from \"./BCSDK\";\n// import { conDebug } from \"./Utilities\";\n\ntype RegisteredProcessItem = { priority: number, nextInterval: number, interval: number | (() => number), condition: () => boolean, nextTriggerTime: number }\nexport class TimerProcessInjector {\n    private static ProcessSequence: TimerProcessInjectorSequence;\n    private static RegisteredProcess: Map<string, RegisteredProcessItem>;\n    private static ProcessCodeMap: Map<string, () => void>;\n    private static processSortList: string[];\n    private static activatedProcess: string[];\n\n    public static Init(): void {\n        this.ProcessSequence = new TimerProcessInjectorSequence();\n        this.RegisteredProcess = new Map<string, RegisteredProcessItem>;\n        this.ProcessCodeMap = new Map<string, () => void>\n        this.activatedProcess = [];\n        this.processSortList = [];\n    }\n\n    public static Load(): void {\n\n        this.sortProcessList();\n        for (const name of this.processSortList) {\n            const item = this.RegisteredProcess.get(name)!\n            const itemInterval = item.interval;\n            if (typeof itemInterval === \"function\") {\n                item.nextInterval = itemInterval();\n            } else {\n                item.nextInterval = itemInterval;\n            }\n        }\n    }\n\n    public static Run(): void {\n        hookFunction(\"TimerProcess\", 100, (args, next) => {\n            this.activatedProcess = [];\n\n            const currentTime = Date.now();\n            // 进行条件判断 如果条件通过 则将代码放入激活列表中\n            for (const name of this.processSortList) {\n                const item = this.RegisteredProcess.get(name)!\n                if (item.interval == 0){\n                    this.activatedProcess.push(name);\n                    continue;\n                }\n\n                if (item.nextTriggerTime <= currentTime) {\n                    item.nextTriggerTime = currentTime + item.nextInterval;\n                    if (item.condition()) {\n                        this.activatedProcess.push(name);\n                    }\n                }\n                if (typeof item.interval === \"function\") {\n                    item.nextInterval = item.interval();\n                }\n            }\n            // 通过将激活列表的所有值遍历添加到ProcessSequence中\n            this.ProcessSequence.clear();\n            for (const name of this.activatedProcess) {\n                this.ProcessSequence.add({ code: this.ProcessCodeMap.get(name)!, name: name });\n            }\n\n            this.ProcessSequence.run(this.activatedProcess);\n\n            // 交给ProcessSequence 进行执行\n            return next(args)\n        });\n    }\n\n    private static sortProcessList() {\n        this.processSortList.sort((a, b) => {\n            return this.RegisteredProcess.get(b)!.priority - this.RegisteredProcess.get(a)!.priority;\n        });\n    }\n\n\n    public static add(priority: number, interval: number | (() => number), condition: () => boolean, codeItem: TimerProcessInjectorCodeContent) {\n        if (this.RegisteredProcess.has(codeItem.name)) return;\n        this.RegisteredProcess.set(codeItem.name, {\n            interval: interval,\n            nextInterval: -1,//////\n            condition: condition,\n            priority: priority,\n            nextTriggerTime: 0//////\n        });\n        this.ProcessCodeMap.set(codeItem.name, codeItem.code);\n        this.processSortList.push(codeItem.name);\n    }\n}\n\ninterface TimerProcessInjectorCodeContent {\n    code: () => void;\n    name: string;\n}\ntype TimerProcessInjectorCodeMap = Map<string, TimerProcessInjectorCodeContent>;\n\nclass TimerProcessInjectorSequence {\n    private codeMap: TimerProcessInjectorCodeMap;\n    size: number;\n\n    constructor() {\n        this.codeMap = new Map<string, TimerProcessInjectorCodeContent>();\n        this.size = 0;\n    }\n\n    add(codeItem: TimerProcessInjectorCodeContent) {\n        if (this.codeMap.has(codeItem.name)) {\n            return;\n        }\n        this.codeMap.set(codeItem.name, codeItem);\n        this.size++;\n    }\n\n    has(name: string) {\n        return this.codeMap.has(name);\n    }\n    remove(name: string) {\n        this.codeMap.delete(name);\n        this.size--;\n    }\n    clear() {\n        this.codeMap.clear();\n        this.size = 0;\n    }\n\n    run(runList: string[]) {\n        for (const name of runList) {\n            this.codeMap.get(name)?.code();\n        }\n    }\n}\n","export interface ModuleInfo {\n    /**\n     * 模块名\n     */\n    name: moduleName;\n    priority: ModulePriority;\n    description: string;\n}\n\nexport type moduleName = 'base' | 'WombTattoosModule' | 'ArousalModule'\n\nexport enum ModulePriority {\n    Bottom = -100,\n    Observe = 0,\n    AddBehavior = 1,\n    ModifyBehavior = 5,\n    OverrideBehavior = 10,\n    Top = 100\n}","import { ModuleInfo, ModulePriority } from \"../Models/ModuleInfo\";\n\n/**\n * 模块的基础抽象类\n */\nexport abstract class BaseModule {\n    /** 模块的信息 */\n    Info: ModuleInfo = {\n        name: \"base\",\n        priority: ModulePriority.Bottom,\n        description: \"模块基类，所有的模块都继承这个模块\"\n    }\n    /** 模块是否加载完成 */\n    public Loaded: boolean = false;\n\n    constructor(info: ModuleInfo) {\n        this.Info = info;\n    }\n\n    /**\n     * 在模块加载完成后调用\n     */\n    protected letSuccessfullyLoad(): void {\n        this.Loaded = true;\n    }\n\n    /**\n     * 初始化函数\n     */\n    public abstract Init(): void\n    /**\n     * 加载函数\n     */\n    public abstract Load(): void\n\n    /**\n     * 运行模块\n     */\n    public abstract Run(): void\n\n    /**\n     * 卸载模块\n     */\n    public abstract Unload(): void\n}","import { BaseModule } from \"../Base/BaseModule\";\n// import { HookManager } from \"../Utilities/HookManager\";\n// import { conDebug } from \"../Utilities/Utilities\";\n// import { DataManager } from \"../Utilities/DataManager\";\n\n\n// type wombTattoosLayersName = \"Zoom\" | \"Big\" | \"Bloom\" | \"BottomSpike\" | \"Flash\" | \"Fly\" | \"Grass\" | \"Grow\" | \"GrowHollow\" | \"HeartSmallOutline\" | \"Heartline\" | \"HeartSmall\" | \"HeartSolid\" | \"HeartWings\" | \"In\" | \"Leaves\" | \"MidSpike\" | \"Ribow\" | \"Sense\" | \"Shake\" | \"SideHearts\" | \"Swim\" | \"Thorn\" | \"ThornOut\" | \"TopSpike\" | \"Venom\" | \"Viper\" | \"Waves\" | \"WingSmall\";\n\nexport class WombTattoosModule extends BaseModule {\n// 功能搭配 高潮余韵与失神 系统\n    public Init(): void {\n\n    }\n\n    public Load(): void {\n\n    }\n\n    public Run(): void {\n        // HookManager.setHook(\"ChatRoomMessage\", 'getChatRoomMessageData', 10, (args) => {\n        //     conDebug({\n        //         name: 'getChatRoomMessageData',\n        //         content: args\n        //     });\n        //     return {args: args}\n        // })\n    }\n\n    public Unload(): void {\n\n    }\n\n    /**\n     * 判断目标角色是否有淫纹\n     */\n    public static haveWombTattoos(C: Character | PlayerCharacter): boolean {\n        //查找WombTattoos\n        for (const item of C.Appearance) {\n            if (item.Asset !== null && item.Asset.Name === \"WombTattoos\") return true;\n        }\n        return false;\n    }\n\n}","import { conDebug } from \"./Utilities\";\n\n\nexport class AssetManager {\n    private static AssetMap = new Map<string, Map<string, unknown>>([\n        ['img', new Map<string, HTMLImageElement>()],\n        ['sound', new Map<string, HTMLAudioElement>()]\n    ]);\n\n    private static readonly IOAssetSrc = 'https://iceriny.github.io/XiaosuBCExpansion'\n    private static readonly suffix = DEBUG ? 'dev' : 'main'\n    private static readonly imgSrcList: string[][] = [\n        ['logo', `${this.IOAssetSrc}/${this.suffix}/Assets/Img/logo.png`]\n    ]\n    private static readonly soundSrcList: string[][] = [\n        ['heartbeat', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/heartbeat.mp3`],\n        ['clock', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/clock.mp3`],\n        ['snapFingers', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/snapFingers.mp3`]\n    ]\n\n\n    private static cacheImg(src: string, name: string): HTMLImageElement {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => {\n            this.AssetMap.get('img')!.set(name, img);\n        }\n        return img;\n    }\n    private static cacheSound(src: string, name: string): HTMLAudioElement {\n        const audio = new Audio();\n        audio.src = src;\n        audio.load();\n        this.AssetMap.get('sound')!.set(name, audio);\n        return audio;\n    }\n\n    public static cacheAssets(): void {\n        for (const src of AssetManager.imgSrcList) {\n            this.cacheImg(src[1], src[0]);\n        }\n        for (const src of AssetManager.soundSrcList) {\n            this.cacheSound(src[1], src[0]);\n        }\n    }\n\n    public static getAssets<T extends HTMLImageElement | HTMLAudioElement>(name: string, type: string): T | void {\n        if (type === 'img') {\n            const assetMap = this.AssetMap.get('img')!;\n            const asset = assetMap.get(name) as T;\n            return asset;\n        }\n        if (type === 'sound') {\n            const assetMap = this.AssetMap.get('sound')!;\n            const asset = assetMap.get(name) as T;\n            return asset;\n        }\n    }\n\n    public static GatImg(name: string): HTMLImageElement {\n        const img = this.AssetMap.get('img')!.get(name) as HTMLImageElement;\n        return img;\n    }\n\n    public static PlayAudio(name: string, volume?: number): void {\n        const vol = volume != null ? volume : Player.AudioSettings?.Volume ?? 1;\n        if (vol > 0) {\n            const audio = this.AssetMap.get('sound')!.get(name) as HTMLAudioElement;\n            audio.volume = Math.min(vol, 1);\n            try {\n                audio.play();\n            } catch (error) {\n                conDebug(`声音播放失败: ${error}   Message: ${audio.error}`)\n            }\n        }\n    }\n}","/** @hook函数工具 */\n// import { ModulePriority } from \"../Models/ModuleInfo\";\nimport { hookFunction, patchFunction, removePatches } from \"./BCSDK\";\n// import * as Utils from \"../Utilities/Utilities\";\n\n/**\n * 完整的钩子项 \n */\ntype CompleteHookItem = [top: HookItem<HookItemContent>, bottom: HookItem<HookItemContent>, topHookSet: Set<string>, removeCallback?: () => void]\n/**\n * Hook管理器\n */\nexport class HookManager {\n\n    /**\n     * 钩子映射表\n     */\n    private static readonly _hookMap: Map<string, CompleteHookItem> = new Map();\n\n    /** 创建一个新的钩子内容项 */\n    private static get NewHookItem(): HookItem<HookItemContent> {\n        return new HookItem<HookItemContent>();\n    }\n\n    /**\n     * 设置钩子函数\n     * @param functionName 函数名\n     * @param name 钩子名\n     * @param priority 钩子优先级\n     * @param code 钩子函数中运行的代码\n     */\n    static setHook(functionName: string, name: string, priority: number, code: (args: unknown[]) => codeResult | void) {\n        // 获取函数对应的钩子项\n        const hookItem = HookManager._hookMap.get(functionName);\n        if (hookItem) {\n            // 如果钩子项存在，则设置钩子函数\n            if (priority >= 0) hookItem[0].add(name, { priority, code });\n            else hookItem[1].add(name, { priority, code });\n        } else {\n            // 如果钩子项不存在，则创建新的钩子项，并设置钩子函数\n            const topItem = this.NewHookItem;\n            const bottom = this.NewHookItem;\n            const _item: CompleteHookItem = [topItem, bottom, new Set()];\n            if (priority > 0) {\n                topItem.add(name, { priority, code });\n                _item[2].add(name);\n            }\n            else bottom.add(name, { priority, code });\n\n            HookManager.addHook(functionName, _item);\n            HookManager._hookMap.set(functionName, _item);\n        }\n    }\n\n    /**\n     * 移除钩子函数\n     * @param functionName 钩子函数名\n     * @param name 钩子名称\n     */\n    static removeHook(functionName: string, name: string) {\n        // 获取HookItem\n        const hookItem = HookManager._hookMap.get(functionName);\n        // 如果HookItem存在\n        if (hookItem) {\n            if (hookItem[2].has(name)) {\n                hookItem[2].delete(name);\n                hookItem[0].delete(name);\n            } else hookItem[1].delete(name);\n\n            if (hookItem[0].size === 0 && hookItem[1].size === 0) {\n                // 如果HookItem为空，则删除HookItem\n                this._hookMap.get(functionName)?.[3]?.()\n                this._hookMap.delete(functionName);\n\n            }\n        }\n    }\n\n    // /**\n    //  * 运行初始的钩子函数Map\n    //  */\n    // static runHook() {\n    //     for (const [functionName, completeHookItem] of HookManager._hookMap.entries()) {\n    //         HookManager.addHook(functionName, completeHookItem);\n    //     }\n    // }\n\n    /**\n     * 用于在运行过程中动态的添加函数hook\n     * @param functionName 需要hook的函数名\n     * @param completeHookItem 添加的函数内容\n     */\n    private static addHook(functionName: string, completeHookItem: CompleteHookItem) {\n        // 调用hookFunction函数，传入需要hook的函数名和参数\n        const removeCallback = hookFunction(functionName, 100, (args, next) => {\n            // 遍历顶部钩子函数\n            const topItemResult: codeResult[] = completeHookItem[0].forEach((item): codeResult | void => {\n                // Utils.conDebug(`${functionName}: name: ${name}`);\n                // 运行钩子函数\n                const itemResult = item.code(args);\n                if (itemResult) {\n                    // 更新参数\n                    args = itemResult.args;\n                    return itemResult;\n                }\n            });\n            // 取出最后一个函数的结果 如果存在则返回结果\n            const topLastResult = topItemResult.length === 0 ? null : topItemResult[topItemResult.length - 1].result;\n            if (topLastResult) return topLastResult;\n\n            // 调用下一个函数并返回结果\n            const result = next(args);\n\n            // 遍历完成钩子的参数\n            const bottomItemResult: codeResult[] = completeHookItem[1].forEach((item): codeResult | void => {\n                // 运行钩子函数\n                const itemResult = item.code(args);\n                if (itemResult) {\n                    // 更新参数\n                    args = itemResult.args;\n                    return itemResult;\n                }\n            });\n            // 取出最后一个函数的结果 如果存在则返回结果\n            const bottomLastResult = bottomItemResult.length === 0 ? null : bottomItemResult[bottomItemResult.length - 1].result;\n            if (bottomLastResult) return bottomLastResult;\n            // 否则返回原函数的结果\n            return result;\n        });\n        completeHookItem[3] = removeCallback;\n    }\n\n    public static patchAdd(functionName: string, patches: Record<string, string | null>) {\n        patchFunction(functionName, patches);\n    }\n    public static patchRemove(functionName: string) {\n        removePatches(functionName);\n    }\n}\n\n/**\n * 钩子项内容\n */\ninterface HookItemContent {\n    priority: number;\n    code: (args: unknown[]) => codeResult | void;\n}\n\ntype codeResult = {\n    args: unknown[];\n    result?: unknown;\n}\n\nclass HookItem<T extends HookItemContent> implements Iterable<T> {\n    // 存储 HookItem 的映射关系\n    private itemMap: { [key: string]: T };\n    // 存储 HookItem 的顺序\n    private itemSequence: string[];\n    // 存储 HookItem 的数量\n    size: number;\n\n    constructor(...item: { name: string, content: T }[]) {\n        // 初始化 itemMap\n        this.itemMap = {}\n        // 初始化 itemSequence\n        this.itemSequence = [];\n        // 初始化 size\n        this.size = 0;\n        item.forEach(item => {\n            this.add(item.name, item.content);\n        })\n    }\n\n    // 添加 HookItem\n    add(name: string, content: T) {\n        // 将 content 添加到 itemMap 中\n        this.itemMap[name] = content;\n        // 查找插入位置\n        let index = this.itemSequence.findIndex(item => this.itemMap[item].priority < content.priority);\n        if (index === -1) {\n            // 如果找不到比插入值更小的元素，说明插入值最小，放在数组末尾\n            index = this.size;\n        }\n        // 使用 splice() 方法插入元素\n        this.itemSequence.splice(index, 0, name);\n        // 更新 size\n        this.size++;\n    }\n\n    // 删除 HookItem\n    delete(name: string) {\n        // 从 itemMap 中删除指定的 HookItem\n        delete this.itemMap[name];\n        // 从 itemSequence 中删除指定的 HookItem\n        const index = this.itemSequence.indexOf(name);\n        this.itemSequence.splice(index, 1);\n        // 更新 size\n        this.size--;\n    }\n\n    // 遍历 HookItem\n    forEach(callback: (value: T, name: string) => codeResult | void): codeResult[] {\n        const resultList: codeResult[] = [];\n        // 遍历 itemSequence，调用回调函数\n        for (const key of this.itemSequence) {\n            const callbackResult = callback(this.itemMap[key], key)\n            if (callbackResult) {\n                resultList.push(callbackResult);\n                if (callbackResult.result) return resultList;\n            }\n        }\n        return resultList;\n    }\n\n    // 实现 Symbol.iterator 方法，返回一个迭代器\n    [Symbol.iterator](): Iterator<T> {\n        let index = 0;\n        const keys = this.itemSequence;\n        const map = this.itemMap\n        return {\n            next(): IteratorResult<T> {\n                if (index < keys.length) {\n                    // 如果还有元素，返回当前元素\n                    return { done: false, value: map[keys[index++]] };\n                } else {\n                    // 如果没有元素，返回结束状态\n                    return { done: true, value: undefined };\n                }\n            }\n        };\n    }\n}","type LocalMessageCSSName = null | 'local-message' | 'trance-message'\nconst selfPlaceholder = '{source}';\n/** 描述中表示目标的占位符 */\n\nconst targetPlaceholder = '{target}';\n/**\n * 包含全局占位符的对象 s:自己  t:目标\n */\nexport const PH = {\n    s: selfPlaceholder,\n    t: targetPlaceholder\n}\nexport class MSGManager {\n    /**\n     * 发送*表情信息\n     * @param msg 要发送的内容\n     * @returns 无\n     */\n    static SendEmote(msg: string | null) {\n        if (msg == null) return;\n        ServerSend(\"ChatRoomChat\", { Content: msg, Type: \"Emote\" })\n    }\n    /**\n     * 发送聊天消息\n     * @param msg 发送的内容\n     * @returns 无\n     */\n    static SendChat(msg: string | null) {\n        if (msg == null) return;\n        ServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n    }\n\n    /**\n     * 发送本地消息\n     * @param msg 发送的消息\n     * @param className 本地消息的样式ClassName\n     * @param timeout 持续时间\n     */\n    static SendLocalMessage(msg: string, className: LocalMessageCSSName = null, timeout: number = 0) {\n        if (className !== null) {\n            msg = `<div class=\"${className}\">${msg}</div>`\n        }\n        if (timeout === 0) ChatRoomSendLocal(msg)\n        else ChatRoomSendLocal(msg, timeout);\n    }\n    /**\n     * 发送动作消息\n     * @param msg 动作消息的内容\n     * @param sourceCharacter 动作的来源 id\n     * @param targetCharacter 动作的目标 id\n     */\n    static SendActivity(msg: string, sourceCharacter: number, targetCharacter?: number) {\n\n        const sourceCharacterObj: Character | undefined = ChatRoomCharacter.find(c => c.MemberNumber == sourceCharacter),\n            targetCharacterObj: Character | undefined = targetCharacter ? ChatRoomCharacter.find(c => c.MemberNumber == targetCharacter) : undefined;\n\n        if (sourceCharacterObj === undefined && targetCharacterObj === undefined) return;\n\n        const sourceCharacterNickname = sourceCharacterObj ? CharacterNickname(sourceCharacterObj) : \"\",\n            targetCharacterNickname = targetCharacterObj ? CharacterNickname(targetCharacterObj) : \"\";\n        const resultDict: ChatMessageDictionary = [\n            { Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSBE_ActMessage\", Text: msg.replaceAll(PH.s, sourceCharacterNickname).replaceAll(PH.t, targetCharacterNickname) }\n        ]\n\n        resultDict.push({ SourceCharacter: sourceCharacter });\n        if (targetCharacter !== undefined) resultDict.push({ TargetCharacter: targetCharacter });\n        ServerSend(\"ChatRoomChat\", {\n            Type: \"Activity\", Content: \"XSBE_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n        });\n    }\n}","import { BaseModule } from \"../Base/BaseModule\";\nimport { AssetManager } from \"../Utilities/AssetManager\";\nimport { DataManager } from \"../Utilities/DataManager\";\nimport { HookManager } from \"../Utilities/HookManager\";\nimport { MSGManager, PH } from \"../Utilities/MessageManager\";\nimport { TimerProcessInjector } from \"../Utilities/TimerProcessInjector\";\nimport { SkillSetNegativeModifier } from \"../Utilities/Utilities\";\n\n\ntype AftertasteEffect = 'relax' | 'weakness' | 'twitch' | 'trance' | 'absentminded'\nexport class ArousalModule extends BaseModule {\n    private _aftertaste: number = 0;\n    /** 对于忍耐高潮时的反应描述 */\n    private descriptionOfEnduranceActivities = [\n        `{source}脚趾一蜷一缩，难耐的交织.`,\n        `{source}闭眼忍耐，鼻息中泄露出粉红的喘息.`,\n        `{source}蜷缩脚趾忍耐着连续的快感.`,\n        `{source}难耐的双腿颤抖着，身体的每一处都充满快感.`,\n        `{source}拼命咬住牙齿，却从鼻腔泄露出诱人的声音.`,\n        `{source}在汹涌的快感下浑身粉红，奋力的想要忍住高潮.`,\n        `{source}浑身颤抖的抵抗高潮的逼近.`\n    ];\n\n    private needSendEnduringMessage = false;\n\n    /** 获取忍耐高潮时的反应描述 */\n    get getEndureDesc(): string {\n        return this.descriptionOfEnduranceActivities[Math.floor(Math.random() * this.descriptionOfEnduranceActivities.length)];\n    }\n    public Run(): void {\n        // 处理本模块的Hook函数\n        this.HookList();\n        // 处理本模块的Patch函数\n        this.patchListHandler();\n        // 处理本模块的TimerProcess\n        this.TimerProcess();\n\n    }\n    public Unload(): void { }\n    public Init(): void { }\n    public Load(): void { }\n\n    public getArousalSettings = (C: Character | PlayerCharacter): ArousalSettingsType | undefined => C.ArousalSettings;\n\n    public getOrgasmStage = (C: Character | PlayerCharacter): number => this.getArousalSettings(C)?.OrgasmStage ?? 0;\n\n    public set Aftertaste(level: number) {\n        DataManager.data.set('aftertaste', level, 'online', true);\n        this._aftertaste = level;\n    }\n    public get Aftertaste() {\n        return this._aftertaste;\n    }\n\n    /**\n     * 处理本模块的Hook函数\n     */\n    private HookList(): void {\n        // 处理高潮余韵等级的增加\n        HookManager.setHook('ActivityOrgasmStart', 'AftertasteSet', 2, () => {\n            const addedNumber = ActivityOrgasmGameResistCount + 1;\n            this.Aftertaste = this._aftertaste + addedNumber;\n            // Player.PoseMapping/////////////\n            if (this._aftertaste > 120) this.Aftertaste = 120;\n            this.AftertasteEffectSetHandler(true);\n        })\n\n        HookManager.setHook('Player.GetSlowLevel', 'aftertasteWeaknessEffect', 2, (args) => {\n            if (Player.RestrictionSettings?.SlowImmunity)\n                return { args: args, result: 0 };\n            else if (this._aftertasteEffectSet.has('weakness')) {\n                let slowLevel = 1;\n                if (this._aftertaste > 55) slowLevel = 2;\n                if (this._aftertaste > 60) slowLevel = 3;\n                if (this._aftertaste > 70) slowLevel = 4;\n\n                if (Player.HasEffect(\"Slow\")) slowLevel++;\n                if (Player.PoseMapping.BodyFull === \"AllFours\") slowLevel += 2;\n                else if (Player.PoseMapping.BodyLower === \"Kneel\") slowLevel += 1;\n                return { args: args, result: slowLevel }\n            }\n            return;\n        })\n    }\n\n    /**\n     * 处理本模块的TimerProcess\n     */\n    private TimerProcess(): void {\n        // 处理边缘增加抵抗高潮难度\n        TimerProcessInjector.add(101, 45000, () => {\n            return !!Player.ArousalSettings\n        }, {\n            code: () => {\n                if (Player.ArousalSettings!.Progress >= 93) {\n                    ActivityOrgasmGameResistCount++;\n                    DataManager.data.set('resistCount', ActivityOrgasmGameResistCount, 'online', true)\n                } else if (Player.ArousalSettings!.Progress < 60 && ActivityOrgasmGameResistCount >= 1) {\n                    ActivityOrgasmGameResistCount--;\n                }\n            },\n            name: \"EdgeTimer\"\n        });\n\n        // 处理高潮余韵的恢复 每15秒回复 1\n        TimerProcessInjector.add(100, 15000, () => {\n            return this._aftertaste > 0;\n        }, {\n            code: () => {\n                this.AftertasteFallBack();\n                this.AftertasteEffectSetHandler(true);\n            },\n            name: \"AftertasteFallBack\"\n        });\n\n        // 处理高潮余韵的无力效果\n        TimerProcessInjector.add(99, 0, () => {\n            return this._aftertaste >= 20;\n        }, {\n            code: () => {\n                if (this._aftertasteEffectSet.has('relax') && SkillGetModifier(Player, 'Bondage') >= 0) {\n                    SkillSetNegativeModifier('Bondage', -5, 5000);\n                    SkillSetNegativeModifier('SelfBondage', -5, 5000);\n                    SkillSetNegativeModifier('LockPicking', -3, 5000);\n                    SkillSetNegativeModifier('Evasion', -8, 5000);\n                    SkillSetNegativeModifier('Willpower', -3, 5000);\n                    SkillSetNegativeModifier('Infiltration', -7, 5000);\n                    SkillSetNegativeModifier('Dressage', -7, 5000);\n                }\n            },\n            name: \"AftertasteEffectHandle\"\n        });\n\n        // 处理高潮余韵的抽搐效果\n        TimerProcessInjector.add(98, 3000, () => {\n            return this._aftertaste >= 70;\n        }, {\n            code: () => {\n                if (this._aftertasteEffectSet.has('twitch')) {\n                    AssetManager.PlayAudio('heartbeat')\n                }\n            },\n            name: \"AftertasteEffectHandle\"\n        });\n\n        // 处理是否需要禁用输入\n        TimerProcessInjector.add(-1, 200, () => {\n            return CurrentScreen == \"ChatRoom\" && Player.MemberNumber !== undefined;\n        }, {\n            code: () => {\n                const orgasmStage = Player.ArousalSettings?.OrgasmStage;\n                if (orgasmStage == 1) {\n                    this.needSendEnduringMessage = true;\n                    if (!this.inputDisabled) {\n                        this.DisableInput(true);\n                    }\n                }\n                else if (orgasmStage == 0) {\n                    this.needSendEnduringMessage = false;\n                    if (this.inputDisabled) {\n                        this.DisableInput(false);\n                    }\n                } else if (orgasmStage == 2) {\n                    this.needSendEnduringMessage = false;\n                }\n            },\n            name: \"DisableInput\"\n        });\n\n        // 处理是否需要发送忍耐的描述\n        TimerProcessInjector.add(-2, 2500, () => {\n            return this.needSendEnduringMessage;\n        }, {\n            code: () => {\n                MSGManager.SendActivity(this.getEndureDesc, Player.MemberNumber!);\n            },\n            name: 'SendEnduringMessage'\n        });\n\n    }\n\n\n    /**\n     * 补丁列表处理\n     */\n    private patchListHandler(): void {\n        // 处理OrgasmStart\n        HookManager.patchAdd(\"ActivityOrgasmStart\",\n            {// XSA补丁处理~ 基础高潮时间为 4~7秒, 每边缘45秒钟增加随机的 300ms ~ 1300ms 的高潮时间。 最多增加 20000ms，也就是最长高潮时间为 27 秒\n                \"C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\":\n                    `if (Player.XSBE && C.IsPlayer()) {\n                const addedTime = (Math.random() + 0.3) * 1000 * ActivityOrgasmGameResistCount;\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (addedTime > 20000 ? 20000 : addedTime) + 4000 + (3000 * Math.random());\n            } else {\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\n            }`,\n                // 高潮时将抵抗难度减半而非变为0\n                \"ActivityOrgasmGameResistCount = 0;\":\n                    \"ActivityOrgasmGameResistCount = Math.round(ActivityOrgasmGameResistCount / 2);\"\n            });\n    }\n\n\n    /**\n     * 处理余韵等级的回落\n     */\n    private AftertasteFallBack(): void {\n        const n = 20 - ActivityOrgasmGameResistCount\n        const fallBackNumber = n <= 0 ? 1 : n;\n        this.Aftertaste = this.Aftertaste - fallBackNumber;\n        if (this._aftertaste < 0) this.Aftertaste = 0;\n    }\n\n    private _aftertasteEffectSet: Set<AftertasteEffect> = new Set();\n    private AftertasteEffectSetHandler(pushToServer: boolean): void {\n        const newAftertasteEffectSet: Set<AftertasteEffect> = new Set()\n        if (this._aftertaste > 20) {\n            newAftertasteEffectSet.add(\"relax\"); //放松\n            MSGManager.SendActivity(`${PH.s}的身体在快感冲击下软了下来。浑身软绵绵的使不上力气。`, Player.MemberNumber!);\n        }\n        if (this._aftertaste > 50) {\n            newAftertasteEffectSet.add(\"weakness\"); // 虚弱\n            MSGManager.SendActivity(`${PH.s}的身体在连续的快感冲击中瘫软起来，似乎已经很难支撑起身体了。`, Player.MemberNumber!);\n        }\n        if (this._aftertaste > 70) {\n            newAftertasteEffectSet.add(\"twitch\"); // 抽搐\n            MSGManager.SendActivity(`连续深度的高潮冲击下，${PH.s}的身体不自觉的开始抽搐，再这么下去...`, Player.MemberNumber!);\n        }\n        if (this._aftertaste > 90) {\n            newAftertasteEffectSet.add(\"trance\"); // 恍惚\n            MSGManager.SendActivity(`高潮过于猛烈，${PH.s}的脑袋已经不清楚了。恍恍惚惚，意识断断续续。`, Player.MemberNumber!);\n        }\n        if (this._aftertaste > 100) {\n            newAftertasteEffectSet.add(\"absentminded\"); // 失能\n            MSGManager.SendActivity(`强大的、连续的、不可抵挡的高潮冲击下，${PH.s}已经无法控制自己的身体。只能在无意识中抽搐着身体，发出细软的声音。这样的话...`, Player.MemberNumber!);\n        }\n        DataManager.data.set('aftertasteEffect', newAftertasteEffectSet, 'online', pushToServer);\n        this._aftertasteEffectSet = newAftertasteEffectSet;\n    }\n\n\n\n\n\n    /** 默认的输入框样式 */\n    inputDefaultStyle: { backgroundColor: string, borderColor: string, borderRadius: string } | undefined = undefined;\n    inputDisabled: boolean = false;\n    /**\n     * 获取{@link HTMLTextAreaElement}的默认样式，根据{@param isAbsent}决定是否禁用或取消禁用\n     * @param isAbsent 是否为失能状态\n     */\n    private DisableInput(isAbsent: boolean): void {\n        const inputElement: HTMLTextAreaElement | null = document.getElementById(\"InputChat\") as HTMLTextAreaElement;\n        if (!inputElement) return;\n        if (isAbsent) {\n            if (!inputElement.readOnly) {\n                if (!this.inputDefaultStyle) {\n                    this.inputDefaultStyle = {\n                        backgroundColor: inputElement.style.backgroundColor,\n                        borderColor: inputElement.style.borderColor,\n                        borderRadius: inputElement.style.borderRadius\n                    };\n                }\n                inputElement.readOnly = true;\n                this.inputDisabled = true;\n                inputElement.style.backgroundColor = \"#8d6f83\";\n                inputElement.style.borderColor = \"#ea44a9\";\n                inputElement.style.borderRadius = \"5px\";\n            }\n        } else {\n            if (inputElement.readOnly) {\n                inputElement.readOnly = false;\n                this.inputDisabled = false;\n                if (this.inputDefaultStyle) {\n                    inputElement.style.backgroundColor = this.inputDefaultStyle.backgroundColor;\n                    inputElement.style.borderColor = this.inputDefaultStyle.borderColor;\n                    inputElement.style.borderRadius = this.inputDefaultStyle.borderRadius;\n                }\n            }\n        }\n    }\n}","/** @模块加载器 */\n\nimport { BaseModule } from \"../../Base/BaseModule\";\nimport { WombTattoosModule } from \"../../Modules/WombTattoos\";\nimport * as MInfo from \"../../Models/ModuleInfo\";\nimport { conDebug } from \"../Utilities\";\nimport { ArousalModule } from \"../../Modules/Arousal\";\n\nexport class ModulesLoader {\n    /** @模块集合 用于加载模块 */\n    private static modules = new Map<MInfo.moduleName, BaseModule>();\n    /** @模块列表 用于注册模块 并排序*/\n    private static modulesList: BaseModule[] = [];\n\n    /** 表示是否成功加载 */\n    public static successfulLoaded = false;\n    /** 加载模块数量 */\n    private static loadedCount = 0;\n    private static readonly fullLoadedCount = 2;\n\n    /** @注册模块 */\n    public static registerModule() {\n        for (const n in this.modulesBuilder) {\n            if (n === 'base') continue;\n            const module = this.modulesBuilder[n as MInfo.moduleName]();\n            this.modulesList.push(module);\n        }\n        this.modulesList.sort((a, b) => {\n            if (a.Info.priority === b.Info.priority) {\n                return 0;\n            }\n            return a.Info.priority > b.Info.priority ? 1 : -1;\n        });\n        for (const m of this.modulesList) this.modules.set(m.Info.name, m);\n    }\n\n    /** @初始化模块 */\n    public static initModules() {\n        for (const [name, module] of this.modules) {\n            module.Init();\n            conDebug(`模块 ${name} 初始化完成`);\n        }\n        conDebug(`模块初始化结束`);\n    }\n\n    /** @加载模块 */\n    public static loadModules() {\n        for (const [name, m] of this.modules) {\n            m.Load();\n            this.loadedCount++;\n            conDebug(`模块 ${name} 加载完成`);\n        }\n        conDebug(`模块加载结束 ${this.loadedCount}/${this.fullLoadedCount}`);\n        if (this.loadedCount === this.fullLoadedCount) {\n            this.successfulLoaded = true;\n            conDebug(`模块加载完成!`);\n        }\n    }\n\n    /** @运行模块 */\n    public static runModules() {\n        for (const [name, module] of this.modules) {\n            module.Run();\n            conDebug(`模块 ${name} 运行完成`);\n        }\n        conDebug(`模块运行结束`);\n    }\n\n    /**\n     * 获取已加载的特定模块\n     * @param name 需要获取的模块名字\n     * @returns 获取到的模块\n     */\n    public static getModule<T extends BaseModule>(name: MInfo.moduleName): T {\n        return this.modules.get(name) as T;\n    }\n\n\n    /** @模块生成器 用于生成模块 */\n    private static modulesBuilder: { [key in MInfo.moduleName]: () => BaseModule } = {\n        base: () => { throw new Error(\"BaseModule 不应该被创建\") },\n        WombTattoosModule: () => {\n            return new WombTattoosModule({\n                name: \"WombTattoosModule\",\n                priority: MInfo.ModulePriority.Observe,\n                description: \"淫纹相关的模块。修改与拓展了游戏淫纹的功能。\"\n            })\n        },\n        ArousalModule: () => {\n            return new ArousalModule({\n                name: \"ArousalModule\",\n                priority: MInfo.ModulePriority.Observe,\n                description: \"Arousal模块。修改与拓展了游戏Arousal的功能。包括高潮等机制。\"\n            })\n        }\n    }\n\n}","import { hookFunction } from \"./Utilities/BCSDK\";\nimport { conDebug, DebugMSGType } from \"./Utilities/Utilities\";\nimport { DataManager } from \"./Utilities/DataManager\";\nimport { TimerProcessInjector } from \"./Utilities/TimerProcessInjector\";\nimport { ModulesLoader } from \"./Utilities/Modules/ModulesLoader\";\nimport { AssetManager } from \"./Utilities/AssetManager\";\nimport { HookManager } from \"./Utilities/HookManager\";\n\nfunction initWait() {\n    conDebug({\n        name: \"Start Init\",\n        type: DebugMSGType.Workflow_Log,\n        content: \"Init wait\"\n    });\n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        // 加载模组\n        hookFunction('LoginResponse', -100, (args, next) => {\n            const result = next(args);\n            conDebug({\n                name: `Init! Login Response caught`,\n                content: args,\n                type: DebugMSGType.Workflow_Log\n            });\n            const response = args[0] as Character | string;\n            if (response && typeof response === 'object' && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n                init();\n            }\n            return result;\n        });\n    }\n}\n\nfunction init() {\n    if (ModulesLoader.successfulLoaded) return;\n\n    AssetManager.cacheAssets();\n    \n    HookManager.setHook('ChatRoomSync', 'Test HookManager', -1, (args) => {\n        AssetManager.PlayAudio('heartbeat')\n\n        HookManager.removeHook('ChatRoomSync', 'Test HookManager');\n        return {\n            args: args\n        }\n    })\n\n\n    // 数据处理\n    DataManager.Init()\n    conDebug({\n        name: \"Data Init Complete\",\n        type: DebugMSGType.Workflow_Log,\n        content: DataManager.data\n    });\n    TimerProcessInjector.Init();\n\n    ModulesLoader.registerModule();\n    ModulesLoader.initModules();\n    ModulesLoader.loadModules();\n    ModulesLoader.runModules();\n\n    TimerProcessInjector.Load();\n    TimerProcessInjector.Run();\n\n}\n\n\n\ninitWait();\n"],"names":["e","o","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","d","warn","s","p","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","c","precomputed","window","split","slice","join","encode","padStart","toUpperCase","l","originalHash","Object","assign","router","context","contextProperty","keys","f","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","allowReplace","repository","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","startsWith","_shim10register","defineProperty","exports","value","bcModSDK","XSBE_VERSION","target","DebugMSGType","conDebug","msg","isError","color","style","DEBUG","result","type","DebugLog","content","time","Date","toLocaleString","ModVersion","debug","theColor","SkillSetNegativeModifier","duration","bondage","SkillGetLevelReal","Player","SkillSetModifier","SkillGetModifier","ExtensionStorage","ExtensionSettings","XSBE","Data","constructor","data","onlineKeys","settingKeys","localKeys","prefix","defaultData","OnlineSharedSettings","CharacterOnlineSharedSettings","k","dataSetHandle","compareServerDataAndLocalDataAndUpdate","updateExtensionSettings","serverExtensionSettingObject","getExtensionSettings","serverTimestamp","localDataObject","getLocalStorage","localTimestamp","hasOwnProperty","dataValue","serverValue","localValue","key","dataType","upload","localStorage","setItem","getLocalKeyFromKey","JSON","stringify","Settings","ExtensionSettingsObject","LZString","compressToBase64","ServerPlayerExtensionSettingsSync","downloadExtensionSettings","parse","decompressFromBase64","localStorageObject","getItem","OnlineData","DataManager","Init","private_data","timestamp","CommonTime","enabled","hasWombTattoos","aftertaste","XSBE_Data","getCharacterData","C","IsPlayer","TimerProcessInjector","ProcessSequence","TimerProcessInjectorSequence","RegisteredProcess","ProcessCodeMap","activatedProcess","processSortList","Load","sortProcessList","item","itemInterval","interval","nextInterval","Run","args","next","currentTime","now","nextTriggerTime","condition","code","run","b","codeItem","codeMap","remove","runList","ModulePriority","BaseModule","info","Info","Bottom","description","Loaded","letSuccessfullyLoad","WombTattoosModule","Unload","haveWombTattoos","Appearance","Asset","Name","AssetManager","cacheImg","src","img","Image","onload","AssetMap","cacheSound","audio","Audio","load","cacheAssets","_a","imgSrcList","soundSrcList","getAssets","GatImg","PlayAudio","volume","vol","AudioSettings","Volume","Math","min","play","IOAssetSrc","suffix","HookManager","NewHookItem","HookItem","setHook","functionName","hookItem","_hookMap","topItem","bottom","_item","addHook","removeHook","completeHookItem","removeCallback","topItemResult","forEach","itemResult","topLastResult","bottomItemResult","bottomLastResult","patchAdd","patchRemove","itemMap","itemSequence","index","findIndex","callback","resultList","callbackResult","Symbol","iterator","done","undefined","PH","MSGManager","SendEmote","ServerSend","Content","Type","SendChat","SendLocalMessage","className","timeout","ChatRoomSendLocal","SendActivity","sourceCharacter","targetCharacter","sourceCharacterObj","ChatRoomCharacter","find","MemberNumber","targetCharacterObj","sourceCharacterNickname","CharacterNickname","targetCharacterNickname","resultDict","Tag","Text","SourceCharacter","TargetCharacter","Dictionary","Sender","ArousalModule","_aftertaste","descriptionOfEnduranceActivities","needSendEnduringMessage","getArousalSettings","ArousalSettings","getOrgasmStage","OrgasmStage","_aftertasteEffectSet","inputDefaultStyle","inputDisabled","getEndureDesc","floor","random","HookList","patchListHandler","TimerProcess","Aftertaste","level","addedNumber","ActivityOrgasmGameResistCount","AftertasteEffectSetHandler","RestrictionSettings","SlowImmunity","slowLevel","HasEffect","PoseMapping","BodyFull","BodyLower","Progress","AftertasteFallBack","CurrentScreen","orgasmStage","DisableInput","fallBackNumber","pushToServer","newAftertasteEffectSet","isAbsent","inputElement","document","getElementById","readOnly","backgroundColor","borderColor","borderRadius","ModulesLoader","registerModule","modulesBuilder","module","modulesList","modules","initModules","loadModules","loadedCount","fullLoadedCount","successfulLoaded","runModules","getModule","base","MInfo.ModulePriority","Observe","Workflow_Log","response","AccountName"],"mappings":"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","x_google_ignoreList":[0]}