!function(){"use strict";const XSBE_VERSION="v0.0.1",DEBUG=!1;function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var exports,bcmodsdk={};exports=bcmodsdk,function(){const e="1.1.0";function o(e){alert("Mod ERROR:\n"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&"object"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\nPattern:\n${o}\nPatch1:\n${t.get(o)||""}\nPatch2:\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll("\r\n","\n");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(".");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(".")} is not object`);const d=o[a[a.length-1]];if("function"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,"0").toUpperCase()}(d.toString().replaceAll("\r\n","\n")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){"string"==typeof e&&"string"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&"object"==typeof e||o("Failed to register mod: Expected info object, got "+typeof e),"string"==typeof e.name&&e.name||o("Failed to register mod: Expected name to be non-empty string, got "+typeof e.name);let i=`'${e.name}'`;"string"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,"string"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&"string"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&"object"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\nWas the mod loaded multiple times?`),u(d));const s=e=>{"string"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);"number"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),"function"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))"string"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),"string"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>("string"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o("Failed to init Mod SDK: Name already in use"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith("1.0.")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&"object"==typeof o&&"string"==typeof o.name&&"string"==typeof o.version?e.registerMod(o.name,o.version,"object"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=y}();const bcModSDK=getDefaultExportFromCjs(bcmodsdk).registerMod({name:"XSBE",fullName:"Xiaosu's BC Expansion",version:XSBE_VERSION.startsWith("v")?XSBE_VERSION.slice(1):XSBE_VERSION,repository:"https://github.com/iceriny/XiaosuBCExpansion"});function hookFunction(target,priority,hook){return bcModSDK.hookFunction(target,priority,hook)}var DebugMSGType;function conDebug(msg,color=null,style=null){if(!1===DEBUG)return;const result="string"==typeof msg?{name:"XiaoSuActivity_Debug",type:DebugMSGType.DebugLog,content:msg,time:(new Date).toLocaleString(),ModVersion:XSBE_VERSION}:{name:msg.name,type:msg.type,content:msg.content,time:(new Date).toLocaleString(),ModVersion:XSBE_VERSION};style?console.debug("%c小酥的模组信息: ",style,result):(color&&(style=`background-color: ${color}; font-weight: bold;`),console.debug("%c小酥的模组信息: ","background-color: rgba(191, 154, 175, 1); font-weight: bold;",result))}function SkillSetNegativeModifier(name,value,duration){const bondage=SkillGetLevelReal(Player,name);SkillSetModifier(Player,name,bondage+SkillGetModifier(Player,name)-value<=0?-bondage:-value,duration)}!function(DebugMSGType){DebugMSGType[DebugMSGType.DebugLog=0]="DebugLog",DebugMSGType[DebugMSGType.Workflow_Log=1]="Workflow_Log"}(DebugMSGType||(DebugMSGType={}));const ExtensionStorage=()=>Player.ExtensionSettings?.XSBE;class Data{constructor(data,onlineKeys,settingKeys,localKeys){this.data=data,this.prefix="XSBE_",this.onlineKeys=new Set(onlineKeys),this.settingKeys=new Set(settingKeys),this.localKeys=new Set(localKeys),Player.XSBE||(Player.XSBE=Data.defaultData.XSBE),Player.OnlineSharedSettings?.XSBE||(Player.OnlineSharedSettings.XSBE=Data.defaultData.CharacterOnlineSharedSettings.XSBE);for(const k in this.data)this.dataSetHandle(k,this.data[k],!1);ExtensionStorage()?this.compareServerDataAndLocalDataAndUpdate():this.updateExtensionSettings()}compareServerDataAndLocalDataAndUpdate(){const serverExtensionSettingObject=this.getExtensionSettings(),serverTimestamp=serverExtensionSettingObject.timestamp??0,localDataObject=this.getLocalStorage(),localTimestamp=localDataObject.timestamp??0;if(serverExtensionSettingObject)if(serverTimestamp>=localTimestamp){for(const k in serverExtensionSettingObject)if(Object.hasOwnProperty.call(this.data,k)){if("version"==k)continue;const dataValue=this.data[k],serverValue=serverExtensionSettingObject[k];dataValue!==serverValue&&(this.data[k]=serverValue)}}else for(const k in localDataObject)if(Object.hasOwnProperty.call(this.data,k)){if("version"==k)continue;const dataValue=this.data[k],localValue=localDataObject[k];dataValue!==localValue&&(this.data[k]=localValue)}}get(key){return this.data[key]}set(key,value,dataType,upload=!1){if(this.data[key]=value,dataType)switch(dataType){case"online":this.onlineKeys.add(key),this.localKeys.add(key);break;case"setting":this.settingKeys.add(key),this.localKeys.add(key);break;case"local":this.localKeys.add(key)}this.dataSetHandle(key,value,upload)}dataSetHandle(key,value,upload){this.localKeys.has(key)?(localStorage.setItem(this.getLocalKeyFromKey(key),JSON.stringify(value)),this.settingKeys.has(key)?Player.XSBE.Settings[key]=value:upload&&this.onlineKeys.has(key)?(Player.OnlineSharedSettings&&(Player.OnlineSharedSettings.XSBE[key]=value),Player.XSBE[key]=value,this.updateExtensionSettings()):Player.XSBE[key]=value):Player.XSBE[key]=value}updateExtensionSettings(){const ExtensionSettingsObject={};for(const key in this.data)Object.hasOwnProperty.call(this.data,key)&&this.localKeys.has(key)&&(ExtensionSettingsObject[key]=this.data[key]);ExtensionStorage()||(Player.ExtensionSettings.XSBE=""),Player.ExtensionSettings.XSBE=LZString.compressToBase64(JSON.stringify(ExtensionSettingsObject)),ServerPlayerExtensionSettingsSync("XSBE")}downloadExtensionSettings(){if(ExtensionStorage()){const ExtensionSettingsObject=this.getExtensionSettings();for(const key in ExtensionSettingsObject)Object.hasOwnProperty.call(this.data,key)&&this.set(key,ExtensionSettingsObject[key])}}getExtensionSettings(){return JSON.parse(LZString.decompressFromBase64(ExtensionStorage())??"")}getLocalStorage(){const localStorageObject={};for(const k of this.localKeys){const value=localStorage.getItem(this.getLocalKeyFromKey(k));value&&(localStorageObject[k]=JSON.parse(value))}return localStorageObject}getLocalKeyFromKey(key){return`${this.prefix}${key}`}}Data.defaultData={XSBE:{Settings:{},OnlineData:{}},CharacterOnlineSharedSettings:{XSBE:{}}};class DataManager{static Init(){DataManager.private_data=new Data({version:XSBE_VERSION,timestamp:CommonTime(),enabled:!1,hasWombTattoos:!1,aftertaste:0},["hasWombTattoos","aftertaste"],["enabled"],["version","timestamp","hasWombTattoos","enabled","aftertaste"]),window.XSBE_Data=DataManager.private_data}static get data(){return DataManager.private_data}static getCharacterData(C){return C.IsPlayer()?this.data:C.OnlineSharedSettings?.XSBE}}class TimerProcessInjector{static Init(){this.ProcessSequence=new TimerProcessInjectorSequence,this.RegisteredProcess=new Map,this.ProcessCodeMap=new Map,this.activatedProcess=[],this.processSortList=[]}static Load(){this.sortProcessList();for(const name of this.processSortList){const item=this.RegisteredProcess.get(name),itemInterval=item.interval;item.nextInterval="function"==typeof itemInterval?itemInterval():itemInterval}}static Run(){hookFunction("TimerProcess",100,((args,next)=>{this.activatedProcess=[];const currentTime=Date.now();for(const name of this.processSortList){const item=this.RegisteredProcess.get(name);0!=item.interval?(item.nextTriggerTime<=currentTime&&(item.nextTriggerTime=currentTime+item.nextInterval,item.condition()&&this.activatedProcess.push(name)),"function"==typeof item.interval&&(item.nextInterval=item.interval())):this.activatedProcess.push(name)}this.ProcessSequence.clear();for(const name of this.activatedProcess)this.ProcessSequence.add({code:this.ProcessCodeMap.get(name),name:name});return this.ProcessSequence.run(this.activatedProcess),next(args)}))}static sortProcessList(){this.processSortList.sort(((a,b)=>this.RegisteredProcess.get(b).priority-this.RegisteredProcess.get(a).priority))}static add(priority,interval,condition,codeItem){this.RegisteredProcess.has(codeItem.name)||(this.RegisteredProcess.set(codeItem.name,{interval:interval,nextInterval:-1,condition:condition,priority:priority,nextTriggerTime:0}),this.ProcessCodeMap.set(codeItem.name,codeItem.code),this.processSortList.push(codeItem.name))}}class TimerProcessInjectorSequence{constructor(){this.codeMap=new Map,this.size=0}add(codeItem){this.codeMap.has(codeItem.name)||(this.codeMap.set(codeItem.name,codeItem),this.size++)}has(name){return this.codeMap.has(name)}remove(name){this.codeMap.delete(name),this.size--}clear(){this.codeMap.clear(),this.size=0}run(runList){for(const name of runList)this.codeMap.get(name)?.code()}}var ModulePriority,_a;!function(ModulePriority){ModulePriority[ModulePriority.Bottom=-100]="Bottom",ModulePriority[ModulePriority.Observe=0]="Observe",ModulePriority[ModulePriority.AddBehavior=1]="AddBehavior",ModulePriority[ModulePriority.ModifyBehavior=5]="ModifyBehavior",ModulePriority[ModulePriority.OverrideBehavior=10]="OverrideBehavior",ModulePriority[ModulePriority.Top=100]="Top"}(ModulePriority||(ModulePriority={}));class BaseModule{constructor(info){this.Info={name:"base",priority:ModulePriority.Bottom,description:"模块基类，所有的模块都继承这个模块"},this.Loaded=!1,this.Info=info}letSuccessfullyLoad(){this.Loaded=!0}}class WombTattoosModule extends BaseModule{Init(){}Load(){}Run(){}Unload(){}static haveWombTattoos(C){for(const item of C.Appearance)if(null!==item.Asset&&"WombTattoos"===item.Asset.Name)return!0;return!1}}class AssetManager{static cacheImg(src,name){const img=new Image;return img.src=src,img.onload=()=>{this.AssetMap.get("img").set(name,img)},img}static cacheSound(src,name){const audio=new Audio;return audio.src=src,audio.load(),this.AssetMap.get("sound").set(name,audio),audio}static cacheAssets(){for(const src of _a.imgSrcList)this.cacheImg(src[1],src[0]);for(const src of _a.soundSrcList)this.cacheSound(src[1],src[0])}static getAssets(name,type){if("img"===type){return this.AssetMap.get("img").get(name)}if("sound"===type){return this.AssetMap.get("sound").get(name)}}static GatImg(name){return this.AssetMap.get("img").get(name)}static PlayAudio(name,volume){const vol=null!=volume?volume:Player.AudioSettings?.Volume??1;if(vol>0){const audio=this.AssetMap.get("sound").get(name);audio.volume=Math.min(vol,1),audio.play()}}}_a=AssetManager,AssetManager.AssetMap=new Map([["img",new Map],["sound",new Map]]),AssetManager.IOAssetSrc="https://iceriny.github.io/XiaosuBCExpansion/",AssetManager.suffix=DEBUG?"dev":"main",AssetManager.imgSrcList=[["logo",`${_a.IOAssetSrc}/${_a.suffix}/Assets/Img/logo.png`]],AssetManager.soundSrcList=[["heartbeat",`${_a.IOAssetSrc}/${_a.suffix}/Assets/Audio/heartbeat.mp3`],["clock",`${_a.IOAssetSrc}/${_a.suffix}/Assets/Audio/clock.mp3`],["snapFingers",`${_a.IOAssetSrc}/${_a.suffix}/Assets/Audio/snapFingers.mp3`]];class HookManager{static get NewHookItem(){return new HookItem}static setHook(functionName,name,priority,code){const hookItem=HookManager._hookMap.get(functionName);if(hookItem)priority>=0?hookItem[0].add(name,{priority:priority,code:code}):hookItem[1].add(name,{priority:priority,code:code});else{const topItem=this.NewHookItem,bottom=this.NewHookItem,_item=[topItem,bottom,new Set];priority>0?(topItem.add(name,{priority:priority,code:code}),_item[2].add(name)):bottom.add(name,{priority:priority,code:code}),HookManager.addHook(functionName,_item),HookManager._hookMap.set(functionName,_item)}}static removeHook(functionName,name){const hookItem=HookManager._hookMap.get(functionName);hookItem&&(hookItem[2].has(name)?(hookItem[2].delete(name),hookItem[0].delete(name)):hookItem[1].delete(name),0===hookItem[0].size&&0===hookItem[1].size&&(this._hookMap.get(functionName)?.[3]?.(),this._hookMap.delete(functionName)))}static addHook(functionName,completeHookItem){const removeCallback=hookFunction(functionName,100,((args,next)=>{const topItemResult=completeHookItem[0].forEach((item=>{const itemResult=item.code(args);if(itemResult)return args=itemResult.args,itemResult})),topLastResult=0===topItemResult.length?null:topItemResult[topItemResult.length-1].result;if(topLastResult)return topLastResult;const result=next(args),bottomItemResult=completeHookItem[1].forEach((item=>{const itemResult=item.code(args);if(itemResult)return args=itemResult.args,itemResult})),bottomLastResult=0===bottomItemResult.length?null:bottomItemResult[bottomItemResult.length-1].result;return bottomLastResult||result}));completeHookItem[3]=removeCallback}static patchAdd(functionName,patches){!function(functionName,patches){bcModSDK.patchFunction(functionName,patches)}(functionName,patches)}static patchRemove(functionName){!function(functionName){bcModSDK.removePatches(functionName)}(functionName)}}HookManager._hookMap=new Map;class HookItem{constructor(...item){this.itemMap={},this.itemSequence=[],this.size=0,item.forEach((item=>{this.add(item.name,item.content)}))}add(name,content){this.itemMap[name]=content;let index=this.itemSequence.findIndex((item=>this.itemMap[item].priority<content.priority));-1===index&&(index=this.size),this.itemSequence.splice(index,0,name),this.size++}delete(name){delete this.itemMap[name];const index=this.itemSequence.indexOf(name);this.itemSequence.splice(index,1),this.size--}forEach(callback){const resultList=[];for(const key of this.itemSequence){const callbackResult=callback(this.itemMap[key],key);if(callbackResult&&(resultList.push(callbackResult),callbackResult.result))return resultList}return resultList}[Symbol.iterator](){let index=0;const keys=this.itemSequence,map=this.itemMap;return{next:()=>index<keys.length?{done:!1,value:map[keys[index++]]}:{done:!0,value:void 0}}}}const PH_s="{source}",PH_t="{target}";class MSGManager{static SendEmote(msg){null!=msg&&ServerSend("ChatRoomChat",{Content:msg,Type:"Emote"})}static SendChat(msg){null!=msg&&ServerSend("ChatRoomChat",{Type:"Chat",Content:msg})}static SendLocalMessage(msg,className=null,timeout=0){null!==className&&(msg=`<div class="${className}">${msg}</div>`),0===timeout?ChatRoomSendLocal(msg):ChatRoomSendLocal(msg,timeout)}static SendActivity(msg,sourceCharacter,targetCharacter){const sourceCharacterObj=ChatRoomCharacter.find((c=>c.MemberNumber==sourceCharacter)),targetCharacterObj=targetCharacter?ChatRoomCharacter.find((c=>c.MemberNumber==targetCharacter)):void 0;if(void 0===sourceCharacterObj&&void 0===targetCharacterObj)return;const sourceCharacterNickname=sourceCharacterObj?CharacterNickname(sourceCharacterObj):"",targetCharacterNickname=targetCharacterObj?CharacterNickname(targetCharacterObj):"",resultDict=[{Tag:"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSBE_ActMessage",Text:msg.replaceAll(PH_s,sourceCharacterNickname).replaceAll(PH_t,targetCharacterNickname)}];resultDict.push({SourceCharacter:sourceCharacter}),void 0!==targetCharacter&&resultDict.push({TargetCharacter:targetCharacter}),ServerSend("ChatRoomChat",{Type:"Activity",Content:"XSBE_ActMessage",Dictionary:resultDict,Sender:sourceCharacter})}}class ArousalModule extends BaseModule{constructor(){super(...arguments),this._aftertaste=0,this.descriptionOfEnduranceActivities=["{source}脚趾一蜷一缩，难耐的交织.","{source}闭眼忍耐，鼻息中泄露出粉红的喘息.","{source}蜷缩脚趾忍耐着连续的快感.","{source}难耐的双腿颤抖着，身体的每一处都充满快感.","{source}拼命咬住牙齿，却从鼻腔泄露出诱人的声音.","{source}在汹涌的快感下浑身粉红，奋力的想要忍住高潮.","{source}浑身颤抖的抵抗高潮的逼近."],this.needSendEnduringMessage=!1,this.getArousalSettings=C=>C.ArousalSettings,this.getOrgasmStage=C=>this.getArousalSettings(C)?.OrgasmStage??0,this._aftertasteEffectSet=new Set,this.inputDefaultStyle=void 0,this.inputDisabled=!1}get getEndureDesc(){return this.descriptionOfEnduranceActivities[Math.floor(Math.random()*this.descriptionOfEnduranceActivities.length)]}Run(){this.HookList(),this.patchListHandler(),this.TimerProcess()}Unload(){}Init(){}Load(){}set Aftertaste(level){DataManager.data.set("aftertaste",level,"online",!0),this._aftertaste=level}get Aftertaste(){return this._aftertaste}HookList(){HookManager.setHook("ActivityOrgasmStart","AftertasteSet",2,(()=>{const addedNumber=ActivityOrgasmGameResistCount+1;this.Aftertaste=this._aftertaste+addedNumber,this._aftertaste>120&&(this.Aftertaste=120),this.AftertasteEffectSetHandler(!0)})),HookManager.setHook("Player.GetSlowLevel","aftertasteWeaknessEffect",2,(args=>{if(Player.RestrictionSettings?.SlowImmunity)return{args:args,result:0};if(this._aftertasteEffectSet.has("weakness")){let slowLevel=1;return this._aftertaste>55&&(slowLevel=2),this._aftertaste>60&&(slowLevel=3),this._aftertaste>70&&(slowLevel=4),Player.HasEffect("Slow")&&slowLevel++,"AllFours"===Player.PoseMapping.BodyFull?slowLevel+=2:"Kneel"===Player.PoseMapping.BodyLower&&(slowLevel+=1),{args:args,result:slowLevel}}}))}TimerProcess(){TimerProcessInjector.add(101,45e3,(()=>!!Player.ArousalSettings),{code:()=>{Player.ArousalSettings.Progress>=93?(ActivityOrgasmGameResistCount++,DataManager.data.set("resistCount",ActivityOrgasmGameResistCount,"online",!0)):Player.ArousalSettings.Progress<60&&ActivityOrgasmGameResistCount>=1&&ActivityOrgasmGameResistCount--},name:"EdgeTimer"}),TimerProcessInjector.add(100,15e3,(()=>this._aftertaste>0),{code:()=>{this.AftertasteFallBack(),this.AftertasteEffectSetHandler(!0)},name:"AftertasteFallBack"}),TimerProcessInjector.add(99,0,(()=>this._aftertaste>=20),{code:()=>{this._aftertasteEffectSet.has("relax")&&SkillGetModifier(Player,"Bondage")>=0&&(SkillSetNegativeModifier("Bondage",-5,5e3),SkillSetNegativeModifier("SelfBondage",-5,5e3),SkillSetNegativeModifier("LockPicking",-3,5e3),SkillSetNegativeModifier("Evasion",-8,5e3),SkillSetNegativeModifier("Willpower",-3,5e3),SkillSetNegativeModifier("Infiltration",-7,5e3),SkillSetNegativeModifier("Dressage",-7,5e3))},name:"AftertasteEffectHandle"}),TimerProcessInjector.add(98,3e3,(()=>this._aftertaste>=70),{code:()=>{this._aftertasteEffectSet.has("twitch")&&AssetManager.PlayAudio("heartbeat")},name:"AftertasteEffectHandle"}),TimerProcessInjector.add(-1,200,(()=>"ChatRoom"==CurrentScreen&&void 0!==Player.MemberNumber),{code:()=>{const orgasmStage=Player.ArousalSettings?.OrgasmStage;1==orgasmStage?(this.needSendEnduringMessage=!0,this.inputDisabled||this.DisableInput(!0)):0==orgasmStage?(this.needSendEnduringMessage=!1,this.inputDisabled&&this.DisableInput(!1)):2==orgasmStage&&(this.needSendEnduringMessage=!1)},name:"DisableInput"}),TimerProcessInjector.add(-2,2500,(()=>this.needSendEnduringMessage),{code:()=>{MSGManager.SendActivity(this.getEndureDesc,Player.MemberNumber)},name:"SendEnduringMessage"})}patchListHandler(){HookManager.patchAdd("ActivityOrgasmStart",{"C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;":"if (Player.XSBE && C.IsPlayer()) {\n                const addedTime = (Math.random() + 0.3) * 1000 * ActivityOrgasmGameResistCount;\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (addedTime > 20000 ? 20000 : addedTime) + 4000 + (3000 * Math.random());\n            } else {\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\n            }","ActivityOrgasmGameResistCount = 0;":"ActivityOrgasmGameResistCount = Math.round(ActivityOrgasmGameResistCount / 2);"})}AftertasteFallBack(){const n=20-ActivityOrgasmGameResistCount,fallBackNumber=n<=0?1:n;this.Aftertaste=this.Aftertaste-fallBackNumber,this._aftertaste<0&&(this.Aftertaste=0)}AftertasteEffectSetHandler(pushToServer){const newAftertasteEffectSet=new Set;this._aftertaste>20&&(newAftertasteEffectSet.add("relax"),MSGManager.SendActivity(`${PH_s}的身体在快感冲击下软了下来。浑身软绵绵的使不上力气。`,Player.MemberNumber)),this._aftertaste>50&&(newAftertasteEffectSet.add("weakness"),MSGManager.SendActivity(`${PH_s}的身体在连续的快感冲击中瘫软起来，似乎已经很难支撑起身体了。`,Player.MemberNumber)),this._aftertaste>70&&(newAftertasteEffectSet.add("twitch"),MSGManager.SendActivity(`连续深度的高潮冲击下，${PH_s}的身体不自觉的开始抽搐，再这么下去...`,Player.MemberNumber)),this._aftertaste>90&&(newAftertasteEffectSet.add("trance"),MSGManager.SendActivity(`高潮过于猛烈，${PH_s}的脑袋已经不清楚了。恍恍惚惚，意识断断续续。`,Player.MemberNumber)),this._aftertaste>100&&(newAftertasteEffectSet.add("absentminded"),MSGManager.SendActivity(`强大的、连续的、不可抵挡的高潮冲击下，${PH_s}已经无法控制自己的身体。只能在无意识中抽搐着身体，发出细软的声音。这样的话...`,Player.MemberNumber)),DataManager.data.set("aftertasteEffect",newAftertasteEffectSet,"online",pushToServer),this._aftertasteEffectSet=newAftertasteEffectSet}DisableInput(isAbsent){const inputElement=document.getElementById("InputChat");inputElement&&(isAbsent?inputElement.readOnly||(this.inputDefaultStyle||(this.inputDefaultStyle={backgroundColor:inputElement.style.backgroundColor,borderColor:inputElement.style.borderColor,borderRadius:inputElement.style.borderRadius}),inputElement.readOnly=!0,this.inputDisabled=!0,inputElement.style.backgroundColor="#8d6f83",inputElement.style.borderColor="#ea44a9",inputElement.style.borderRadius="5px"):inputElement.readOnly&&(inputElement.readOnly=!1,this.inputDisabled=!1,this.inputDefaultStyle&&(inputElement.style.backgroundColor=this.inputDefaultStyle.backgroundColor,inputElement.style.borderColor=this.inputDefaultStyle.borderColor,inputElement.style.borderRadius=this.inputDefaultStyle.borderRadius)))}}class ModulesLoader{static registerModule(){for(const n in this.modulesBuilder){if("base"===n)continue;const module=this.modulesBuilder[n]();this.modulesList.push(module)}this.modulesList.sort(((a,b)=>a.Info.priority===b.Info.priority?0:a.Info.priority>b.Info.priority?1:-1));for(const m of this.modulesList)this.modules.set(m.Info.name,m)}static initModules(){for(const[name,module]of this.modules)module.Init(),conDebug(`模块 ${name} 初始化完成`);conDebug("模块初始化结束")}static loadModules(){for(const[name,m]of this.modules)m.Load(),this.loadedCount++,conDebug(`模块 ${name} 加载完成`);conDebug(`模块加载结束 ${this.loadedCount}/${this.fullLoadedCount}`),this.loadedCount===this.fullLoadedCount&&(this.successfulLoaded=!0,conDebug("模块加载完成!"))}static runModules(){for(const[name,module]of this.modules)module.Run(),conDebug(`模块 ${name} 运行完成`);conDebug("模块运行结束")}static getModule(name){return this.modules.get(name)}}ModulesLoader.modules=new Map,ModulesLoader.modulesList=[],ModulesLoader.successfulLoaded=!1,ModulesLoader.loadedCount=0,ModulesLoader.fullLoadedCount=2,ModulesLoader.modulesBuilder={base:()=>{throw new Error("BaseModule 不应该被创建")},WombTattoosModule:()=>new WombTattoosModule({name:"WombTattoosModule",priority:ModulePriority.Observe,description:"淫纹相关的模块。修改与拓展了游戏淫纹的功能。"}),ArousalModule:()=>new ArousalModule({name:"ArousalModule",priority:ModulePriority.Observe,description:"Arousal模块。修改与拓展了游戏Arousal的功能。包括高潮等机制。"})},conDebug({name:"Start Init",type:DebugMSGType.Workflow_Log,content:"Init wait"}),null!=CurrentScreen&&"Login"!==CurrentScreen||hookFunction("LoginResponse",-100,((args,next)=>{const result=next(args);conDebug({name:"Init! Login Response caught",content:args,type:DebugMSGType.Workflow_Log});const response=args[0];return response&&"object"==typeof response&&"string"==typeof response.Name&&"string"==typeof response.AccountName&&(ModulesLoader.successfulLoaded||(AssetManager.cacheAssets(),DataManager.Init(),conDebug({name:"Data Init Complete",type:DebugMSGType.Workflow_Log,content:DataManager.data}),TimerProcessInjector.Init(),ModulesLoader.registerModule(),ModulesLoader.initModules(),ModulesLoader.loadModules(),ModulesLoader.runModules(),TimerProcessInjector.Load(),TimerProcessInjector.Run())),result}))}();
//# sourceMappingURL=XSBCExpansion.js.map
