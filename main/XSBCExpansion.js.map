{"version":3,"file":"XSBCExpansion.js","sources":["../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../scr/Models/ModInfo.ts","../scr/Utilities/BCSDK.ts","../scr/Utilities/Utilities.ts","../scr/Base/Data.ts","../scr/Utilities/DataManager.ts","../scr/Utilities/TimerProcessInjector.ts","../scr/Base/BaseModule.ts","../scr/Utilities/AssetManager.ts","../scr/Utilities/HookManager.ts","../scr/Utilities/MessageManager.ts","../scr/Modules/Arousal.ts","../scr/Modules/WombTattoos.ts","../scr/Utilities/Modules/ModulesLoader.ts","../scr/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.2.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const o=\"1.2.0\";function e(o){alert(\"Mod ERROR:\\n\"+o);const e=new Error(o);throw console.error(e),e}const t=new TextEncoder;function n(o){return!!o&&\"object\"==typeof o&&!Array.isArray(o)}function r(o){const e=new Set;return o.filter((o=>!e.has(o)&&e.add(o)))}const i=new Map,a=new Set;function c(o){a.has(o)||(a.add(o),console.warn(o))}function s(o){const e=[],t=new Map,n=new Set;for(const r of f.values()){const i=r.patching.get(o.name);if(i){e.push(...i.hooks);for(const[e,a]of i.patches.entries())t.has(e)&&t.get(e)!==a&&c(`ModSDK: Mod '${r.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${e}\\nPatch1:\\n${t.get(e)||\"\"}\\nPatch2:\\n${a}`),t.set(e,a),n.add(r.name)}}e.sort(((o,e)=>e.priority-o.priority));const r=function(o,e){if(0===e.size)return o;let t=o.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of e.entries())t.includes(n)||c(`ModSDK: Patching ${o.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(o.original,t);let i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,o.name,n),c=r.apply(this,e);return null==a||a(),c};for(let t=e.length-1;t>=0;t--){const n=e[t],r=i;i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,o.name,n.mod),c=n.hook.apply(this,[e,o=>{if(1!==arguments.length||!Array.isArray(e))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof o}`);return r.call(this,o)}]);return null==a||a(),c}}return{hooks:e,patches:t,patchesSources:n,enter:i,final:r}}function l(o,e=!1){let r=i.get(o);if(r)e&&(r.precomputed=s(r));else{let e=window;const a=o.split(\".\");for(let t=0;t<a.length-1;t++)if(e=e[a[t]],!n(e))throw new Error(`ModSDK: Function ${o} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const c=e[a[a.length-1]];if(\"function\"!=typeof c)throw new Error(`ModSDK: Function ${o} to be patched not found`);const l=function(o){let e=-1;for(const n of t.encode(o)){let o=255&(e^n);for(let e=0;e<8;e++)o=1&o?-306674912^o>>>1:o>>>1;e=e>>>8^o}return((-1^e)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(c.toString().replaceAll(\"\\r\\n\",\"\\n\")),d={name:o,original:c,originalHash:l};r=Object.assign(Object.assign({},d),{precomputed:s(d),router:()=>{},context:e,contextProperty:a[a.length-1]}),r.router=function(o){return function(...e){return o.precomputed.enter.apply(this,[e])}}(r),i.set(o,r),e[r.contextProperty]=r.router}return r}function d(){for(const o of i.values())o.precomputed=s(o)}function p(){const o=new Map;for(const[e,t]of i)o.set(e,{name:e,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((o=>o.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return o}const f=new Map;function u(o){f.get(o.name)!==o&&e(`Failed to unload mod '${o.name}': Not registered`),f.delete(o.name),o.loaded=!1,d()}function g(o,t){o&&\"object\"==typeof o||e(\"Failed to register mod: Expected info object, got \"+typeof o),\"string\"==typeof o.name&&o.name||e(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof o.name);let r=`'${o.name}'`;\"string\"==typeof o.fullName&&o.fullName||e(`Failed to register mod ${r}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),r=`'${o.fullName} (${o.name})'`,\"string\"!=typeof o.version&&e(`Failed to register mod ${r}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),void 0!==o.repository&&\"string\"!=typeof o.repository&&e(`Failed to register mod ${r}: Expected repository to be undefined or string, got ${typeof o.version}`),null==t&&(t={}),t&&\"object\"==typeof t||e(`Failed to register mod ${r}: Expected options to be undefined or object, got ${typeof t}`);const i=!0===t.allowReplace,a=f.get(o.name);a&&(a.allowReplace&&i||e(`Refusing to load mod ${r}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(a));const c=o=>{let e=g.patching.get(o.name);return e||(e={hooks:[],patches:new Map},g.patching.set(o.name,e)),e},s=(o,t)=>(...n)=>{var i,a;const c=null===(a=(i=m.errorReporterHooks).apiEndpointEnter)||void 0===a?void 0:a.call(i,o,g.name);g.loaded||e(`Mod ${r} attempted to call SDK function after being unloaded`);const s=t(...n);return null==c||c(),s},p={unload:s(\"unload\",(()=>u(g))),hookFunction:s(\"hookFunction\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);\"number\"!=typeof t&&e(`Mod ${r} failed to hook function '${o}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&e(`Mod ${r} failed to hook function '${o}': Expected hook function, got ${typeof n}`);const s={mod:g.name,priority:t,hook:n};return a.hooks.push(s),d(),()=>{const o=a.hooks.indexOf(s);o>=0&&(a.hooks.splice(o,1),d())}})),patchFunction:s(\"patchFunction\",((o,t)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);n(t)||e(`Mod ${r} failed to patch function '${o}': Expected patches object, got ${typeof t}`);for(const[n,i]of Object.entries(t))\"string\"==typeof i?a.patches.set(n,i):null===i?a.patches.delete(n):e(`Mod ${r} failed to patch function '${o}': Invalid format of patch '${n}'`);d()})),removePatches:s(\"removePatches\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const t=l(o);c(t).patches.clear(),d()})),callOriginal:s(\"callOriginal\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to call a function: Expected function name string, got ${typeof o}`);const i=l(o);return Array.isArray(t)||e(`Mod ${r} failed to call a function: Expected args array, got ${typeof t}`),i.original.apply(null!=n?n:globalThis,t)})),getOriginalHash:s(\"getOriginalHash\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to get hash: Expected function name string, got ${typeof o}`);return l(o).originalHash}))},g={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:i,api:p,loaded:!0,patching:new Map};return f.set(o.name,g),Object.freeze(p)}function h(){const o=[];for(const e of f.values())o.push({name:e.name,fullName:e.fullName,version:e.version,repository:e.repository});return o}let m;const y=void 0===window.bcModSdk?window.bcModSdk=function(){const e={version:o,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return m=e,Object.freeze(e)}():(n(window.bcModSdk)||e(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&e(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==o&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","export const MOD_NAME = 'XSBE';\nexport const MOD_FULL_NAME = \"Xiaosu's BC Expansion\";\n\nexport const REPOSITORY_URL = 'https://github.com/iceriny/XiaosuBCExpansion';","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport * as ModInfo from \"../Models/ModInfo\";\n\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----SDK----  VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV    //\nexport const bcModSDK = bcModSDKRef.registerMod({\n    name: ModInfo.MOD_NAME,\n    fullName: ModInfo.MOD_FULL_NAME,\n    version: XSBE_VERSION.startsWith(\"v\") ? XSBE_VERSION.slice(1) : XSBE_VERSION,\n    repository: ModInfo.REPOSITORY_URL\n});\nexport function hookFunction(target: string, priority: HookPriority, hook: PatchHook): () => void {\n    // @ts-expect-error: 兼容1.2.0modSDK\n    const removeCallback = bcModSDK.hookFunction(target, priority, hook);\n    return removeCallback;\n}\n\nexport function patchFunction(functionName: string, patches: Record<string, string | null>): void {\n    bcModSDK.patchFunction(functionName, patches);\n}\n\nexport function removePatches(functionName: string){\n    bcModSDK.removePatches(functionName);\n}\n\n//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----SDK----  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //","/**\n * Debug信息对象接口\n */\ninterface XSDebugMSG {\n    name?: string;\n    type?: DebugMSGType;\n    content: unknown;\n}\n/**\n * Debug信息类型\n */\nexport enum DebugMSGType {\n    DebugLog,\n    Workflow_Log,\n    Error\n}\n/**\n * 发送debug信息到控制台\n * @param msg 信息\n * @param color 可选颜色参数\n * @param style 可选的css风格参数\n * @returns 无\n */\nexport function conDebug(msg: XSDebugMSG | string, isError: boolean = false, color: string | null = null, style: string | null = null) {\n    if (DEBUG === false) return;\n\n\n    const result: object = typeof msg === \"string\" ? {\n        name: \"XiaoSuActivity_Debug\",\n        type: DebugMSGType.DebugLog,\n        content: msg,\n        time: new Date().toLocaleString(),\n        ModVersion: XSBE_VERSION,\n    } : {\n        name: msg.name,\n        type: msg.type,\n        content: msg.content,\n        time: new Date().toLocaleString(),\n        ModVersion: XSBE_VERSION\n    }\n    if (style) {\n        console.debug(\"%c小酥的模组信息: \", style, result);\n    } else {\n        let theColor = 'rgba(191, 154, 175, 1)';\n        if (isError) {\n            theColor = 'rgba(255, 0, 0, 1)'\n        }\n        if (color) {\n            theColor = color\n        }\n        console.debug(\"%c小酥的模组信息: \", `background-color: ${theColor}; font-weight: bold;`, result);\n    }\n}\nsetAPI('XSBE_Debug', conDebug)\n\n/** 技能倍率buff */\nexport function SetSkillModifier(name: SkillType, value: number, duration: number) {\n    const realLevel = SkillGetLevelReal(Player, name);\n    const targetValue = Math.floor(realLevel * value);\n    const correction = targetValue - realLevel;\n    SkillSetModifier(Player, name, correction, duration);\n}\n\n/**\n * 处理结巴效果基于segmenter.segment()分词\n * @param str 传入的字符串\n * @returns 返回处理后的字符串\n */\nexport function segmentForCH(str: string): string[] | null {\n    // 检查浏览器是否支持 Intl.Segmenter\n    if (window.Intl && window.Intl.Segmenter && TranslationLanguage.toLowerCase() === \"cn\") {\n        const segmenter = new Intl.Segmenter('zh', { granularity: 'word' }); // 创建分词器实例\n        const segmenterResult = segmenter.segment(str); // 对文本进行分词\n        const results: string[] = []\n        for (const segment of segmenterResult) {\n            results.push(segment.segment);\n        }\n\n        conDebug(`segmentForCH: ${results}`)\n        return results;\n    } else {\n        return null;\n    }\n}\n/** 呻吟词库 */\nconst MOAN: string[] = [\n    \" ❤呀~\",\n    \" 嗯❤~\",\n    \" 姆嗯❤~\",\n    \" 昂~❤\",\n    \" ❤啊~\",\n    \" 哈啊..\",\n    \" 呜❤..\",\n    \" --嘶❤~\",\n    \" 唔❤..\",\n    \" ❤嘶哈~\",\n    \" ❤呀嗯..\",\n    \" ❤.哦~\"\n];\n\n/**\n * 随机获取一个呻吟字符串\n * @see MOAN\n * @returns 一个呻吟字符串\n */\nexport function getMoan(): string {\n    return MOAN[Math.floor(Math.random() * MOAN.length)];\n}\n\n/**\n * 获取一个动态概率 其值在最大值和最小值范围内成S曲线分布\n * @param value 当前值\n * @param min 当前值的最小值\n * @param max 当前值的最大值\n * @param alpha 控制曲线的平缓程度 数值越大越陡峭\n * @param beta 控制曲线的中点 数值越大越靠近最大值\n * @returns 返回一个概率值 范围在0~1之间\n */\nexport function getDynamicProbability(value: number, min: number = 0, max: number = 100, alpha: number = 1, beta: number = 0.5, reverse: boolean = false): number {\n    // 将 value 的范围从 [min, max] 映射到 [0, 1]\n    const x = (value - min) / (max - min);\n\n    // 使用 logistic 函数来计算动态概率\n    let probability = 1 / (1 + Math.exp(-alpha * max * (x - beta)));\n    // 如果需要反向处理则取 1 - probability将曲线左右倒置\n    if (reverse) {\n        probability = 1 - probability;\n    }\n\n    // 返回概率并限制在0~1之间以避免 计算浮点数时的精度丢失 导致的概率溢出\n    return LimitedScope(0, 1, probability)\n}\n\n/**\n * 限制一个数值在指定范围内\n * @param min 最小值\n * @param max 最大值\n * @param value 输入值\n * @returns 返回限制后的值\n */\nexport function LimitedScope(min: number, max: number, value: number): number {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function setAPI(name: string, value: unknown): void {\n    if (window.XSBE_API) {\n        window.XSBE_API[name] = value;\n    } else {\n        window.XSBE_API = { [name]: value }\n    }\n}","import { conDebug } from \"../Utilities/Utilities\";\n\n/** @Mod的数据类 */\nexport type dataType = 'online' | 'setting' | 'local'\n\nexport const PlayerStorage = () => Player?.XSBE;\nexport const PlayerOnlineSharedSettingsStorage = () => Player.OnlineSharedSettings?.XSBE;\nexport const ExtensionStorage = () => Player.ExtensionSettings?.XSBE as string;\n/**\n * mod所使用的数据的类\n */\nexport class DataBody<T extends IDataBody> {\n\n    /** 在线分享数据的key集合 */\n    private onlineKeys: Set<keyof T>;\n    /** 设置数据的key集合 */\n    private settingKeys: Set<keyof T>;\n    /** 本地数据的key集合 */\n    private localKeys: Set<keyof T>;\n\n    private static readonly defaultCharacterOnlineSharedSettings: XSBE_SharedSettings = {\n        version: '',\n        hasWombTattoos: false,\n        aftertaste: 0,\n    }\n    private static readonly defaultSetting: XSBE_Settings = {\n        enabled: false\n    }\n    private static readonly defaultXSBE: XSBE_PlayerData = {\n        version: '',\n        timestamp: 0,\n        hasWombTattoos: false,\n        aftertaste: 0,\n        Settings: this.defaultSetting,\n    }\n\n    /**\n     * 创建数据类\n     * @param data 以此为模板创建数据\n     * @param onlineKeys 数据中哪些键是在线分享数据\n     * @param settingKeys 数据中哪些键是设置键\n     * @param localKeys 数据中哪些键是本地数据键\n     */\n    constructor(private data: T, onlineKeys: (keyof T)[], settingKeys: (keyof T)[], localKeys: (keyof T)[]) {\n        this.onlineKeys = new Set(onlineKeys);\n        this.settingKeys = new Set(settingKeys);\n        this.localKeys = new Set(localKeys);\n        if (!Player.XSBE) {\n            Player['XSBE'] = DataBody.defaultXSBE\n        }\n        if (!Player.OnlineSharedSettings?.XSBE) {\n            Player.OnlineSharedSettings!['XSBE'] = DataBody.defaultCharacterOnlineSharedSettings\n        }\n        for (const k in this.data) {\n            this.initSingleDataHandle(k, this.data[k])\n        }\n\n        if (ExtensionStorage()) {\n            // 比对服务器数据和本地数据谁更新 并且使用更新的数据\n            this.compareServerDataAndLocalDataAndUpdate();\n        }\n        this.updateExtensionSettings();\n    }\n\n\n    /**\n     * 比较服务器数据和本地数据并更新\n     */\n    private compareServerDataAndLocalDataAndUpdate() {\n        let ExtObj = this.getExtensionSettings()\n        if (!ExtObj) ExtObj = {}\n        // 获取服务器数据\n        const serverExtensionSettingObject = ExtObj as Record<keyof T, T[keyof T]> //| Record<string, never>;\n        // 获取服务器数据的时间戳\n        const serverTimestamp: number = (serverExtensionSettingObject['timestamp'] as number | undefined) ?? 0;\n        // 获取本地数据的时间戳\n        const localTimestamp: number = this.getDataFromLocalStorage('timestamp') ?? 0;\n\n        if (serverExtensionSettingObject) {\n            if (serverTimestamp > localTimestamp) {\n                // 如果服务器数据的时间戳大于等于本地数据的时间戳，则更新更新内存数据\n                for (const k in serverExtensionSettingObject) {\n                    if (Object.hasOwnProperty.call(this.data, k)) {\n                        if (k == 'version') continue; // 将来添加版本号的比对功能\n                        const dataValue = this.data[k as keyof T];\n                        const serverValue = serverExtensionSettingObject[k];\n                        if (dataValue !== serverValue) {\n                            this.set(k, serverValue as T[keyof T], false)\n                        }\n                    }\n                }\n                this.setTimestampToLocalStorage();\n            }\n        }\n    }\n\n    /**\n     * 获取数据\n     * 因为在set时同步了数据到Player.XSBE中 所以这里获取到的应该和Player中的一致\n     * @param key key值\n     * @returns 获取到的数据\n     */\n    get<K extends keyof T>(key: K): T[K] {\n        return this.data[key];\n    }\n\n    /**\n     * 设置数据 同步到Player中 可选的同步到服务器\n     * @param key 设置数据的键\n     * @param value 设置数据的值\n     * @param upload 是否同步到服务器\n     */\n    set<K extends keyof T>(key: K, value: T[K], upload: boolean = false, updateLocalTimestamp: boolean = true) {\n        // 设置类内数据与数据类型标记\n        this.data[key] = value;\n        // if (dataType) {\n        //     switch (dataType) {\n        //         case 'online':\n        //             this.onlineKeys.add(key);\n        //             this.localKeys.add(key);\n        //             break;\n        //         case 'setting':\n        //             this.settingKeys.add(key);\n        //             this.localKeys.add(key);\n        //             break;\n        //         case 'local':\n        //             this.localKeys.add(key);\n        //             break;\n        //     }\n        // }\n\n        // 设置Player中的数据\n        // 表示是否是设置数据\n        let isSettings = false;\n        // 如果在本地key中\n        if (this.localKeys.has(key)) {\n            // 设置/更新本地空间中的数据\n            localStorage.setItem(this.getLocalKeyFromKey(key), JSON.stringify(value));\n            if (updateLocalTimestamp) this.setTimestampToLocalStorage();\n\n            // 如果是设置数据 则把内容放入Player.XSBE的setting中\n            if (this.settingKeys.has(key)) {\n                Player.XSBE!.Settings![key as string] = value;\n                isSettings = true;\n            } else if (this.onlineKeys.has(key) && Player.OnlineSharedSettings) {\n                // 如果是在线数据 则把内容放入Player.OnlineSharedSettings.XSBE中\n                Player.OnlineSharedSettings.XSBE![key as string] = value\n            }\n            // 如果需要更新到服务器 则更新到服务器 换句话说是放入Player.ExtensionSettings中\n            if (upload) this.updateExtensionSettings();\n        }\n\n        // 如果不是设置数据则放入Player.XSBE中\n        if (!isSettings) Player.XSBE![key as string] = value;\n    }\n\n\n\n\n    private initSingleDataHandle<K extends keyof T>(key: K, value: T[K]) {\n        let _value: T[K] = value;\n        let updatePlayer = true;\n        // 如果k为本地数据key\n        if (this.localKeys.has(key)) {\n            // 尝试获取本地数据\n            const localValue = this.getDataFromLocalStorage(key)\n            // 如果获取到 将获取到的值用于后续初始化\n            if (localValue) {\n                _value = localValue;\n            }\n\n            if (this.settingKeys.has(key)) {\n                Player.XSBE!.Settings![key as string] = _value;\n                updatePlayer = false;\n            } else if (this.onlineKeys.has(key)) {\n\n                if (!Player.OnlineSharedSettings?.XSBE?.[key as string]) {\n                    Player.OnlineSharedSettings!.XSBE![key as string] = _value;\n                } else {\n                    _value = Player.OnlineSharedSettings.XSBE[key as string] as T[K];\n                }\n                // this.updateExtensionSettings();\n            }\n        }\n        // set on Player\n        if (key === 'timestamp') {\n            _value = CommonTime() as T[K];\n        }\n        if (updatePlayer) Player.XSBE![key as string] = _value;\n        this.data[key] = _value;\n    }\n\n    /**\n     * 更新ExtensionSettings到服务器\n     */\n    updateExtensionSettings() {\n        // 创建一个新对象，用于存储满足条件的键值对\n        const ExtensionSettingsObject: T = {} as T;\n        // 使用循环遍历原始对象的键值对\n        for (const key in this.data) {\n            if (Object.hasOwnProperty.call(this.data, key)) {\n                if (this.localKeys.has(key)) {\n                    // 将满足条件的键值对添加到新对象中\n                    ExtensionSettingsObject[key] = this.data[key];\n                }\n            }\n        }\n        if (!ExtensionStorage()) {\n            Player.ExtensionSettings.XSBE = ''\n        }\n        Player.ExtensionSettings.XSBE = LZString.compressToBase64(JSON.stringify(ExtensionSettingsObject));\n        ServerPlayerExtensionSettingsSync('XSBE');\n    }\n\n    // /**\n    //  * 获取服务器数据并更新本地数据\n    //  */\n    // downloadExtensionSettings<K extends keyof T>() {\n    //     const value = this.getExtensionSettings();\n    //     if (ExtensionStorage() && value) {\n    //         const ExtensionSettingsObject = value as Record<K, T[K]>;\n    //         for (const key in ExtensionSettingsObject) {\n    //             if (Object.hasOwnProperty.call(this.data, key)) {\n    //                 this.set(key as K, ExtensionSettingsObject[key]);\n    //             }\n    //         }\n    //     }\n    // }\n\n    /**\n     * 获取服务器的ExtensionSettings字符串解压后返回为一个对象\n     * @returns 返回从服务器获取到的数据的对象\n     */\n    getExtensionSettings() {\n        let result;\n        try {\n            result = JSON.parse(LZString.decompressFromBase64(ExtensionStorage()) ?? '')\n        } catch (error) {\n            conDebug({\n                name: 'Decompress ExtensionSettings Fail!!!  返回 null !!',\n                content: error\n            }, true);\n            result = null;\n        }\n        return result as object | null;\n    }\n\n    /**\n     * 获取从本地储存空间获取到的数据对象\n     * @returns 返回从本地空间获取到的数据对象\n     */\n    getLocalStorage<K extends keyof T>(): object {\n        const localStorageObject = {};\n        for (const k of this.localKeys) {\n            const value = localStorage.getItem(this.getLocalKeyFromKey(k)) as string;\n            if (value) {\n                (localStorageObject as Record<K, T[K]>)[k as K] = JSON.parse(value) as T[K];\n            }\n        }\n        return localStorageObject;\n    }\n\n    getDataFromLocalStorage<K extends keyof T>(key: K): T[K] | undefined {\n        const value = localStorage.getItem(this.getLocalKeyFromKey(key)) as string;\n        if (value) {\n            return JSON.parse(value) as T[K];\n        }\n        return undefined;\n    }\n\n    /**\n     * 通过输入的Key值获取到本地空间的key键\n     * @param key key\n     * @returns 本地空间的键\n     */\n    getLocalKeyFromKey(key: keyof T): string {\n        return `XSBE_${key as string}`;\n    }\n    /**\n     * 将时间戳保存到本地空间\n     */\n    setTimestampToLocalStorage() {\n        localStorage.setItem(this.getLocalKeyFromKey('timestamp' as keyof T), CommonTime().toString());\n    }\n\n}\n","import { DataBody } from \"../Base/Data\"\n\n\nexport default class DataManager {\n    private static private_data: DataBody<IDataBody>;\n    private static readonly onlineKeys: onlineKeys = ['version', 'hasWombTattoos', 'aftertaste'];\n    private static readonly settingKeys: settingKeys = ['enabled'];\n    private static readonly localKeys: localKeys = ['timestamp', 'resistCount', 'aftertasteEffect', 'progress', 'version', 'hasWombTattoos', 'aftertaste', 'enabled'];\n\n    public static Init() {\n        DataManager.private_data = new DataBody({\n            version: XSBE_VERSION,\n            timestamp: 0,\n            enabled: false as boolean,\n            hasWombTattoos: false as boolean,\n            aftertaste: 0,\n            resistCount: 0,\n            aftertasteEffect: new Set(),\n            progress: 0,\n        }, this.onlineKeys, this.settingKeys, this.localKeys)\n\n        window.XSBE_Data = DataManager.private_data\n    }\n\n    static get data() {\n        return DataManager.private_data\n    }\n\n    static get(name: keyof IDataBody) {\n        this.private_data.get(name)\n    }\n    static set<K extends keyof IDataBody>(key: K, value: IDataBody[K], upload: boolean = false, updateLocalTimestamp: boolean = true) {\n        this.private_data.set(key, value, upload, updateLocalTimestamp)\n    }\n}","import { hookFunction } from \"./BCSDK\";\n// import { conDebug } from \"./Utilities\";\n\ntype RegisteredProcessItem = { priority: number, nextInterval: number, interval: number | (() => number), condition: () => boolean, nextTriggerTime: number }\nexport default class TimerProcessInjector {\n    private static ProcessSequence: TimerProcessInjectorSequence;\n    private static RegisteredProcess: Map<string, RegisteredProcessItem>;\n    private static ProcessCodeMap: Map<string, () => void>;\n    private static processSortList: string[];\n    private static activatedProcess: string[];\n\n    public static Init(): void {\n        this.ProcessSequence = new TimerProcessInjectorSequence();\n        this.RegisteredProcess = new Map<string, RegisteredProcessItem>;\n        this.ProcessCodeMap = new Map<string, () => void>\n        this.activatedProcess = [];\n        this.processSortList = [];\n    }\n\n    public static Load(): void {\n\n        this.sortProcessList();\n        for (const name of this.processSortList) {\n            const item = this.RegisteredProcess.get(name)!\n            const itemInterval = item.interval;\n            if (typeof itemInterval === \"function\") {\n                item.nextInterval = itemInterval();\n            } else {\n                item.nextInterval = itemInterval;\n            }\n        }\n    }\n\n    public static Run(): void {\n        hookFunction(\"TimerProcess\", 999, (args, next) => {\n            this.activatedProcess = [];\n\n            const currentTime = Date.now();\n            // 进行条件判断 如果条件通过 则将代码放入激活列表中\n            for (const name of this.processSortList) {\n                const item = this.RegisteredProcess.get(name)!\n                if (item.interval == 0){\n                    this.activatedProcess.push(name);\n                    continue;\n                }\n\n                if (item.nextTriggerTime <= currentTime) {\n                    item.nextTriggerTime = currentTime + item.nextInterval;\n                    if (item.condition()) {\n                        this.activatedProcess.push(name);\n                    }\n                }\n                if (typeof item.interval === \"function\") {\n                    item.nextInterval = item.interval();\n                }\n            }\n            // 通过将激活列表的所有值遍历添加到ProcessSequence中\n            this.ProcessSequence.clear();\n            for (const name of this.activatedProcess) {\n                this.ProcessSequence.add({ code: this.ProcessCodeMap.get(name)!, name: name });\n            }\n\n            this.ProcessSequence.run(this.activatedProcess);\n\n            // 交给ProcessSequence 进行执行\n            return next(args)\n        });\n    }\n\n    private static sortProcessList() {\n        this.processSortList.sort((a, b) => {\n            return this.RegisteredProcess.get(b)!.priority - this.RegisteredProcess.get(a)!.priority;\n        });\n    }\n\n\n    public static add(priority: number, interval: number | (() => number), condition: () => boolean, codeItem: TimerProcessInjectorCodeContent) {\n        if (this.RegisteredProcess.has(codeItem.name)) return;\n        this.RegisteredProcess.set(codeItem.name, {\n            interval: interval,\n            nextInterval: -1,//////\n            condition: condition,\n            priority: priority,\n            nextTriggerTime: 0//////\n        });\n        this.ProcessCodeMap.set(codeItem.name, codeItem.code);\n        this.processSortList.push(codeItem.name);\n    }\n}\n\ninterface TimerProcessInjectorCodeContent {\n    code: () => void;\n    name: string;\n}\ntype TimerProcessInjectorCodeMap = Map<string, TimerProcessInjectorCodeContent>;\n\nclass TimerProcessInjectorSequence {\n    private codeMap: TimerProcessInjectorCodeMap;\n    size: number;\n\n    constructor() {\n        this.codeMap = new Map<string, TimerProcessInjectorCodeContent>();\n        this.size = 0;\n    }\n\n    add(codeItem: TimerProcessInjectorCodeContent) {\n        if (this.codeMap.has(codeItem.name)) {\n            return;\n        }\n        this.codeMap.set(codeItem.name, codeItem);\n        this.size++;\n    }\n\n    has(name: string) {\n        return this.codeMap.has(name);\n    }\n    remove(name: string) {\n        this.codeMap.delete(name);\n        this.size--;\n    }\n    clear() {\n        this.codeMap.clear();\n        this.size = 0;\n    }\n\n    run(runList: string[]) {\n        for (const name of runList) {\n            this.codeMap.get(name)?.code();\n        }\n    }\n}\n","\n/**\n * 模块的基础抽象类\n */\nexport default abstract class BaseModule {\n    /** 模块的信息 */\n    Info: ModuleInfo = {\n        name: \"base\",\n        priority: -999,\n        description: \"模块基类，所有的模块都继承这个模块\"\n    }\n    /** 模块是否加载完成 */\n    public Loaded: boolean = false;\n\n    constructor(info: ModuleInfo) {\n        this.Info = info;\n    }\n\n    /**\n     * 在模块加载完成后调用\n     */\n    protected letSuccessfullyLoad(): void {\n        this.Loaded = true;\n    }\n\n    /**\n     * 初始化函数\n     */\n    public abstract Init(): void\n    /**\n     * 加载函数\n     */\n    public abstract Load(): void\n\n    /**\n     * 运行模块\n     */\n    public abstract Run(): void\n\n    /**\n     * 卸载模块\n     */\n    public abstract Unload(): void\n}","import { conDebug } from \"./Utilities\";\n\n\nexport default class AssetManager {\n    private static AssetMap = new Map<string, Map<string, unknown>>([\n        ['img', new Map<string, HTMLImageElement>()],\n        ['sound', new Map<string, HTMLAudioElement>()]\n    ]);\n\n    private static readonly IOAssetSrc = 'https://iceriny.github.io/XiaosuBCExpansion'\n    private static readonly suffix = DEBUG ? 'dev' : 'main'\n    private static readonly imgSrcList: string[][] = [\n        ['logo', `${this.IOAssetSrc}/${this.suffix}/Assets/Img/logo.png`]\n    ]\n    private static readonly soundSrcList: string[][] = [\n        ['heartbeat', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/heartbeat.mp3`],\n        ['clock', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/clock.mp3`],\n        ['snapFingers', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/snapFingers.mp3`],\n        ['faultSound', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/faultSound.mp3`],\n        ['sleep', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/sleep.mp3`]\n    ]\n\n\n    private static cacheImg(src: string, name: string): HTMLImageElement {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => {\n            this.AssetMap.get('img')!.set(name, img);\n        }\n        return img;\n    }\n    private static cacheSound(src: string, name: string): HTMLAudioElement {\n        const audio = new Audio();\n        audio.src = src;\n        audio.load();\n        this.AssetMap.get('sound')!.set(name, audio);\n        return audio;\n    }\n\n    public static cacheAssets(): void {\n        for (const src of AssetManager.imgSrcList) {\n            this.cacheImg(src[1], src[0]);\n        }\n        for (const src of AssetManager.soundSrcList) {\n            this.cacheSound(src[1], src[0]);\n        }\n    }\n\n    public static getAssets<T extends HTMLImageElement | HTMLAudioElement>(name: string, type: string): T | void {\n        if (type === 'img') {\n            const assetMap = this.AssetMap.get('img')!;\n            const asset = assetMap.get(name) as T;\n            return asset;\n        }\n        if (type === 'sound') {\n            const assetMap = this.AssetMap.get('sound')!;\n            const asset = assetMap.get(name) as T;\n            return asset;\n        }\n    }\n\n    public static GatImg(name: string): HTMLImageElement {\n        const img = this.AssetMap.get('img')!.get(name) as HTMLImageElement;\n        return img;\n    }\n\n    public static PlayAudio(name: string, volume?: number): void {\n        const vol = volume != null ? volume : Player.AudioSettings?.Volume ?? 1;\n        if (vol > 0) {\n            const audio = this.AssetMap.get('sound')!.get(name) as HTMLAudioElement;\n            audio.volume = Math.min(vol, 1);\n            try {\n                audio.play();\n            } catch (error) {\n                conDebug(`声音播放失败: ${error}   Message: ${audio.error}`)\n            }\n        }\n    }\n    public static PlayerOriginalAudio(name: string, volume?: number): void {\n        AudioPlayInstantSound(`Audio/${name}.mp3`, volume)\n    }\n}","/** @hook函数工具 */\n// import { ModulePriority } from \"../Models/ModuleInfo\";\nimport { hookFunction, patchFunction, removePatches } from \"./BCSDK\";\n// import * as Utils from \"../Utilities/Utilities\";\n\n/**\n * 完整的钩子项 \n */\ntype CompleteHookItem = [top: HookItem<HookItemContent>,\n    bottom: HookItem<HookItemContent>,\n    topHookSet: Set<string>,\n    removeCallback?: [top?: () => void, bottom?: () => void]]\n/**\n * Hook管理器\n */\nexport default class HookManager {\n\n    /**\n     * 钩子映射表\n     */\n    private static readonly _hookMap: Map<string, CompleteHookItem> = new Map();\n\n    /** 创建一个新的钩子内容项 */\n    private static get NewHookItem(): HookItem<HookItemContent> {\n        return new HookItem<HookItemContent>();\n    }\n\n    /**\n     * 设置钩子函数\n     * @param functionName 函数名\n     * @param name 钩子名\n     * @param priority 钩子优先级\n     * @param code 钩子函数中运行的代码\n     */\n    static setHook(functionName: string, name: string, priority: number, code: (args: unknown[], lastResult: unknown) => codeResult | void) {\n        // 获取函数对应的钩子项\n        const hookItem = HookManager._hookMap.get(functionName);\n        if (hookItem) {\n            // 如果钩子项存在，则设置钩子函数\n            if (priority >= 0) hookItem[0].add(name, { priority, code });\n            else hookItem[1].add(name, { priority, code });\n        } else {\n            // 如果钩子项不存在，则创建新的钩子项，并设置钩子函数\n            const topItem = this.NewHookItem;\n            const bottom = this.NewHookItem;\n            const _item: CompleteHookItem = [topItem, bottom, new Set()];\n            if (priority >= 0) {\n                topItem.add(name, { priority, code });\n                _item[2].add(name);\n            }\n            else bottom.add(name, { priority, code });\n\n            HookManager.addHook(functionName, _item);\n            HookManager._hookMap.set(functionName, _item);\n        }\n    }\n\n    /**\n     * 移除钩子函数\n     * @param functionName 钩子函数名\n     * @param name 钩子名称\n     */\n    static removeHook(functionName: string, name: string) {\n        // 获取HookItem\n        const hookItem = HookManager._hookMap.get(functionName);\n        // 如果HookItem存在\n        if (hookItem) {\n            if (hookItem[2].has(name)) {\n                hookItem[2].delete(name);\n                hookItem[0].delete(name);\n            } else hookItem[1].delete(name);\n\n            if (hookItem[0].size === 0 && hookItem[1].size === 0) {\n                // 如果HookItem为空，则删除HookItem\n                if (hookItem[2].has(name)) this._hookMap.get(functionName)?.[3]?.[0]?.();\n                else hookItem[3]?.[1]?.();\n                this._hookMap.delete(functionName);\n\n            }\n        }\n    }\n\n    // /**\n    //  * 运行初始的钩子函数Map\n    //  */\n    // static runHook() {\n    //     for (const [functionName, completeHookItem] of HookManager._hookMap.entries()) {\n    //         HookManager.addHook(functionName, completeHookItem);\n    //     }\n    // }\n\n    /**\n     * 用于在运行过程中动态的添加函数hook\n     * @param functionName 需要hook的函数名\n     * @param completeHookItem 添加的函数内容\n     */\n    private static addHook(functionName: string, completeHookItem: CompleteHookItem) {\n        // 调用hookFunction函数，传入需要hook的函数名和参数\n        const topRemoveCallback = hookFunction(functionName, 999, (args, next) => {\n            let topLastResult = null;\n            for (const item of completeHookItem[0]) {\n                const result = item.code(args, topLastResult);\n                if (result !== undefined) {\n                    // 更新参数\n                    args = result.args;\n                    if (result.result !== undefined) topLastResult = result.result;\n                }\n            }\n            if (topLastResult !== null) return topLastResult;\n            return next(args);\n            // // 遍历顶部钩子函数\n            // const topItemResult: codeResult[] = completeHookItem[0].forEach((item): codeResult | void => {\n            //     // Utils.conDebug(`${functionName}: name: ${name}`);\n            //     // 运行钩子函数\n            //     const itemResult = item.code(args);\n            //     if (itemResult) {\n            //         // 更新参数\n            //         args = itemResult.args;\n            //         return itemResult;\n            //     }\n            // });\n            // 取出最后一个函数的结果 如果存在则返回结果\n            // const topLastResult = topItemResult.length === 0 ? null : topItemResult[topItemResult.length - 1].result;\n            // if (topLastResult) return topLastResult;\n\n            // 调用下一个函数并返回结果\n            // const result = next(args);\n\n\n        });\n        const bottomRemoveCallback = hookFunction(functionName, -999, (args, next) => {\n            const OtherLastResult = next(args);\n            let bottomLastResult = OtherLastResult;\n            for (const item of completeHookItem[1]) {\n                const result = item.code(args, bottomLastResult);\n                if (result !== undefined) {\n                    // 更新参数\n                    args = result.args;\n                    if (result.result !== undefined) bottomLastResult = result.result;\n                }\n            }\n            return bottomLastResult;\n            // // 遍历完成钩子的参数\n            // const bottomItemResult: codeResult[] = completeHookItem[1].forEach((item): codeResult | void => {\n            //     // 运行钩子函数\n            //     const itemResult = item.code(args);\n            //     if (itemResult) {\n            //         // 更新参数\n            //         args = itemResult.args;\n            //         return itemResult;\n            //     }\n            // });\n            // // 取出最后一个函数的结果 如果存在则返回结果\n            // const bottomLastResult = bottomItemResult.length === 0 ? null : bottomItemResult[bottomItemResult.length - 1].result;\n            // if (bottomLastResult) return bottomLastResult;\n            // // 否则返回原函数的结果\n            // return result;\n        });\n        completeHookItem[3] = [topRemoveCallback, bottomRemoveCallback]\n    }\n\n    public static patchAdd(functionName: string, patches: Record<string, string | null>) {\n        patchFunction(functionName, patches);\n    }\n    public static patchRemove(functionName: string) {\n        removePatches(functionName);\n    }\n}\n\n/**\n * 钩子项内容\n */\ninterface HookItemContent {\n    priority: number;\n    code: (args: unknown[], lastResult: unknown) => codeResult | void;\n}\n\ntype codeResult = {\n    args: unknown[];\n    result?: unknown;\n}\n\nclass HookItem<T extends HookItemContent> implements Iterable<T> {\n    // 存储 HookItem 的映射关系\n    private itemMap: { [key: string]: T };\n    // 存储 HookItem 的顺序\n    private itemSequence: string[];\n    // 存储 HookItem 的数量\n    size: number;\n\n    constructor(...item: { name: string, content: T }[]) {\n        // 初始化 itemMap\n        this.itemMap = {}\n        // 初始化 itemSequence\n        this.itemSequence = [];\n        // 初始化 size\n        this.size = 0;\n        item.forEach(item => {\n            this.add(item.name, item.content);\n        })\n    }\n\n    // 添加 HookItem\n    add(name: string, content: T) {\n        // 将 content 添加到 itemMap 中\n        this.itemMap[name] = content;\n        // 查找插入位置\n        let index = this.itemSequence.findIndex(item => this.itemMap[item].priority < content.priority);\n        if (index === -1) {\n            // 如果找不到比插入值更小的元素，说明插入值最小，放在数组末尾\n            index = this.size;\n        }\n        // 使用 splice() 方法插入元素\n        this.itemSequence.splice(index, 0, name);\n        // 更新 size\n        this.size++;\n    }\n\n    // 删除 HookItem\n    delete(name: string) {\n        // 从 itemMap 中删除指定的 HookItem\n        delete this.itemMap[name];\n        // 从 itemSequence 中删除指定的 HookItem\n        const index = this.itemSequence.indexOf(name);\n        this.itemSequence.splice(index, 1);\n        // 更新 size\n        this.size--;\n    }\n\n    // 遍历 HookItem\n    forEach(callback: (value: T, name: string) => codeResult | void): codeResult[] {\n        const resultList: codeResult[] = [];\n        // 遍历 itemSequence，调用回调函数\n        for (const key of this.itemSequence) {\n            const callbackResult = callback(this.itemMap[key], key)\n            if (callbackResult) {\n                resultList.push(callbackResult);\n                if (callbackResult.result) return resultList;\n            }\n        }\n        return resultList;\n    }\n\n    // 实现 Symbol.iterator 方法，返回一个迭代器\n    [Symbol.iterator](): Iterator<T> {\n        let index = 0;\n        const keys = this.itemSequence;\n        const map = this.itemMap\n        return {\n            next(): IteratorResult<T> {\n                if (index < keys.length) {\n                    // 如果还有元素，返回当前元素\n                    return { done: false, value: map[keys[index++]] };\n                } else {\n                    // 如果没有元素，返回结束状态\n                    return { done: true, value: undefined };\n                }\n            }\n        };\n    }\n}","type LocalMessageCSSName = null | 'local-message' | 'trance-message'\nconst selfPlaceholder = '{source}';\n/** 描述中表示目标的占位符 */\n\nconst targetPlaceholder = '{target}';\n/**\n * 包含全局占位符的对象 s:自己  t:目标\n */\nexport const PH = {\n    s: selfPlaceholder,\n    t: targetPlaceholder\n}\nexport default class MSGManager {\n    /**\n     * 发送*表情信息\n     * @param msg 要发送的内容\n     * @returns 无\n     */\n    static SendEmote(msg: string | null) {\n        if (msg == null) return;\n        ServerSend(\"ChatRoomChat\", { Content: msg, Type: \"Emote\" })\n    }\n    /**\n     * 发送聊天消息\n     * @param msg 发送的内容\n     * @returns 无\n     */\n    static SendChat(msg: string | null) {\n        if (msg == null) return;\n        ServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n    }\n\n    /**\n     * 发送本地消息\n     * @param msg 发送的消息\n     * @param className 本地消息的样式ClassName\n     * @param timeout 持续时间\n     */\n    static SendLocalMessage(msg: string, className: LocalMessageCSSName = null, timeout: number = 0) {\n        if (className !== null) {\n            msg = `<div class=\"${className}\">${msg}</div>`\n        }\n        if (timeout === 0) ChatRoomSendLocal(msg)\n        else ChatRoomSendLocal(msg, timeout);\n    }\n    /**\n     * 发送动作消息\n     * @param msg 动作消息的内容\n     * @param sourceCharacter 动作的来源 id\n     * @param targetCharacter 动作的目标 id\n     */\n    static SendActivity(msg: string, sourceCharacter: number, targetCharacter?: number) {\n\n        const sourceCharacterObj: Character | undefined = ChatRoomCharacter.find(c => c.MemberNumber == sourceCharacter),\n            targetCharacterObj: Character | undefined = targetCharacter ? ChatRoomCharacter.find(c => c.MemberNumber == targetCharacter) : undefined;\n\n        if (sourceCharacterObj === undefined && targetCharacterObj === undefined) return;\n\n        const sourceCharacterNickname = sourceCharacterObj ? CharacterNickname(sourceCharacterObj) : \"\",\n            targetCharacterNickname = targetCharacterObj ? CharacterNickname(targetCharacterObj) : \"\";\n        const resultDict: ChatMessageDictionary = [\n            { Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSBE_ActMessage\", Text: msg.replaceAll(PH.s, sourceCharacterNickname).replaceAll(PH.t, targetCharacterNickname) }\n        ]\n\n        resultDict.push({ SourceCharacter: sourceCharacter });\n        if (targetCharacter !== undefined) resultDict.push({ TargetCharacter: targetCharacter });\n        ServerSend(\"ChatRoomChat\", {\n            Type: \"Activity\", Content: \"XSBE_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n        });\n    }\n}","import BaseModule from \"../Base/BaseModule\";\nimport AssetManager from \"../Utilities/AssetManager\";\nimport DataManager from \"../Utilities/DataManager\";\nimport HookManager from \"../Utilities/HookManager\";\nimport MSGManager, { PH } from \"../Utilities/MessageManager\";\nimport TimerProcessInjector from \"../Utilities/TimerProcessInjector\";\nimport { SetSkillModifier, conDebug, getDynamicProbability, getMoan, segmentForCH } from \"../Utilities/Utilities\";\n\n\nexport default class ArousalModule extends BaseModule {\n    private _aftertaste: number = 0;\n    private static readonly MAX_AFTERTASTE = 120;\n    /** 对于忍耐高潮时的反应描述 */\n    private descriptionOfEnduranceActivities = [\n        `{source}脚趾一蜷一缩，难耐的交织.`,\n        `{source}闭眼忍耐，鼻息中泄露出粉红的喘息.`,\n        `{source}蜷缩脚趾忍耐着连续的快感.`,\n        `{source}难耐的双腿颤抖着，身体的每一处都充满快感.`,\n        `{source}拼命咬住牙齿，却从鼻腔泄露出诱人的声音.`,\n        `{source}在汹涌的快感下浑身粉红，奋力的想要忍住高潮.`,\n        `{source}浑身颤抖的抵抗高潮的逼近.`\n    ];\n\n    private needSendEnduringMessage = false;\n\n    /** 获取忍耐高潮时的反应描述 */\n    get getEndureDesc(): string {\n        return this.descriptionOfEnduranceActivities[Math.floor(Math.random() * this.descriptionOfEnduranceActivities.length)];\n    }\n    public Run(): void {\n        // 处理本模块的Hook函数\n        this.HookList();\n        // 处理本模块的Patch函数\n        this.patchListHandler();\n        // 处理本模块的TimerProcess\n        this.TimerProcess();\n\n    }\n    public Unload(): void { }\n    public Init(): void { }\n    public Load(): void {\n        this._aftertaste = DataManager.data.get('aftertaste') ?? 0;\n    }\n\n    public getArousalSettings = (C: Character | PlayerCharacter): ArousalSettingsType | undefined => C.ArousalSettings;\n\n    public getOrgasmStage = (C: Character | PlayerCharacter): number => this.getArousalSettings(C)?.OrgasmStage ?? 0;\n\n    public set Aftertaste(level: number) {\n        DataManager.set('aftertaste', level, true);\n        this._aftertaste = level;\n    }\n    public get Aftertaste() {\n        return this._aftertaste;\n    }\n\n    /**\n     * 处理本模块的Hook函数\n     */\n    private HookList(): void {\n        // 处理高潮余韵等级的增加\n        HookManager.setHook('ActivityOrgasmStart', 'AftertasteSet', 2, (args) => {\n            if(!(args[0] as Character).IsPlayer() || ActivityOrgasmRuined) return;\n\n            const addedNumber = ActivityOrgasmGameResistCount + 1;\n            this.Aftertaste = this._aftertaste + addedNumber;\n            if (this._aftertaste > ArousalModule.MAX_AFTERTASTE) this.Aftertaste = ArousalModule.MAX_AFTERTASTE;\n            this.AftertasteEffectSetHandler(true);\n        });\n        // 处理同步ActivityOrgasmGameResistCount到player\n        HookManager.setHook('ActivityOrgasmStart', 'AftertasteSet', -2, (args) => {\n            if((args[0] as Character).IsPlayer()) DataManager.set('resistCount', ActivityOrgasmGameResistCount, true);\n        });\n\n        // 在进入聊天室时处理 余韵等级 高潮抵抗 快感进度 初始化\n        HookManager.setHook('ChatRoomSync', 'Test HookManager', -10, () => {\n            this.AftertasteEffectSetHandler(false);\n            ActivityOrgasmGameResistCount = DataManager.data.get('resistCount')\n            // const dataProgress = DataManager.data.get('progress');\n            // Player.ArousalSettings!.Progress = dataProgress;\n            // if (Player.BCT) {\n            //     Player.BCT.splitOrgasmArousal.arousalProgress = dataProgress;\n            // }\n            // if (Player.BCEArousal) Player.BCEArousalProgress = dataProgress;\n            // setTimeout(() => {\n            //     BCT_API.ActivityChatRoomBCTArousalSync(Player);\n            // }, 1200);\n        });\n\n        // 将进度信息同步到Mod\n        HookManager.setHook('ActivityChatRoomArousalSync', 'ArousalSync', -10, () => {\n            DataManager.set('progress', Player.ArousalSettings!.Progress);\n        });\n\n        // 处理对慢速移动\n        HookManager.setHook('Player.GetSlowLevel', 'aftertasteWeaknessEffect', -9, (args, lastResult) => {\n            if (Player.RestrictionSettings?.SlowImmunity)\n                return { args: args, result: 0 };\n            let result = lastResult;\n            if (typeof result === 'number' && this.afterEffectSwitch.weakness) {\n                let slowLevel = 1;\n                if (this._aftertaste > 55) slowLevel++;\n                if (this._aftertaste > 60) slowLevel++;\n                if (this._aftertaste > 70) slowLevel++;\n                if (result < slowLevel) result = slowLevel;\n                else result++;\n            }\n            return { args, result }\n        });\n\n        // 处理余韵对失明等级的增加\n        HookManager.setHook('Player.GetBlindLevel', 'aftertasteEffectAboutBlindLevel', -10, (args, lastResult) => {\n            let result = lastResult;\n            if (typeof result === 'number' && this.afterEffectSwitch.weakness) {\n                let blindLevel = 1;\n                if (this.afterEffectSwitch.twitch) blindLevel++;\n                if (this.afterEffectSwitch.trance) blindLevel++;\n                if (this.afterEffectSwitch.absentminded) blindLevel++;\n                if (result < blindLevel) result = blindLevel;\n                else result++;\n            }\n            return { args, result }\n        });\n\n        // 处理余韵对是否能够跪下的影响 这个函数返回false时不代表按钮不能按 只是表示不能直接切换为跪下站起  需要进行游戏\n        HookManager.setHook('Player.CanKneel', 'aftertasteEffectAboutCanKneel', 9, (args) => {\n            if (this.afterEffectSwitch.weakness) {\n                return { args, result: false }\n            }\n            return\n        });\n\n        // 处理余韵对听觉的限制\n        HookManager.setHook('Player.GetDeafLevel', 'aftertasteEffectAboutDeafLevel', -11, (args, lastResult) => {\n            let result = lastResult;\n            if (typeof result === 'number' && this.afterEffectSwitch.trance) {\n                let deafLevel = 1;\n                if (this.afterEffectSwitch.absentminded) deafLevel++;\n                if (result < deafLevel) result = deafLevel;\n                else result++;\n            }\n            return { args, result }\n        })\n\n        // 处理余韵对身体姿势的限制\n        HookManager.setHook('PoseAvailable', 'aftertasteEffectAboutPose', 3, (args) => {\n            const P = args[0] as Character;\n            if (P.IsPlayer() && this.afterEffectSwitch.twitch) {\n                return { args, result: false };\n            }\n            return;\n        });\n\n        // 处理余韵不能离开房间\n        HookManager.setHook('ChatRoomCanLeave', 'aftertasteEffectAboutCanLeave', 10, (args) => {\n            if (this.afterEffectSwitch.absentminded) return { args, result: false };\n            return;\n        });\n\n        // 处理余韵对发送消息的限制\n        HookManager.setHook('CommandParse', 'aftertasteEffectAboutChat', 10, (args) => {\n            if (this.afterEffectSwitch.relax) {\n                let msg = args[0] as string;\n                const firstChar = msg.charAt(0);\n                if (firstChar !== '*' && firstChar !== CommandsKey && firstChar !== '.' && firstChar !== '@' && firstChar !== '`' && firstChar !== '!') {\n                    const segmentList = segmentForCH(msg)\n                    if (segmentList === null) {\n                        conDebug('程序正在处理 消息分词，但您的浏览器不支持该功能!!! 无法显示余韵的特殊字符串加工效果。')\n                    } else {\n                        let cacheStr = '';\n                        for (let i = 0; i < segmentList.length; i++) {\n                            const subStr = segmentList[i];\n                            if (i === 0) cacheStr = subStr;\n                            else {\n                                cacheStr += this.msgSubStringHandle(subStr)\n                            }\n                        }\n                        msg = cacheStr;\n                    }\n                    (args[0] as string) = '*'.concat(msg).concat('....^(虚弱)');\n                }\n            }\n            return { args };\n        });\n    }\n    /**\n     * 处理消息中经过分词后的子字符串的显示效果\n     * 使用动态概率影响效果 概率分布符合 logistic 函数\n     * 简单来说 当余韵等级越高时 越容易出现屏蔽单词\n     * 等级越低时 越容易出现呻吟和口吃\n     * @param subStr 传入的子字符串\n     * @returns 处理后的字符串\n     */\n    private msgSubStringHandle(subStr: string): string {\n        // 获取三个概率判断结果\n        const probability_bold = Math.random() < getDynamicProbability(this._aftertaste, 0, ArousalModule.MAX_AFTERTASTE, 0.2, 0.8);\n        const probability_moan = Math.random() < getDynamicProbability(this._aftertaste, 0, ArousalModule.MAX_AFTERTASTE, 0.1, 0, true);\n        const probability_negative = Math.random() < getDynamicProbability(this._aftertaste, 0, ArousalModule.MAX_AFTERTASTE, 0.05, -0.02, true);\n\n        let formattedSubStr = subStr;\n\n        if (probability_bold) {\n            formattedSubStr = `..${'*'.repeat(subStr.length)}..`;\n        }\n\n        if (probability_moan) {\n            formattedSubStr += `${getMoan()}...`;\n        }\n\n        if (probability_negative) {\n            formattedSubStr += `-${formattedSubStr}`;\n        }\n\n        return formattedSubStr;\n    }\n\n    /**\n     * 处理本模块的TimerProcess\n     */\n    private TimerProcess(): void {\n        // 处理边缘增加抵抗高潮难度\n        TimerProcessInjector.add(101, 45000, () => {\n            return !!Player.ArousalSettings\n        }, {\n            code: () => {\n                if (Player.ArousalSettings!.Progress >= 93) {\n                    ActivityOrgasmGameResistCount++;\n                    DataManager.set('resistCount', ActivityOrgasmGameResistCount, true)\n                } else if (Player.ArousalSettings!.Progress < 60 && ActivityOrgasmGameResistCount >= 1) {\n                    ActivityOrgasmGameResistCount--;\n                    DataManager.set('resistCount', ActivityOrgasmGameResistCount, true)\n                }\n            },\n            name: \"EdgeTimer\"\n        });\n\n        // 处理高潮余韵的恢复 每15秒回复一次与当前高潮抵抗等级有关\n        TimerProcessInjector.add(100, 15000, () => {\n            return this._aftertaste > 0;\n        }, {\n            code: () => {\n                this.AftertasteFallBack();\n                this.AftertasteEffectSetHandler(true);\n            },\n            name: \"AftertasteFallBack\"\n        });\n\n        // 处理高潮余韵的无力效果\n        TimerProcessInjector.add(99, 0, () => {\n            return this._aftertaste >= 20;\n        }, {\n            code: () => {\n                if (this._aftertasteEffectSet.has('relax') && SkillGetModifier(Player, 'Bondage') >= 0) {\n                    SetSkillModifier('Bondage', 0.4, 5000);\n                    SetSkillModifier('SelfBondage', 0.4, 5000);\n                    SetSkillModifier('LockPicking', 0.4, 5000);\n                    SetSkillModifier('Evasion', 0.1, 5000);\n                    SetSkillModifier('Willpower', 0.8, 5000);\n                    SetSkillModifier('Infiltration', 0.2, 5000);\n                    SetSkillModifier('Dressage', 0.2, 5000);\n                }\n            },\n            name: \"AftertasteEffectHandle\"\n        });\n\n        // 处理是否需要禁用输入\n        TimerProcessInjector.add(-1, 200, () => {\n            return CurrentScreen == \"ChatRoom\" && Player.MemberNumber !== undefined;\n        }, {\n            code: () => {\n                // 高潮时的禁用\n                const orgasmStage = Player.ArousalSettings?.OrgasmStage;\n                if (orgasmStage == 1) {\n                    this.needSendEnduringMessage = true;\n                    if (!this.inputDisabled) {\n                        this.DisableInput(true);\n                    }\n                } else if (orgasmStage == 0) {\n                    this.needSendEnduringMessage = false;\n                    if (this.inputDisabled) {\n                        this.DisableInput(false);\n                    }\n                } else if (orgasmStage == 2) {\n                    this.needSendEnduringMessage = false;\n                }\n            },\n            name: \"DisableInput\"\n        });\n\n        // 处理是否需要发送忍耐的描述\n        TimerProcessInjector.add(-2, 2500, () => {\n            return this.needSendEnduringMessage;\n        }, {\n            code: () => {\n                MSGManager.SendActivity(this.getEndureDesc, Player.MemberNumber!);\n            },\n            name: 'SendEnduringMessage'\n        });\n\n    }\n\n\n    /**\n     * 补丁列表处理\n     */\n    private patchListHandler(): void {\n        // 处理OrgasmStart\n        HookManager.patchAdd(\"ActivityOrgasmStart\",\n            {// XSA补丁处理~ 基础高潮时间为 4~7秒, 每边缘45秒钟增加随机的 300ms ~ 1300ms 的高潮时间。 最多增加 20000ms，也就是最长高潮时间为 27 秒\n                \"C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\":\n                    `if (Player.XSBE && C.IsPlayer()) {\n                const addedTime = (Math.random() + 0.3) * 1000 * ActivityOrgasmGameResistCount;\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (addedTime > 20000 ? 20000 : addedTime) + 4000 + (3000 * Math.random());\n            } else {\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\n            }`,\n                // 高潮时将抵抗难度减半而非变为0\n                \"ActivityOrgasmGameResistCount = 0;\":\n                    \"ActivityOrgasmGameResistCount = Math.round(ActivityOrgasmGameResistCount / 2);\"\n            });\n\n        HookManager.patchAdd('ChatRoomMenuDraw',\n            { // 处理余韵对跪下的按钮的颜色处理\n                // 处理什么时候为黄色\n                'else if (name === \"Kneel\" && (Player.AllowedActivePoseMapping.BodyLower || Player.AllowedActivePoseMapping.BodyFull))':\n                    'else if (name === \"Kneel\" && (Player.AllowedActivePoseMapping.BodyLower || Player.AllowedActivePoseMapping.BodyFull|| (Player?.XSBE?.aftertasteEffect?.has(\"weakness\"))))',\n                // 处理什么时候为红色\n                'if (ChatRoomGetUpTimer === 0 && (ChatRoomCanAttemptStand() || ChatRoomCanAttemptKneel()))':\n                    'if (ChatRoomGetUpTimer === 0 && (ChatRoomCanAttemptStand() || ChatRoomCanAttemptKneel()) && !Player?.XSBE?.aftertasteEffect?.has(\"absentminded\"))'\n            });\n    }\n\n    /**\n     * 处理余韵等级的回落\n     * 高潮抵抗等级越大恢复越少 最多恢复20点 如果高潮抵抗等级超过20 则每次只恢复1点\n     */\n    private AftertasteFallBack(): void {\n        const n = 20 - ActivityOrgasmGameResistCount\n        const fallBackNumber = n <= 0 ? 1 : n;\n        this.Aftertaste = this.Aftertaste - fallBackNumber;\n        if (this._aftertaste < 0) this.Aftertaste = 0;\n    }\n\n    /** 余韵效果开关 */\n    private afterEffectSwitch: { [name in AftertasteEffect]: boolean } = {\n        relax: false,\n        weakness: false,\n        twitch: false,\n        trance: false,\n        absentminded: false\n    }\n    /** 余韵效果描述 */\n    private afterEffectDescribe: { [name in AftertasteEffect]: string[] } = {\n        relax: [`${PH.s}的身体在快感冲击下软了下来。浑身软绵绵的使不上力气。`,\n        `${PH.s}的身体渐渐恢复，重新恢复了正常的体力。`],\n        weakness: [`${PH.s}的身体在连续的快感冲击中变得越来越软，越来越无力，已经难以控制自己的身体。`,\n        `${PH.s}的身体虽然还是软绵绵的，但大概可以正常走路了。`],\n        twitch: [`连续深度的高潮冲击下，${PH.s}的身体不自觉的开始抽搐，再这么下去...`,\n        `${PH.s}停止了抽搐，但还是很难支撑起自己的身体。`],\n        trance: [`高潮过于猛烈，${PH.s}的脑袋已经不清楚了。恍恍惚惚，意识断断续续。想要移动的话..应该需要很大的意志力才能挪动吧。`,\n        `${PH.s}的意识恢复了，但身体还是时不时的抽动一下。`],\n        absentminded: [`强大的、连续的、不可抵挡的高潮冲击下，${PH.s}已经完全无法控制自己的身体。只能在无意识中抽搐着身体，发出细软的声音。这样的话...`,\n        `${PH.s}虽然还是恍恍惚惚，意识算是渐渐恢复了，希望这段时间没有发生什么。`]\n    }\n\n    /**\n     * 开关余韵效果\n     * @param name 要开关的效果名字\n     * @param value 开还是关?\n     */\n    private setAftertasteEffectSwitch(name: AftertasteEffect, value: boolean) {\n        const switchState = this.afterEffectSwitch[name];\n        if (switchState != value) {\n            if (value) {\n                this._aftertasteEffectSet.add(name);\n\n                if (name === 'relax') {\n                    AssetManager.PlayAudio('heartbeat', 0.5);\n                    if (Player.IsStanding()) PoseSetActive(Player, 'Kneel'); // 当放松时 自动跪下\n                }\n                if (name === 'weakness') {\n                    AssetManager.PlayAudio('heartbeat');\n                }\n                if (name === 'twitch') {\n                    AssetManager.PlayAudio('faultSound'); // 当抽搐时 自动播放 心跳音效\n                }\n                if (name === 'trance') {\n                    // AssetManager.PlayAudio('heartbeat');\n                    AssetManager.PlayAudio('sleep');\n                }\n                if (name === 'absentminded') {\n                    // AssetManager.PlayAudio('heartbeat');\n                    AssetManager.PlayAudio('sleep')\n                }\n\n                MSGManager.SendActivity(this.afterEffectDescribe[name][0], Player.MemberNumber!);\n            } else {\n                this._aftertasteEffectSet.delete(name);\n                MSGManager.SendActivity(this.afterEffectDescribe[name][1], Player.MemberNumber!);\n            }\n            this.afterEffectSwitch[name] = value;\n        }\n    }\n    /** 余韵效果的集合 */\n    private _aftertasteEffectSet: Set<AftertasteEffect> = new Set();\n    /**\n     * 余韵效果的判断与处理\n     * @param pushToServer 是否同步到服务器\n     */\n    private AftertasteEffectSetHandler(pushToServer: boolean): void {\n        const effectThresholds: Array<{ threshold: number, effect: AftertasteEffect }> = [\n            { threshold: 20, effect: \"relax\" },\n            { threshold: 50, effect: \"weakness\" },\n            { threshold: 70, effect: \"twitch\" },\n            { threshold: 90, effect: \"trance\" },\n            { threshold: 100, effect: \"absentminded\" },\n        ];\n\n        for (const { threshold, effect } of effectThresholds) {\n            this.setAftertasteEffectSwitch(effect, this._aftertaste > threshold);\n        }\n\n        DataManager.set('aftertasteEffect', this._aftertasteEffectSet, pushToServer);\n    }\n\n    /** 默认的输入框样式 */\n    inputDefaultStyle: { backgroundColor: string, borderColor: string, borderRadius: string } | undefined = undefined;\n    inputDisabled: boolean = false;\n    /**\n     * 获取{@link HTMLTextAreaElement}的默认样式，根据{@param isAbsent}决定是否禁用或取消禁用\n     * @param isAbsent 是否为失能状态\n     */\n    private DisableInput(isAbsent: boolean): void {\n        const inputElement: HTMLTextAreaElement | null = document.getElementById(\"InputChat\") as HTMLTextAreaElement;\n        if (!inputElement) return;\n        if (isAbsent) {\n            if (!inputElement.readOnly) {\n                if (!this.inputDefaultStyle) {\n                    this.inputDefaultStyle = {\n                        backgroundColor: inputElement.style.backgroundColor,\n                        borderColor: inputElement.style.borderColor,\n                        borderRadius: inputElement.style.borderRadius\n                    };\n                }\n                inputElement.readOnly = true;\n                this.inputDisabled = true;\n                inputElement.style.backgroundColor = \"#8d6f83\";\n                inputElement.style.borderColor = \"#ea44a9\";\n                inputElement.style.borderRadius = \"5px\";\n            }\n        } else {\n            if (inputElement.readOnly) {\n                inputElement.readOnly = false;\n                this.inputDisabled = false;\n                if (this.inputDefaultStyle) {\n                    inputElement.style.backgroundColor = this.inputDefaultStyle.backgroundColor;\n                    inputElement.style.borderColor = this.inputDefaultStyle.borderColor;\n                    inputElement.style.borderRadius = this.inputDefaultStyle.borderRadius;\n                }\n            }\n        }\n    }\n}","import BaseModule from \"../Base/BaseModule\";\n// import HookManager from \"../Utilities/HookManager\";\n// import { setAPI } from \"../Utilities/Utilities\";\n// import { DataManager } from \"../Utilities/DataManager\";\n\n\n// type wombTattoosLayersName = \"Zoom\" | \"Big\" | \"Bloom\" | \"BottomSpike\" | \"Flash\" | \"Fly\" | \"Grass\" | \"Grow\" | \"GrowHollow\" | \"HeartSmallOutline\" | \"Heartline\" | \"HeartSmall\" | \"HeartSolid\" | \"HeartWings\" | \"In\" | \"Leaves\" | \"MidSpike\" | \"Ribow\" | \"Sense\" | \"Shake\" | \"SideHearts\" | \"Swim\" | \"Thorn\" | \"ThornOut\" | \"TopSpike\" | \"Venom\" | \"Viper\" | \"Waves\" | \"WingSmall\";\n\nexport default class WombTattoosModule extends BaseModule {\n    // 功能搭配 高潮余韵与失神 系统\n    // 功能构想:\n    // 1. 当高潮余韵大于100时 也就是失能状态时 激活可以对目标角色施加淫纹\n    // 2. 当激活角色被激活淫纹时 淫纹会根据条件 进一步发展\n    // 3. 随着淫纹的发展程度 会触发不同的淫纹效果\n    // 4. 淫纹的发展程度会有额外的触发条件\n    // 5. 淫纹分7个阶段\n    // 6. 基础阶段为敏感度提升\n    // 7. 二为欲望提升 (依托于BCT_API.ActivitySetBCTArousal())\n\n    public Init(): void { }\n    public Load(): void { }\n    public Run(): void {\n        // // PreferenceLoad函数在设置界面加载时被调用\n        // HookManager.setHook(\"PreferenceLoad\", 'PreferenceLoadDebug', 10, () => {\n        //     // 展示了设置如何 包装原函数并替换原函数，并且储存原函数到API的方法，如果后续用的多 可以尝试做出Manager!\n        //     if (typeof PreferenceSubscreenBCTArousalLoad === 'function' && !window.XSBE_API?.originalPreferenceSubscreenBCTArousalLoad) {\n        //         setAPI('originalPreferenceSubscreenBCTArousalLoad', PreferenceSubscreenBCTArousalLoad)\n        //         PreferenceSubscreenBCTArousalLoad = function () {\n        //             if (Player?.BCT) {\n        //                 if (!Player?.BCT?.bctSettings.splitOrgasmArousal) Player.BCT.bctSettings.splitOrgasmArousal = true;\n        //                 if (!Player?.BCT?.bctSettings.arousalAffectsOrgasmProgress) Player.BCT.bctSettings.splitOrgasmArousal = true;\n        //             }\n        //             (window.XSBE_API!.originalPreferenceSubscreenBCTArousalLoad as () => void)();\n        //             // 执行自己的操作!\n        //         }\n        //     }\n        //     if (typeof PreferenceSubscreenBCTArousalClick === 'function' && !window.XSBE_API?.originalPreferenceSubscreenBCTArousalClick) {\n        //         setAPI('originalPreferenceSubscreenBCTArousalClick', PreferenceSubscreenBCTArousalClick)\n        //         PreferenceSubscreenBCTArousalClick = function () {\n        //             (window.XSBE_API!.originalPreferenceSubscreenBCTArousalClick as () => void)();\n        //             if (Player?.BCT) {\n        //                 if (!Player?.BCT?.bctSettings.splitOrgasmArousal) Player.BCT.bctSettings.splitOrgasmArousal = true;\n        //                 if (!Player?.BCT?.bctSettings.arousalAffectsOrgasmProgress) Player.BCT.bctSettings.arousalAffectsOrgasmProgress = true;\n        //             }\n        //         }\n        //     }\n        //     if (typeof PreferenceSubscreenBCTArousalRun === 'function' && !window.XSBE_API?.originalPreferenceSubscreenBCTArousalRun) {\n        //         setAPI('originalPreferenceSubscreenBCTArousalRun', PreferenceSubscreenBCTArousalRun)\n        //         PreferenceSubscreenBCTArousalRun = function () {\n        //             (window.XSBE_API!.originalPreferenceSubscreenBCTArousalRun as () => void)();\n        //             const BCTInputElementsName = ['InputArousalProgressMultiplier',\n        //                     'InputOrgasmProgressMultiplier',\n        //                     'InputArousalDecayMultiplier',\n        //                     'InputOrgasmDecayMultiplier'];\n        //                 for (const n of BCTInputElementsName) {\n        //                     const e = document.getElementById(n) as HTMLInputElement | null;\n        //                     if (e !== null) {\n        //                         e.disabled = true;\n        //                     }\n        //                 }\n        //         }\n        //     }\n        // })\n    }\n    public Unload(): void { }\n\n    /**\n     * 判断目标角色是否有淫纹\n     */\n    public static haveWombTattoos(C: Character | PlayerCharacter): boolean {\n        //查找WombTattoos\n        for (const item of C.Appearance) {\n            if (item.Asset !== null && item.Asset.Name === \"WombTattoos\") return true;\n        }\n        return false;\n    }\n\n    // 添加淫纹\n    \n\n}","/** @模块加载器 */\n\nimport BaseModule from \"../../Base/BaseModule\";\nimport ArousalModule from \"../../Modules/Arousal\";\nimport WombTattoosModule from \"../../Modules/WombTattoos\";\nimport { conDebug } from \"../Utilities\";\n\nexport default class ModulesLoader {\n    /** @模块集合 用于加载模块 */\n    private static modules = new Map<moduleName, BaseModule>();\n    /** @模块列表 用于注册模块 并排序*/\n    private static modulesList: BaseModule[] = [];\n\n    /** 表示是否成功加载 */\n    public static successfulLoaded = false;\n    /** 加载模块数量 */\n    private static loadedCount = 0;\n    private static readonly fullLoadedCount = 2;\n\n    /** @注册模块 */\n    public static registerModule() {\n        for (const n in this.modulesBuilder) {\n            if (n === 'base') continue;\n            const module = this.modulesBuilder[n as moduleName]();\n            this.modulesList.push(module);\n        }\n        this.modulesList.sort((a, b) => {\n            if (a.Info.priority === b.Info.priority) {\n                return 0;\n            }\n            return a.Info.priority > b.Info.priority ? 1 : -1;\n        });\n        for (const m of this.modulesList) this.modules.set(m.Info.name, m);\n    }\n\n    /** @初始化模块 */\n    public static initModules() {\n        for (const [name, module] of this.modules) {\n            module.Init();\n            conDebug(`模块 ${name} 初始化完成`);\n        }\n        conDebug(`模块初始化结束`);\n    }\n\n    /** @加载模块 */\n    public static loadModules() {\n        for (const [name, m] of this.modules) {\n            m.Load();\n            this.loadedCount++;\n            conDebug(`模块 ${name} 加载完成`);\n        }\n        conDebug(`模块加载结束 ${this.loadedCount}/${this.fullLoadedCount}`);\n        if (this.loadedCount === this.fullLoadedCount) {\n            this.successfulLoaded = true;\n            conDebug(`模块加载完成!`);\n        }\n    }\n\n    /** @运行模块 */\n    public static runModules() {\n        for (const [name, module] of this.modules) {\n            module.Run();\n            conDebug(`模块 ${name} 运行完成`);\n        }\n        conDebug(`模块运行结束`);\n    }\n\n    /**\n     * 获取已加载的特定模块\n     * @param name 需要获取的模块名字\n     * @returns 获取到的模块\n     */\n    public static getModule<T extends BaseModule>(name: moduleName): T {\n        return this.modules.get(name) as T;\n    }\n\n\n    /** @模块生成器 用于生成模块 */\n    private static modulesBuilder: { [key in moduleName]: () => BaseModule } = {\n        base: () => { throw new Error(\"BaseModule 不应该被创建\") },\n        WombTattoosModule: () => {\n            return new WombTattoosModule({\n                name: \"WombTattoosModule\",\n                priority: 0,\n                description: \"淫纹相关的模块。修改与拓展了游戏淫纹的功能。\"\n            })\n        },\n        ArousalModule: () => {\n            return new ArousalModule({\n                name: \"ArousalModule\",\n                priority: 0,\n                description: \"Arousal模块。修改与拓展了游戏Arousal的功能。包括高潮等机制。\"\n            })\n        }\n    }\n\n}","import { hookFunction } from \"./Utilities/BCSDK\";\nimport { conDebug, DebugMSGType } from \"./Utilities/Utilities\";\nimport DataManager from \"./Utilities/DataManager\";\nimport TimerProcessInjector from \"./Utilities/TimerProcessInjector\";\nimport ModulesLoader from \"./Utilities/Modules/ModulesLoader\";\nimport AssetManager from \"./Utilities/AssetManager\";\n// import { HookManager } from \"./Utilities/HookManager\";\n\nfunction initWait() {\n    conDebug({\n        name: \"Start Init\",\n        type: DebugMSGType.Workflow_Log,\n        content: \"Init wait\"\n    });\n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        // 加载模组\n        hookFunction('LoginResponse', -999, (args, next) => {\n            const result = next(args);\n            conDebug({\n                name: `Init! Login Response caught`,\n                content: args,\n                type: DebugMSGType.Workflow_Log\n            });\n            const response = args[0] as Character | string;\n            if (response && typeof response === 'object' && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n                init();\n            }\n            return result;\n        });\n    }\n}\n\nfunction init() {\n    if (ModulesLoader.successfulLoaded) return;\n\n    AssetManager.cacheAssets();\n    \n    // HookManager.setHook('ChatRoomSync', 'Test HookManager', -1, () => {\n    //     testOverrideFunction();\n    //     return\n    // })\n\n\n    // 数据处理\n    DataManager.Init()\n    conDebug({\n        name: \"Data Init Complete\",\n        type: DebugMSGType.Workflow_Log,\n        content: DataManager.data\n    });\n    TimerProcessInjector.Init();\n\n    ModulesLoader.registerModule();\n    ModulesLoader.initModules();\n    ModulesLoader.loadModules();\n    ModulesLoader.runModules();\n\n    TimerProcessInjector.Load();\n    TimerProcessInjector.Run();\n\n}\n\n\n\ninitWait();\n"],"names":["o","e","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","c","warn","s","f","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","l","precomputed","window","split","slice","join","encode","padStart","toUpperCase","d","originalHash","Object","assign","router","context","contextProperty","p","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","repository","allowReplace","apiEndpointEnter","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","globalThis","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","defineProperty","exports","value","bcModSDK","XSBE_VERSION","startsWith","target","DebugMSGType","conDebug","msg","isError","color","style","DEBUG","result","type","DebugLog","content","time","Date","toLocaleString","ModVersion","debug","theColor","SetSkillModifier","duration","realLevel","SkillGetLevelReal","Player","targetValue","Math","floor","SkillSetModifier","XSBE_API","MOAN","getDynamicProbability","min","max","alpha","beta","reverse","x","probability","exp","LimitedScope","ExtensionStorage","ExtensionSettings","XSBE","DataBody","constructor","data","onlineKeys","settingKeys","localKeys","_a","defaultXSBE","OnlineSharedSettings","defaultCharacterOnlineSharedSettings","k","initSingleDataHandle","compareServerDataAndLocalDataAndUpdate","updateExtensionSettings","ExtObj","getExtensionSettings","serverExtensionSettingObject","serverTimestamp","localTimestamp","getDataFromLocalStorage","hasOwnProperty","dataValue","serverValue","setTimestampToLocalStorage","key","upload","updateLocalTimestamp","isSettings","localStorage","setItem","getLocalKeyFromKey","JSON","stringify","Settings","_value","updatePlayer","localValue","CommonTime","ExtensionSettingsObject","LZString","compressToBase64","ServerPlayerExtensionSettingsSync","parse","decompressFromBase64","getLocalStorage","localStorageObject","getItem","hasWombTattoos","aftertaste","defaultSetting","enabled","timestamp","DataManager","Init","private_data","resistCount","aftertasteEffect","progress","XSBE_Data","TimerProcessInjector","ProcessSequence","TimerProcessInjectorSequence","RegisteredProcess","ProcessCodeMap","activatedProcess","processSortList","Load","sortProcessList","item","itemInterval","interval","nextInterval","Run","args","next","currentTime","now","nextTriggerTime","condition","code","run","b","codeItem","codeMap","remove","runList","BaseModule","info","Info","description","Loaded","letSuccessfullyLoad","AssetManager","cacheImg","src","img","Image","onload","AssetMap","cacheSound","audio","Audio","load","cacheAssets","imgSrcList","soundSrcList","getAssets","GatImg","PlayAudio","volume","vol","AudioSettings","Volume","play","PlayerOriginalAudio","AudioPlayInstantSound","IOAssetSrc","suffix","HookManager","NewHookItem","HookItem","setHook","functionName","hookItem","_hookMap","topItem","bottom","_item","addHook","removeHook","completeHookItem","topRemoveCallback","topLastResult","undefined","bottomRemoveCallback","bottomLastResult","patchAdd","patchRemove","itemMap","itemSequence","forEach","index","findIndex","callback","resultList","callbackResult","Symbol","iterator","keys","done","PH","MSGManager","SendEmote","ServerSend","Content","Type","SendChat","SendLocalMessage","className","timeout","ChatRoomSendLocal","SendActivity","sourceCharacter","targetCharacter","sourceCharacterObj","ChatRoomCharacter","find","MemberNumber","targetCharacterObj","sourceCharacterNickname","CharacterNickname","targetCharacterNickname","resultDict","Tag","Text","SourceCharacter","TargetCharacter","Dictionary","Sender","ArousalModule","_aftertaste","descriptionOfEnduranceActivities","needSendEnduringMessage","getArousalSettings","C","ArousalSettings","getOrgasmStage","OrgasmStage","afterEffectSwitch","relax","weakness","twitch","trance","absentminded","afterEffectDescribe","_aftertasteEffectSet","inputDefaultStyle","inputDisabled","getEndureDesc","random","HookList","patchListHandler","TimerProcess","Unload","Aftertaste","level","IsPlayer","ActivityOrgasmRuined","addedNumber","ActivityOrgasmGameResistCount","MAX_AFTERTASTE","AftertasteEffectSetHandler","Progress","lastResult","RestrictionSettings","SlowImmunity","slowLevel","blindLevel","deafLevel","firstChar","charAt","CommandsKey","segmentList","str","Intl","Segmenter","TranslationLanguage","toLowerCase","segmenterResult","granularity","segment","results","segmentForCH","cacheStr","subStr","msgSubStringHandle","concat","probability_bold","probability_moan","probability_negative","formattedSubStr","repeat","AftertasteFallBack","SkillGetModifier","CurrentScreen","orgasmStage","DisableInput","fallBackNumber","setAftertasteEffectSwitch","IsStanding","PoseSetActive","pushToServer","effectThresholds","threshold","effect","isAbsent","inputElement","document","getElementById","readOnly","backgroundColor","borderColor","borderRadius","WombTattoosModule","haveWombTattoos","Appearance","Asset","Name","ModulesLoader","registerModule","modulesBuilder","module","modulesList","modules","initModules","loadModules","loadedCount","fullLoadedCount","successfulLoaded","runModules","getModule","base","Workflow_Log","response","AccountName"],"mappings":"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","x_google_ignoreList":[0]}