{"version":3,"file":"XSBCExpansion.js","sources":["../node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js","../scr/Models/ModInfo.ts","../scr/Utilities/BCSDK.ts","../scr/Utilities/Utilities.ts","../scr/Base/Data.ts","../scr/Utilities/DataManager.ts","../scr/Utilities/TimerProcessInjector.ts","../scr/Models/ModuleInfo.ts","../scr/Base/BaseModule.ts","../scr/Utilities/AssetManager.ts","../scr/Utilities/HookManager.ts","../scr/Utilities/MessageManager.ts","../scr/Modules/Arousal.ts","../scr/Modules/WombTattoos.ts","../scr/Utilities/Modules/ModulesLoader.ts","../scr/main.ts"],"sourcesContent":["// Bondage Club Mod Development Kit (1.1.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const e=\"1.1.0\";function o(e){alert(\"Mod ERROR:\\n\"+e);const o=new Error(e);throw console.error(o),o}const t=new TextEncoder;function n(e){return!!e&&\"object\"==typeof e&&!Array.isArray(e)}function r(e){const o=new Set;return e.filter((e=>!o.has(e)&&o.add(e)))}const i=new Map,a=new Set;function d(e){a.has(e)||(a.add(e),console.warn(e))}function s(e){const o=[],t=new Map,n=new Set;for(const r of p.values()){const i=r.patching.get(e.name);if(i){o.push(...i.hooks);for(const[o,a]of i.patches.entries())t.has(o)&&t.get(o)!==a&&d(`ModSDK: Mod '${r.name}' is patching function ${e.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${o}\\nPatch1:\\n${t.get(o)||\"\"}\\nPatch2:\\n${a}`),t.set(o,a),n.add(r.name)}}o.sort(((e,o)=>o.priority-e.priority));const r=function(e,o){if(0===o.size)return e;let t=e.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of o.entries())t.includes(n)||d(`ModSDK: Patching ${e.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(e.original,t);let i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,e.name,n),d=r.apply(this,o);return null==a||a(),d};for(let t=o.length-1;t>=0;t--){const n=o[t],r=i;i=function(o){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,e.name,n.mod),d=n.hook.apply(this,[o,e=>{if(1!==arguments.length||!Array.isArray(o))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof e}`);return r.call(this,e)}]);return null==a||a(),d}}return{hooks:o,patches:t,patchesSources:n,enter:i,final:r}}function c(e,o=!1){let r=i.get(e);if(r)o&&(r.precomputed=s(r));else{let o=window;const a=e.split(\".\");for(let t=0;t<a.length-1;t++)if(o=o[a[t]],!n(o))throw new Error(`ModSDK: Function ${e} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const d=o[a[a.length-1]];if(\"function\"!=typeof d)throw new Error(`ModSDK: Function ${e} to be patched not found`);const c=function(e){let o=-1;for(const n of t.encode(e)){let e=255&(o^n);for(let o=0;o<8;o++)e=1&e?-306674912^e>>>1:e>>>1;o=o>>>8^e}return((-1^o)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(d.toString().replaceAll(\"\\r\\n\",\"\\n\")),l={name:e,original:d,originalHash:c};r=Object.assign(Object.assign({},l),{precomputed:s(l),router:()=>{},context:o,contextProperty:a[a.length-1]}),r.router=function(e){return function(...o){return e.precomputed.enter.apply(this,[o])}}(r),i.set(e,r),o[r.contextProperty]=r.router}return r}function l(){const e=new Set;for(const o of p.values())for(const t of o.patching.keys())e.add(t);for(const o of i.keys())e.add(o);for(const o of e)c(o,!0)}function f(){const e=new Map;for(const[o,t]of i)e.set(o,{name:o,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((e=>e.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return e}const p=new Map;function u(e){p.get(e.name)!==e&&o(`Failed to unload mod '${e.name}': Not registered`),p.delete(e.name),e.loaded=!1,l()}function g(e,t,r){\"string\"==typeof e&&\"string\"==typeof t&&(alert(`Mod SDK warning: Mod '${e}' is registering in a deprecated way.\\nIt will work for now, but please inform author to update.`),e={name:e,fullName:e,version:t},t={allowReplace:!0===r}),e&&\"object\"==typeof e||o(\"Failed to register mod: Expected info object, got \"+typeof e),\"string\"==typeof e.name&&e.name||o(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof e.name);let i=`'${e.name}'`;\"string\"==typeof e.fullName&&e.fullName||o(`Failed to register mod ${i}: Expected fullName to be non-empty string, got ${typeof e.fullName}`),i=`'${e.fullName} (${e.name})'`,\"string\"!=typeof e.version&&o(`Failed to register mod ${i}: Expected version to be string, got ${typeof e.version}`),e.repository||(e.repository=void 0),void 0!==e.repository&&\"string\"!=typeof e.repository&&o(`Failed to register mod ${i}: Expected repository to be undefined or string, got ${typeof e.version}`),null==t&&(t={}),t&&\"object\"==typeof t||o(`Failed to register mod ${i}: Expected options to be undefined or object, got ${typeof t}`);const a=!0===t.allowReplace,d=p.get(e.name);d&&(d.allowReplace&&a||o(`Refusing to load mod ${i}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(d));const s=e=>{\"string\"==typeof e&&e||o(`Mod ${i} failed to patch a function: Expected function name string, got ${typeof e}`);let t=g.patching.get(e);return t||(t={hooks:[],patches:new Map},g.patching.set(e,t)),t},f={unload:()=>u(g),hookFunction:(e,t,n)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);\"number\"!=typeof t&&o(`Mod ${i} failed to hook function '${e}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&o(`Mod ${i} failed to hook function '${e}': Expected hook function, got ${typeof n}`);const a={mod:g.name,priority:t,hook:n};return r.hooks.push(a),l(),()=>{const e=r.hooks.indexOf(a);e>=0&&(r.hooks.splice(e,1),l())}},patchFunction:(e,t)=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);const r=s(e);n(t)||o(`Mod ${i} failed to patch function '${e}': Expected patches object, got ${typeof t}`);for(const[n,a]of Object.entries(t))\"string\"==typeof a?r.patches.set(n,a):null===a?r.patches.delete(n):o(`Mod ${i} failed to patch function '${e}': Invalid format of patch '${n}'`);l()},removePatches:e=>{g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`);s(e).patches.clear(),l()},callOriginal:(e,t,n)=>(g.loaded||o(`Mod ${i} attempted to call SDK function after being unloaded`),\"string\"==typeof e&&e||o(`Mod ${i} failed to call a function: Expected function name string, got ${typeof e}`),Array.isArray(t)||o(`Mod ${i} failed to call a function: Expected args array, got ${typeof t}`),function(e,o,t=window){return c(e).original.apply(t,o)}(e,t,n)),getOriginalHash:e=>(\"string\"==typeof e&&e||o(`Mod ${i} failed to get hash: Expected function name string, got ${typeof e}`),c(e).originalHash)},g={name:e.name,fullName:e.fullName,version:e.version,repository:e.repository,allowReplace:a,api:f,loaded:!0,patching:new Map};return p.set(e.name,g),Object.freeze(f)}function h(){const e=[];for(const o of p.values())e.push({name:o.name,fullName:o.fullName,version:o.version,repository:o.repository});return e}let m;const y=function(){if(void 0===window.bcModSdk)return window.bcModSdk=function(){const o={version:e,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:f,errorReporterHooks:Object.seal({hookEnter:null,hookChainExit:null})};return m=o,Object.freeze(o)}();if(n(window.bcModSdk)||o(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&o(`Failed to init Mod SDK: Different version already loaded ('1.1.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==e&&(alert(`Mod SDK warning: Loading different but compatible versions ('1.1.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk.version.startsWith(\"1.0.\")&&void 0===window.bcModSdk._shim10register)){const e=window.bcModSdk,o=Object.freeze(Object.assign(Object.assign({},e),{registerMod:(o,t,n)=>o&&\"object\"==typeof o&&\"string\"==typeof o.name&&\"string\"==typeof o.version?e.registerMod(o.name,o.version,\"object\"==typeof t&&!!t&&!0===t.allowReplace):e.registerMod(o,t,n),_shim10register:!0}));window.bcModSdk=o}return window.bcModSdk}();return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n","export const MOD_NAME = 'XSBE';\nexport const MOD_FULL_NAME = \"Xiaosu's BC Expansion\";\n\nexport const REPOSITORY_URL = 'https://github.com/iceriny/XiaosuBCExpansion';","import bcModSDKRef from \"bondage-club-mod-sdk\";\nimport * as ModInfo from \"../Models/ModInfo\";\nimport * as Info from \"../Models/SDKInfo\";\n\n\n//   VVVVVVVVVVVVVVVVVVVVVVVVVVVVV  ----SDK----  VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV    //\nexport const bcModSDK = bcModSDKRef.registerMod({\n    name: ModInfo.MOD_NAME,\n    fullName: ModInfo.MOD_FULL_NAME,\n    version: XSBE_VERSION.startsWith(\"v\") ? XSBE_VERSION.slice(1) : XSBE_VERSION,\n    repository: ModInfo.REPOSITORY_URL\n});\nexport function hookFunction(target: string, priority: Info.HookPriority, hook:Info.PatchHook): () => void {\n    const removeCallback = bcModSDK.hookFunction(target, priority, hook);\n    return removeCallback;\n}\n\nexport function patchFunction(functionName: string, patches: Record<string, string | null>): void {\n    bcModSDK.patchFunction(functionName, patches);\n}\n\nexport function removePatches(functionName: string){\n    bcModSDK.removePatches(functionName);\n}\n\n//    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ----SDK----  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^    //","/**\n * Debug信息对象接口\n */\ninterface XSDebugMSG {\n    name?: string;\n    type?: DebugMSGType;\n    content: unknown;\n}\n/**\n * Debug信息类型\n */\nexport enum DebugMSGType {\n    DebugLog,\n    Workflow_Log,\n    Error\n}\n/**\n * 发送debug信息到控制台\n * @param msg 信息\n * @param color 可选颜色参数\n * @param style 可选的css风格参数\n * @returns 无\n */\nexport function conDebug(msg: XSDebugMSG | string, isError: boolean = false, color: string | null = null, style: string | null = null) {\n    if (DEBUG === false) return;\n\n\n    const result: object = typeof msg === \"string\" ? {\n        name: \"XiaoSuActivity_Debug\",\n        type: DebugMSGType.DebugLog,\n        content: msg,\n        time: new Date().toLocaleString(),\n        ModVersion: XSBE_VERSION,\n    } : {\n        name: msg.name,\n        type: msg.type,\n        content: msg.content,\n        time: new Date().toLocaleString(),\n        ModVersion: XSBE_VERSION\n    }\n    if (style) {\n        console.debug(\"%c小酥的模组信息: \", style, result);\n    } else {\n        let theColor = 'rgba(191, 154, 175, 1)';\n        if (isError) {\n            theColor = 'rgba(255, 0, 0, 1)'\n        }\n        if (color) {\n            theColor = color\n        }\n        console.debug(\"%c小酥的模组信息: \", `background-color: ${theColor}; font-weight: bold;`, result);\n    }\n}\nsetAPI('XSBE_Debug', conDebug)\n\n/** 技能倍率buff */\nexport function SetSkillModifier(name: SkillType, value: number, duration: number) {\n    const realLevel = SkillGetLevelReal(Player, name);\n    const targetValue = Math.floor(realLevel * value);\n    const correction = targetValue - realLevel;\n    SkillSetModifier(Player, name, correction, duration);\n}\n\n/**\n * 处理结巴效果基于segmenter.segment()分词\n * @param str 传入的字符串\n * @returns 返回处理后的字符串\n */\nexport function segmentForCH(str: string): string[] | null {\n    // 检查浏览器是否支持 Intl.Segmenter\n    if (window.Intl && window.Intl.Segmenter && TranslationLanguage.toLowerCase() === \"cn\") {\n        const segmenter = new Intl.Segmenter('zh', { granularity: 'word' }); // 创建分词器实例\n        const segmenterResult = segmenter.segment(str); // 对文本进行分词\n        const results: string[] = []\n        for (const segment of segmenterResult) {\n            results.push(segment.segment);\n        }\n\n        conDebug(`segmentForCH: ${results}`)\n        return results;\n    } else {\n        return null;\n    }\n}\n/** 呻吟词库 */\nconst MOAN: string[] = [\n    \" ❤呀~\",\n    \" 嗯❤~\",\n    \" 姆嗯❤~\",\n    \" 昂~❤\",\n    \" ❤啊~\",\n    \" 哈啊..\",\n    \" 呜❤..\",\n    \" --嘶❤~\",\n    \" 唔❤..\",\n    \" ❤嘶哈~\",\n    \" ❤呀嗯..\",\n    \" ❤.哦~\"\n];\n\n/**\n * 随机获取一个呻吟字符串\n * @see MOAN\n * @returns 一个呻吟字符串\n */\nexport function getMoan(): string {\n    return MOAN[Math.floor(Math.random() * MOAN.length)];\n}\n\n/**\n * 获取一个动态概率 其值在最大值和最小值范围内成S曲线分布\n * @param value 当前值\n * @param min 当前值的最小值\n * @param max 当前值的最大值\n * @param alpha 控制曲线的平缓程度 数值越大越陡峭\n * @param beta 控制曲线的中点 数值越大越靠近最大值\n * @returns 返回一个概率值 范围在0~1之间\n */\nexport function getDynamicProbability(value: number, min: number = 0, max: number = 100, alpha: number = 1, beta: number = 0.5, reverse: boolean = false): number {\n    // 将 value 的范围从 [min, max] 映射到 [0, 1]\n    const x = (value - min) / (max - min);\n\n    // 使用 logistic 函数来计算动态概率\n    let probability = 1 / (1 + Math.exp(-alpha * max * (x - beta)));\n    // 如果需要反向处理则取 1 - probability将曲线左右倒置\n    if (reverse) {\n        probability = 1 - probability;\n    }\n\n    // 返回概率并限制在0~1之间以避免 计算浮点数时的精度丢失 导致的概率溢出\n    return LimitedScope(0, 1, probability)\n}\n\n/**\n * 限制一个数值在指定范围内\n * @param min 最小值\n * @param max 最大值\n * @param value 输入值\n * @returns 返回限制后的值\n */\nexport function LimitedScope(min: number, max: number, value: number): number {\n    return Math.min(max, Math.max(min, value));\n}\n\nexport function setAPI(name: string, value: unknown): void {\n    if (window.XSBE_API) {\n        window.XSBE_API[name] = value;\n    } else {\n        window.XSBE_API = { [name]: value }\n    }\n}","import { conDebug } from \"../Utilities/Utilities\";\n\n/** @Mod的数据类 */\nexport type dataType = 'online' | 'setting' | 'local'\n\nexport const PlayerStorage = () => Player?.XSBE;\nexport const PlayerOnlineSharedSettingsStorage = () => Player.OnlineSharedSettings?.XSBE;\nexport const ExtensionStorage = () => Player.ExtensionSettings?.XSBE as string;\n/**\n * mod所使用的数据的类\n */\nexport class DataBody<T extends IDataBody> {\n\n    /** 在线分享数据的key集合 */\n    private onlineKeys: Set<keyof T>;\n    /** 设置数据的key集合 */\n    private settingKeys: Set<keyof T>;\n    /** 本地数据的key集合 */\n    private localKeys: Set<keyof T>;\n\n    private static readonly defaultCharacterOnlineSharedSettings: XSBE_SharedSettings = {\n        version: '',\n        hasWombTattoos: false,\n        aftertaste: 0,\n    }\n    private static readonly defaultSetting: XSBE_Settings = {\n        enabled: false\n    }\n    private static readonly defaultXSBE: XSBE_PlayerData = {\n        version: '',\n        timestamp: 0,\n        hasWombTattoos: false,\n        aftertaste: 0,\n        Settings: this.defaultSetting,\n    }\n\n    /**\n     * 创建数据类\n     * @param data 以此为模板创建数据\n     * @param onlineKeys 数据中哪些键是在线分享数据\n     * @param settingKeys 数据中哪些键是设置键\n     * @param localKeys 数据中哪些键是本地数据键\n     */\n    constructor(private data: T, onlineKeys: (keyof T)[], settingKeys: (keyof T)[], localKeys: (keyof T)[]) {\n        this.onlineKeys = new Set(onlineKeys);\n        this.settingKeys = new Set(settingKeys);\n        this.localKeys = new Set(localKeys);\n        if (!Player.XSBE) {\n            Player['XSBE'] = DataBody.defaultXSBE\n        }\n        if (!Player.OnlineSharedSettings?.XSBE) {\n            Player.OnlineSharedSettings!['XSBE'] = DataBody.defaultCharacterOnlineSharedSettings\n        }\n        for (const k in this.data) {\n            this.initSingleDataHandle(k, this.data[k])\n        }\n\n        if (ExtensionStorage()) {\n            // 比对服务器数据和本地数据谁更新 并且使用更新的数据\n            this.compareServerDataAndLocalDataAndUpdate();\n        }\n        this.updateExtensionSettings();\n    }\n\n\n    /**\n     * 比较服务器数据和本地数据并更新\n     */\n    private compareServerDataAndLocalDataAndUpdate() {\n        let ExtObj = this.getExtensionSettings()\n        if (!ExtObj) ExtObj = {}\n        // 获取服务器数据\n        const serverExtensionSettingObject = ExtObj as Record<keyof T, T[keyof T]> //| Record<string, never>;\n        // 获取服务器数据的时间戳\n        const serverTimestamp: number = (serverExtensionSettingObject['timestamp'] as number | undefined) ?? 0;\n        // 获取本地数据的时间戳\n        const localTimestamp: number = this.getDataFromLocalStorage('timestamp') ?? 0;\n\n        if (serverExtensionSettingObject) {\n            if (serverTimestamp > localTimestamp) {\n                // 如果服务器数据的时间戳大于等于本地数据的时间戳，则更新更新内存数据\n                for (const k in serverExtensionSettingObject) {\n                    if (Object.hasOwnProperty.call(this.data, k)) {\n                        if (k == 'version') continue; // 将来添加版本号的比对功能\n                        const dataValue = this.data[k as keyof T];\n                        const serverValue = serverExtensionSettingObject[k];\n                        if (dataValue !== serverValue) {\n                            this.set(k, serverValue as T[keyof T], false)\n                        }\n                    }\n                }\n                this.setTimestampToLocalStorage();\n            }\n        }\n    }\n\n    /**\n     * 获取数据\n     * 因为在set时同步了数据到Player.XSBE中 所以这里获取到的应该和Player中的一致\n     * @param key key值\n     * @returns 获取到的数据\n     */\n    get<K extends keyof T>(key: K): T[K] {\n        return this.data[key];\n    }\n\n    /**\n     * 设置数据 同步到Player中 可选的同步到服务器\n     * @param key 设置数据的键\n     * @param value 设置数据的值\n     * @param upload 是否同步到服务器\n     */\n    set<K extends keyof T>(key: K, value: T[K], upload: boolean = false, updateLocalTimestamp: boolean = true) {\n        // 设置类内数据与数据类型标记\n        this.data[key] = value;\n        // if (dataType) {\n        //     switch (dataType) {\n        //         case 'online':\n        //             this.onlineKeys.add(key);\n        //             this.localKeys.add(key);\n        //             break;\n        //         case 'setting':\n        //             this.settingKeys.add(key);\n        //             this.localKeys.add(key);\n        //             break;\n        //         case 'local':\n        //             this.localKeys.add(key);\n        //             break;\n        //     }\n        // }\n\n        // 设置Player中的数据\n        // 表示是否是设置数据\n        let isSettings = false;\n        // 如果在本地key中\n        if (this.localKeys.has(key)) {\n            // 设置/更新本地空间中的数据\n            localStorage.setItem(this.getLocalKeyFromKey(key), JSON.stringify(value));\n            if (updateLocalTimestamp) this.setTimestampToLocalStorage();\n\n            // 如果是设置数据 则把内容放入Player.XSBE的setting中\n            if (this.settingKeys.has(key)) {\n                Player.XSBE!.Settings![key as string] = value;\n                isSettings = true;\n            } else if (this.onlineKeys.has(key) && Player.OnlineSharedSettings) {\n                // 如果是在线数据 则把内容放入Player.OnlineSharedSettings.XSBE中\n                Player.OnlineSharedSettings.XSBE![key as string] = value\n            }\n            // 如果需要更新到服务器 则更新到服务器 换句话说是放入Player.ExtensionSettings中\n            if (upload) this.updateExtensionSettings();\n        }\n\n        // 如果不是设置数据则放入Player.XSBE中\n        if (!isSettings) Player.XSBE![key as string] = value;\n    }\n\n\n\n\n    private initSingleDataHandle<K extends keyof T>(key: K, value: T[K]) {\n        let _value: T[K] = value;\n        let updatePlayer = true;\n        // 如果k为本地数据key\n        if (this.localKeys.has(key)) {\n            // 尝试获取本地数据\n            const localValue = this.getDataFromLocalStorage(key)\n            // 如果获取到 将获取到的值用于后续初始化\n            if (localValue) {\n                _value = localValue;\n            }\n\n            if (this.settingKeys.has(key)) {\n                Player.XSBE!.Settings![key as string] = _value;\n                updatePlayer = false;\n            } else if (this.onlineKeys.has(key)) {\n\n                if (!Player.OnlineSharedSettings?.XSBE?.[key as string]) {\n                    Player.OnlineSharedSettings!.XSBE![key as string] = _value;\n                } else {\n                    _value = Player.OnlineSharedSettings.XSBE[key as string] as T[K];\n                }\n                // this.updateExtensionSettings();\n            }\n        }\n        // set on Player\n        if (key === 'timestamp') {\n            _value = CommonTime() as T[K];\n        }\n        if (updatePlayer) Player.XSBE![key as string] = _value;\n        this.data[key] = _value;\n    }\n\n    /**\n     * 更新ExtensionSettings到服务器\n     */\n    updateExtensionSettings() {\n        // 创建一个新对象，用于存储满足条件的键值对\n        const ExtensionSettingsObject: T = {} as T;\n        // 使用循环遍历原始对象的键值对\n        for (const key in this.data) {\n            if (Object.hasOwnProperty.call(this.data, key)) {\n                if (this.localKeys.has(key)) {\n                    // 将满足条件的键值对添加到新对象中\n                    ExtensionSettingsObject[key] = this.data[key];\n                }\n            }\n        }\n        if (!ExtensionStorage()) {\n            Player.ExtensionSettings.XSBE = ''\n        }\n        Player.ExtensionSettings.XSBE = LZString.compressToBase64(JSON.stringify(ExtensionSettingsObject));\n        ServerPlayerExtensionSettingsSync('XSBE');\n    }\n\n    // /**\n    //  * 获取服务器数据并更新本地数据\n    //  */\n    // downloadExtensionSettings<K extends keyof T>() {\n    //     const value = this.getExtensionSettings();\n    //     if (ExtensionStorage() && value) {\n    //         const ExtensionSettingsObject = value as Record<K, T[K]>;\n    //         for (const key in ExtensionSettingsObject) {\n    //             if (Object.hasOwnProperty.call(this.data, key)) {\n    //                 this.set(key as K, ExtensionSettingsObject[key]);\n    //             }\n    //         }\n    //     }\n    // }\n\n    /**\n     * 获取服务器的ExtensionSettings字符串解压后返回为一个对象\n     * @returns 返回从服务器获取到的数据的对象\n     */\n    getExtensionSettings() {\n        let result;\n        try {\n            result = JSON.parse(LZString.decompressFromBase64(ExtensionStorage()) ?? '')\n        } catch (error) {\n            conDebug({\n                name: 'Decompress ExtensionSettings Fail!!!  返回 null !!',\n                content: error\n            }, true);\n            result = null;\n        }\n        return result as object | null;\n    }\n\n    /**\n     * 获取从本地储存空间获取到的数据对象\n     * @returns 返回从本地空间获取到的数据对象\n     */\n    getLocalStorage<K extends keyof T>(): object {\n        const localStorageObject = {};\n        for (const k of this.localKeys) {\n            const value = localStorage.getItem(this.getLocalKeyFromKey(k)) as string;\n            if (value) {\n                (localStorageObject as Record<K, T[K]>)[k as K] = JSON.parse(value) as T[K];\n            }\n        }\n        return localStorageObject;\n    }\n\n    getDataFromLocalStorage<K extends keyof T>(key: K): T[K] | undefined {\n        const value = localStorage.getItem(this.getLocalKeyFromKey(key)) as string;\n        if (value) {\n            return JSON.parse(value) as T[K];\n        }\n        return undefined;\n    }\n\n    /**\n     * 通过输入的Key值获取到本地空间的key键\n     * @param key key\n     * @returns 本地空间的键\n     */\n    getLocalKeyFromKey(key: keyof T): string {\n        return `XSBE_${key as string}`;\n    }\n    /**\n     * 将时间戳保存到本地空间\n     */\n    setTimestampToLocalStorage() {\n        localStorage.setItem(this.getLocalKeyFromKey('timestamp' as keyof T), CommonTime().toString());\n    }\n\n}\n","import { DataBody } from \"../Base/Data\"\n\n\nexport default class DataManager {\n    private static private_data: DataBody<IDataBody>;\n    private static readonly onlineKeys: onlineKeys = ['version', 'hasWombTattoos', 'aftertaste'];\n    private static readonly settingKeys: settingKeys = ['enabled'];\n    private static readonly localKeys: localKeys = ['timestamp', 'resistCount', 'aftertasteEffect', 'progress', 'version', 'hasWombTattoos', 'aftertaste', 'enabled'];\n\n    public static Init() {\n        DataManager.private_data = new DataBody({\n            version: XSBE_VERSION,\n            timestamp: 0,\n            enabled: false as boolean,\n            hasWombTattoos: false as boolean,\n            aftertaste: 0,\n            resistCount: 0,\n            aftertasteEffect: new Set(),\n            progress: 0,\n        }, this.onlineKeys, this.settingKeys, this.localKeys)\n\n        window.XSBE_Data = DataManager.private_data\n    }\n\n    static get data() {\n        return DataManager.private_data\n    }\n\n    static get(name: keyof IDataBody) {\n        this.private_data.get(name)\n    }\n    static set<K extends keyof IDataBody>(key: K, value: IDataBody[K], upload: boolean = false, updateLocalTimestamp: boolean = true) {\n        this.private_data.set(key, value, upload, updateLocalTimestamp)\n    }\n}","import { hookFunction } from \"./BCSDK\";\n// import { conDebug } from \"./Utilities\";\n\ntype RegisteredProcessItem = { priority: number, nextInterval: number, interval: number | (() => number), condition: () => boolean, nextTriggerTime: number }\nexport default class TimerProcessInjector {\n    private static ProcessSequence: TimerProcessInjectorSequence;\n    private static RegisteredProcess: Map<string, RegisteredProcessItem>;\n    private static ProcessCodeMap: Map<string, () => void>;\n    private static processSortList: string[];\n    private static activatedProcess: string[];\n\n    public static Init(): void {\n        this.ProcessSequence = new TimerProcessInjectorSequence();\n        this.RegisteredProcess = new Map<string, RegisteredProcessItem>;\n        this.ProcessCodeMap = new Map<string, () => void>\n        this.activatedProcess = [];\n        this.processSortList = [];\n    }\n\n    public static Load(): void {\n\n        this.sortProcessList();\n        for (const name of this.processSortList) {\n            const item = this.RegisteredProcess.get(name)!\n            const itemInterval = item.interval;\n            if (typeof itemInterval === \"function\") {\n                item.nextInterval = itemInterval();\n            } else {\n                item.nextInterval = itemInterval;\n            }\n        }\n    }\n\n    public static Run(): void {\n        hookFunction(\"TimerProcess\", 100, (args, next) => {\n            this.activatedProcess = [];\n\n            const currentTime = Date.now();\n            // 进行条件判断 如果条件通过 则将代码放入激活列表中\n            for (const name of this.processSortList) {\n                const item = this.RegisteredProcess.get(name)!\n                if (item.interval == 0){\n                    this.activatedProcess.push(name);\n                    continue;\n                }\n\n                if (item.nextTriggerTime <= currentTime) {\n                    item.nextTriggerTime = currentTime + item.nextInterval;\n                    if (item.condition()) {\n                        this.activatedProcess.push(name);\n                    }\n                }\n                if (typeof item.interval === \"function\") {\n                    item.nextInterval = item.interval();\n                }\n            }\n            // 通过将激活列表的所有值遍历添加到ProcessSequence中\n            this.ProcessSequence.clear();\n            for (const name of this.activatedProcess) {\n                this.ProcessSequence.add({ code: this.ProcessCodeMap.get(name)!, name: name });\n            }\n\n            this.ProcessSequence.run(this.activatedProcess);\n\n            // 交给ProcessSequence 进行执行\n            return next(args)\n        });\n    }\n\n    private static sortProcessList() {\n        this.processSortList.sort((a, b) => {\n            return this.RegisteredProcess.get(b)!.priority - this.RegisteredProcess.get(a)!.priority;\n        });\n    }\n\n\n    public static add(priority: number, interval: number | (() => number), condition: () => boolean, codeItem: TimerProcessInjectorCodeContent) {\n        if (this.RegisteredProcess.has(codeItem.name)) return;\n        this.RegisteredProcess.set(codeItem.name, {\n            interval: interval,\n            nextInterval: -1,//////\n            condition: condition,\n            priority: priority,\n            nextTriggerTime: 0//////\n        });\n        this.ProcessCodeMap.set(codeItem.name, codeItem.code);\n        this.processSortList.push(codeItem.name);\n    }\n}\n\ninterface TimerProcessInjectorCodeContent {\n    code: () => void;\n    name: string;\n}\ntype TimerProcessInjectorCodeMap = Map<string, TimerProcessInjectorCodeContent>;\n\nclass TimerProcessInjectorSequence {\n    private codeMap: TimerProcessInjectorCodeMap;\n    size: number;\n\n    constructor() {\n        this.codeMap = new Map<string, TimerProcessInjectorCodeContent>();\n        this.size = 0;\n    }\n\n    add(codeItem: TimerProcessInjectorCodeContent) {\n        if (this.codeMap.has(codeItem.name)) {\n            return;\n        }\n        this.codeMap.set(codeItem.name, codeItem);\n        this.size++;\n    }\n\n    has(name: string) {\n        return this.codeMap.has(name);\n    }\n    remove(name: string) {\n        this.codeMap.delete(name);\n        this.size--;\n    }\n    clear() {\n        this.codeMap.clear();\n        this.size = 0;\n    }\n\n    run(runList: string[]) {\n        for (const name of runList) {\n            this.codeMap.get(name)?.code();\n        }\n    }\n}\n","export interface ModuleInfo {\n    /**\n     * 模块名\n     */\n    name: moduleName;\n    priority: ModulePriority;\n    description: string;\n}\n\nexport type moduleName = 'base' | 'WombTattoosModule' | 'ArousalModule'\n\nexport enum ModulePriority {\n    Bottom = -100,\n    Observe = 0,\n    AddBehavior = 1,\n    ModifyBehavior = 5,\n    OverrideBehavior = 10,\n    Top = 100\n}","import { ModuleInfo, ModulePriority } from \"../Models/ModuleInfo\";\n\n/**\n * 模块的基础抽象类\n */\nexport default abstract class BaseModule {\n    /** 模块的信息 */\n    Info: ModuleInfo = {\n        name: \"base\",\n        priority: ModulePriority.Bottom,\n        description: \"模块基类，所有的模块都继承这个模块\"\n    }\n    /** 模块是否加载完成 */\n    public Loaded: boolean = false;\n\n    constructor(info: ModuleInfo) {\n        this.Info = info;\n    }\n\n    /**\n     * 在模块加载完成后调用\n     */\n    protected letSuccessfullyLoad(): void {\n        this.Loaded = true;\n    }\n\n    /**\n     * 初始化函数\n     */\n    public abstract Init(): void\n    /**\n     * 加载函数\n     */\n    public abstract Load(): void\n\n    /**\n     * 运行模块\n     */\n    public abstract Run(): void\n\n    /**\n     * 卸载模块\n     */\n    public abstract Unload(): void\n}","import { conDebug } from \"./Utilities\";\n\n\nexport default class AssetManager {\n    private static AssetMap = new Map<string, Map<string, unknown>>([\n        ['img', new Map<string, HTMLImageElement>()],\n        ['sound', new Map<string, HTMLAudioElement>()]\n    ]);\n\n    private static readonly IOAssetSrc = 'https://iceriny.github.io/XiaosuBCExpansion'\n    private static readonly suffix = DEBUG ? 'dev' : 'main'\n    private static readonly imgSrcList: string[][] = [\n        ['logo', `${this.IOAssetSrc}/${this.suffix}/Assets/Img/logo.png`]\n    ]\n    private static readonly soundSrcList: string[][] = [\n        ['heartbeat', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/heartbeat.mp3`],\n        ['clock', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/clock.mp3`],\n        ['snapFingers', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/snapFingers.mp3`],\n        ['faultSound', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/faultSound.mp3`],\n        ['sleep', `${this.IOAssetSrc}/${this.suffix}/Assets/Audio/sleep.mp3`]\n    ]\n\n\n    private static cacheImg(src: string, name: string): HTMLImageElement {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => {\n            this.AssetMap.get('img')!.set(name, img);\n        }\n        return img;\n    }\n    private static cacheSound(src: string, name: string): HTMLAudioElement {\n        const audio = new Audio();\n        audio.src = src;\n        audio.load();\n        this.AssetMap.get('sound')!.set(name, audio);\n        return audio;\n    }\n\n    public static cacheAssets(): void {\n        for (const src of AssetManager.imgSrcList) {\n            this.cacheImg(src[1], src[0]);\n        }\n        for (const src of AssetManager.soundSrcList) {\n            this.cacheSound(src[1], src[0]);\n        }\n    }\n\n    public static getAssets<T extends HTMLImageElement | HTMLAudioElement>(name: string, type: string): T | void {\n        if (type === 'img') {\n            const assetMap = this.AssetMap.get('img')!;\n            const asset = assetMap.get(name) as T;\n            return asset;\n        }\n        if (type === 'sound') {\n            const assetMap = this.AssetMap.get('sound')!;\n            const asset = assetMap.get(name) as T;\n            return asset;\n        }\n    }\n\n    public static GatImg(name: string): HTMLImageElement {\n        const img = this.AssetMap.get('img')!.get(name) as HTMLImageElement;\n        return img;\n    }\n\n    public static PlayAudio(name: string, volume?: number): void {\n        const vol = volume != null ? volume : Player.AudioSettings?.Volume ?? 1;\n        if (vol > 0) {\n            const audio = this.AssetMap.get('sound')!.get(name) as HTMLAudioElement;\n            audio.volume = Math.min(vol, 1);\n            try {\n                audio.play();\n            } catch (error) {\n                conDebug(`声音播放失败: ${error}   Message: ${audio.error}`)\n            }\n        }\n    }\n    public static PlayerOriginalAudio(name: string, volume?: number): void {\n        AudioPlayInstantSound(`Audio/${name}.mp3`, volume)\n    }\n}","/** @hook函数工具 */\n// import { ModulePriority } from \"../Models/ModuleInfo\";\nimport { hookFunction, patchFunction, removePatches } from \"./BCSDK\";\n// import * as Utils from \"../Utilities/Utilities\";\n\n/**\n * 完整的钩子项 \n */\ntype CompleteHookItem = [top: HookItem<HookItemContent>,\n    bottom: HookItem<HookItemContent>,\n    topHookSet: Set<string>,\n    removeCallback?: [top?: () => void, bottom?: () => void]]\n/**\n * Hook管理器\n */\nexport default class HookManager {\n\n    /**\n     * 钩子映射表\n     */\n    private static readonly _hookMap: Map<string, CompleteHookItem> = new Map();\n\n    /** 创建一个新的钩子内容项 */\n    private static get NewHookItem(): HookItem<HookItemContent> {\n        return new HookItem<HookItemContent>();\n    }\n\n    /**\n     * 设置钩子函数\n     * @param functionName 函数名\n     * @param name 钩子名\n     * @param priority 钩子优先级\n     * @param code 钩子函数中运行的代码\n     */\n    static setHook(functionName: string, name: string, priority: number, code: (args: unknown[], lastResult: unknown) => codeResult | void) {\n        // 获取函数对应的钩子项\n        const hookItem = HookManager._hookMap.get(functionName);\n        if (hookItem) {\n            // 如果钩子项存在，则设置钩子函数\n            if (priority >= 0) hookItem[0].add(name, { priority, code });\n            else hookItem[1].add(name, { priority, code });\n        } else {\n            // 如果钩子项不存在，则创建新的钩子项，并设置钩子函数\n            const topItem = this.NewHookItem;\n            const bottom = this.NewHookItem;\n            const _item: CompleteHookItem = [topItem, bottom, new Set()];\n            if (priority >= 0) {\n                topItem.add(name, { priority, code });\n                _item[2].add(name);\n            }\n            else bottom.add(name, { priority, code });\n\n            HookManager.addHook(functionName, _item);\n            HookManager._hookMap.set(functionName, _item);\n        }\n    }\n\n    /**\n     * 移除钩子函数\n     * @param functionName 钩子函数名\n     * @param name 钩子名称\n     */\n    static removeHook(functionName: string, name: string) {\n        // 获取HookItem\n        const hookItem = HookManager._hookMap.get(functionName);\n        // 如果HookItem存在\n        if (hookItem) {\n            if (hookItem[2].has(name)) {\n                hookItem[2].delete(name);\n                hookItem[0].delete(name);\n            } else hookItem[1].delete(name);\n\n            if (hookItem[0].size === 0 && hookItem[1].size === 0) {\n                // 如果HookItem为空，则删除HookItem\n                if (hookItem[2].has(name)) this._hookMap.get(functionName)?.[3]?.[0]?.();\n                else hookItem[3]?.[1]?.();\n                this._hookMap.delete(functionName);\n\n            }\n        }\n    }\n\n    // /**\n    //  * 运行初始的钩子函数Map\n    //  */\n    // static runHook() {\n    //     for (const [functionName, completeHookItem] of HookManager._hookMap.entries()) {\n    //         HookManager.addHook(functionName, completeHookItem);\n    //     }\n    // }\n\n    /**\n     * 用于在运行过程中动态的添加函数hook\n     * @param functionName 需要hook的函数名\n     * @param completeHookItem 添加的函数内容\n     */\n    private static addHook(functionName: string, completeHookItem: CompleteHookItem) {\n        // 调用hookFunction函数，传入需要hook的函数名和参数\n        const topRemoveCallback = hookFunction(functionName, 100, (args, next) => {\n            let topLastResult = null;\n            for (const item of completeHookItem[0]) {\n                const result = item.code(args, topLastResult);\n                if (result !== undefined) {\n                    // 更新参数\n                    args = result.args;\n                    if (result.result !== undefined) topLastResult = result.result;\n                }\n            }\n            if (topLastResult !== null) return topLastResult;\n            return next(args);\n            // // 遍历顶部钩子函数\n            // const topItemResult: codeResult[] = completeHookItem[0].forEach((item): codeResult | void => {\n            //     // Utils.conDebug(`${functionName}: name: ${name}`);\n            //     // 运行钩子函数\n            //     const itemResult = item.code(args);\n            //     if (itemResult) {\n            //         // 更新参数\n            //         args = itemResult.args;\n            //         return itemResult;\n            //     }\n            // });\n            // 取出最后一个函数的结果 如果存在则返回结果\n            // const topLastResult = topItemResult.length === 0 ? null : topItemResult[topItemResult.length - 1].result;\n            // if (topLastResult) return topLastResult;\n\n            // 调用下一个函数并返回结果\n            // const result = next(args);\n\n\n        });\n        const bottomRemoveCallback = hookFunction(functionName, -100, (args, next) => {\n            const OtherLastResult = next(args);\n            let bottomLastResult = OtherLastResult;\n            for (const item of completeHookItem[1]) {\n                const result = item.code(args, bottomLastResult);\n                if (result !== undefined) {\n                    // 更新参数\n                    args = result.args;\n                    if (result.result !== undefined) bottomLastResult = result.result;\n                }\n            }\n            return bottomLastResult;\n            // // 遍历完成钩子的参数\n            // const bottomItemResult: codeResult[] = completeHookItem[1].forEach((item): codeResult | void => {\n            //     // 运行钩子函数\n            //     const itemResult = item.code(args);\n            //     if (itemResult) {\n            //         // 更新参数\n            //         args = itemResult.args;\n            //         return itemResult;\n            //     }\n            // });\n            // // 取出最后一个函数的结果 如果存在则返回结果\n            // const bottomLastResult = bottomItemResult.length === 0 ? null : bottomItemResult[bottomItemResult.length - 1].result;\n            // if (bottomLastResult) return bottomLastResult;\n            // // 否则返回原函数的结果\n            // return result;\n        });\n        completeHookItem[3] = [topRemoveCallback, bottomRemoveCallback]\n    }\n\n    public static patchAdd(functionName: string, patches: Record<string, string | null>) {\n        patchFunction(functionName, patches);\n    }\n    public static patchRemove(functionName: string) {\n        removePatches(functionName);\n    }\n}\n\n/**\n * 钩子项内容\n */\ninterface HookItemContent {\n    priority: number;\n    code: (args: unknown[], lastResult: unknown) => codeResult | void;\n}\n\ntype codeResult = {\n    args: unknown[];\n    result?: unknown;\n}\n\nclass HookItem<T extends HookItemContent> implements Iterable<T> {\n    // 存储 HookItem 的映射关系\n    private itemMap: { [key: string]: T };\n    // 存储 HookItem 的顺序\n    private itemSequence: string[];\n    // 存储 HookItem 的数量\n    size: number;\n\n    constructor(...item: { name: string, content: T }[]) {\n        // 初始化 itemMap\n        this.itemMap = {}\n        // 初始化 itemSequence\n        this.itemSequence = [];\n        // 初始化 size\n        this.size = 0;\n        item.forEach(item => {\n            this.add(item.name, item.content);\n        })\n    }\n\n    // 添加 HookItem\n    add(name: string, content: T) {\n        // 将 content 添加到 itemMap 中\n        this.itemMap[name] = content;\n        // 查找插入位置\n        let index = this.itemSequence.findIndex(item => this.itemMap[item].priority < content.priority);\n        if (index === -1) {\n            // 如果找不到比插入值更小的元素，说明插入值最小，放在数组末尾\n            index = this.size;\n        }\n        // 使用 splice() 方法插入元素\n        this.itemSequence.splice(index, 0, name);\n        // 更新 size\n        this.size++;\n    }\n\n    // 删除 HookItem\n    delete(name: string) {\n        // 从 itemMap 中删除指定的 HookItem\n        delete this.itemMap[name];\n        // 从 itemSequence 中删除指定的 HookItem\n        const index = this.itemSequence.indexOf(name);\n        this.itemSequence.splice(index, 1);\n        // 更新 size\n        this.size--;\n    }\n\n    // 遍历 HookItem\n    forEach(callback: (value: T, name: string) => codeResult | void): codeResult[] {\n        const resultList: codeResult[] = [];\n        // 遍历 itemSequence，调用回调函数\n        for (const key of this.itemSequence) {\n            const callbackResult = callback(this.itemMap[key], key)\n            if (callbackResult) {\n                resultList.push(callbackResult);\n                if (callbackResult.result) return resultList;\n            }\n        }\n        return resultList;\n    }\n\n    // 实现 Symbol.iterator 方法，返回一个迭代器\n    [Symbol.iterator](): Iterator<T> {\n        let index = 0;\n        const keys = this.itemSequence;\n        const map = this.itemMap\n        return {\n            next(): IteratorResult<T> {\n                if (index < keys.length) {\n                    // 如果还有元素，返回当前元素\n                    return { done: false, value: map[keys[index++]] };\n                } else {\n                    // 如果没有元素，返回结束状态\n                    return { done: true, value: undefined };\n                }\n            }\n        };\n    }\n}","type LocalMessageCSSName = null | 'local-message' | 'trance-message'\nconst selfPlaceholder = '{source}';\n/** 描述中表示目标的占位符 */\n\nconst targetPlaceholder = '{target}';\n/**\n * 包含全局占位符的对象 s:自己  t:目标\n */\nexport const PH = {\n    s: selfPlaceholder,\n    t: targetPlaceholder\n}\nexport default class MSGManager {\n    /**\n     * 发送*表情信息\n     * @param msg 要发送的内容\n     * @returns 无\n     */\n    static SendEmote(msg: string | null) {\n        if (msg == null) return;\n        ServerSend(\"ChatRoomChat\", { Content: msg, Type: \"Emote\" })\n    }\n    /**\n     * 发送聊天消息\n     * @param msg 发送的内容\n     * @returns 无\n     */\n    static SendChat(msg: string | null) {\n        if (msg == null) return;\n        ServerSend(\"ChatRoomChat\", { Type: \"Chat\", Content: msg })\n    }\n\n    /**\n     * 发送本地消息\n     * @param msg 发送的消息\n     * @param className 本地消息的样式ClassName\n     * @param timeout 持续时间\n     */\n    static SendLocalMessage(msg: string, className: LocalMessageCSSName = null, timeout: number = 0) {\n        if (className !== null) {\n            msg = `<div class=\"${className}\">${msg}</div>`\n        }\n        if (timeout === 0) ChatRoomSendLocal(msg)\n        else ChatRoomSendLocal(msg, timeout);\n    }\n    /**\n     * 发送动作消息\n     * @param msg 动作消息的内容\n     * @param sourceCharacter 动作的来源 id\n     * @param targetCharacter 动作的目标 id\n     */\n    static SendActivity(msg: string, sourceCharacter: number, targetCharacter?: number) {\n\n        const sourceCharacterObj: Character | undefined = ChatRoomCharacter.find(c => c.MemberNumber == sourceCharacter),\n            targetCharacterObj: Character | undefined = targetCharacter ? ChatRoomCharacter.find(c => c.MemberNumber == targetCharacter) : undefined;\n\n        if (sourceCharacterObj === undefined && targetCharacterObj === undefined) return;\n\n        const sourceCharacterNickname = sourceCharacterObj ? CharacterNickname(sourceCharacterObj) : \"\",\n            targetCharacterNickname = targetCharacterObj ? CharacterNickname(targetCharacterObj) : \"\";\n        const resultDict: ChatMessageDictionary = [\n            { Tag: \"MISSING ACTIVITY DESCRIPTION FOR KEYWORD XSBE_ActMessage\", Text: msg.replaceAll(PH.s, sourceCharacterNickname).replaceAll(PH.t, targetCharacterNickname) }\n        ]\n\n        resultDict.push({ SourceCharacter: sourceCharacter });\n        if (targetCharacter !== undefined) resultDict.push({ TargetCharacter: targetCharacter });\n        ServerSend(\"ChatRoomChat\", {\n            Type: \"Activity\", Content: \"XSBE_ActMessage\", Dictionary: resultDict, Sender: sourceCharacter\n        });\n    }\n}","import BaseModule from \"../Base/BaseModule\";\nimport AssetManager from \"../Utilities/AssetManager\";\nimport DataManager from \"../Utilities/DataManager\";\nimport HookManager from \"../Utilities/HookManager\";\nimport MSGManager, { PH } from \"../Utilities/MessageManager\";\nimport TimerProcessInjector from \"../Utilities/TimerProcessInjector\";\nimport { SetSkillModifier, conDebug, getDynamicProbability, getMoan, segmentForCH } from \"../Utilities/Utilities\";\n\n\nexport default class ArousalModule extends BaseModule {\n    private _aftertaste: number = 0;\n    private static readonly MAX_AFTERTASTE = 120;\n    /** 对于忍耐高潮时的反应描述 */\n    private descriptionOfEnduranceActivities = [\n        `{source}脚趾一蜷一缩，难耐的交织.`,\n        `{source}闭眼忍耐，鼻息中泄露出粉红的喘息.`,\n        `{source}蜷缩脚趾忍耐着连续的快感.`,\n        `{source}难耐的双腿颤抖着，身体的每一处都充满快感.`,\n        `{source}拼命咬住牙齿，却从鼻腔泄露出诱人的声音.`,\n        `{source}在汹涌的快感下浑身粉红，奋力的想要忍住高潮.`,\n        `{source}浑身颤抖的抵抗高潮的逼近.`\n    ];\n\n    private needSendEnduringMessage = false;\n\n    /** 获取忍耐高潮时的反应描述 */\n    get getEndureDesc(): string {\n        return this.descriptionOfEnduranceActivities[Math.floor(Math.random() * this.descriptionOfEnduranceActivities.length)];\n    }\n    public Run(): void {\n        // 处理本模块的Hook函数\n        this.HookList();\n        // 处理本模块的Patch函数\n        this.patchListHandler();\n        // 处理本模块的TimerProcess\n        this.TimerProcess();\n\n    }\n    public Unload(): void { }\n    public Init(): void { }\n    public Load(): void {\n        this._aftertaste = DataManager.data.get('aftertaste') ?? 0;\n    }\n\n    public getArousalSettings = (C: Character | PlayerCharacter): ArousalSettingsType | undefined => C.ArousalSettings;\n\n    public getOrgasmStage = (C: Character | PlayerCharacter): number => this.getArousalSettings(C)?.OrgasmStage ?? 0;\n\n    public set Aftertaste(level: number) {\n        DataManager.set('aftertaste', level, true);\n        this._aftertaste = level;\n    }\n    public get Aftertaste() {\n        return this._aftertaste;\n    }\n\n    /**\n     * 处理本模块的Hook函数\n     */\n    private HookList(): void {\n        // 处理高潮余韵等级的增加\n        HookManager.setHook('ActivityOrgasmStart', 'AftertasteSet', 2, (args) => {\n            if(!(args[0] as Character).IsPlayer() || ActivityOrgasmRuined) return;\n\n            const addedNumber = ActivityOrgasmGameResistCount + 1;\n            this.Aftertaste = this._aftertaste + addedNumber;\n            if (this._aftertaste > ArousalModule.MAX_AFTERTASTE) this.Aftertaste = ArousalModule.MAX_AFTERTASTE;\n            this.AftertasteEffectSetHandler(true);\n        });\n        // 处理同步ActivityOrgasmGameResistCount到player\n        HookManager.setHook('ActivityOrgasmStart', 'AftertasteSet', -2, (args) => {\n            if((args[0] as Character).IsPlayer()) DataManager.set('resistCount', ActivityOrgasmGameResistCount, true);\n        });\n\n        // 在进入聊天室时处理 余韵等级 高潮抵抗 快感进度 初始化\n        HookManager.setHook('ChatRoomSync', 'Test HookManager', -10, () => {\n            this.AftertasteEffectSetHandler(false);\n            ActivityOrgasmGameResistCount = DataManager.data.get('resistCount')\n            // const dataProgress = DataManager.data.get('progress');\n            // Player.ArousalSettings!.Progress = dataProgress;\n            // if (Player.BCT) {\n            //     Player.BCT.splitOrgasmArousal.arousalProgress = dataProgress;\n            // }\n            // if (Player.BCEArousal) Player.BCEArousalProgress = dataProgress;\n            // setTimeout(() => {\n            //     BCT_API.ActivityChatRoomBCTArousalSync(Player);\n            // }, 1200);\n        });\n\n        // 将进度信息同步到Mod\n        HookManager.setHook('ActivityChatRoomArousalSync', 'ArousalSync', -10, () => {\n            DataManager.set('progress', Player.ArousalSettings!.Progress);\n        });\n\n        // 处理对慢速移动\n        HookManager.setHook('Player.GetSlowLevel', 'aftertasteWeaknessEffect', -9, (args, lastResult) => {\n            if (Player.RestrictionSettings?.SlowImmunity)\n                return { args: args, result: 0 };\n            let result = lastResult;\n            if (typeof result === 'number' && this.afterEffectSwitch.weakness) {\n                let slowLevel = 1;\n                if (this._aftertaste > 55) slowLevel++;\n                if (this._aftertaste > 60) slowLevel++;\n                if (this._aftertaste > 70) slowLevel++;\n                if (result < slowLevel) result = slowLevel;\n                else result++;\n            }\n            return { args, result }\n        });\n\n        // 处理余韵对失明等级的增加\n        HookManager.setHook('Player.GetBlindLevel', 'aftertasteEffectAboutBlindLevel', -10, (args, lastResult) => {\n            let result = lastResult;\n            if (typeof result === 'number' && this.afterEffectSwitch.weakness) {\n                let blindLevel = 1;\n                if (this.afterEffectSwitch.twitch) blindLevel++;\n                if (this.afterEffectSwitch.trance) blindLevel++;\n                if (this.afterEffectSwitch.absentminded) blindLevel++;\n                if (result < blindLevel) result = blindLevel;\n                else result++;\n            }\n            return { args, result }\n        });\n\n        // 处理余韵对是否能够跪下的影响 这个函数返回false时不代表按钮不能按 只是表示不能直接切换为跪下站起  需要进行游戏\n        HookManager.setHook('Player.CanKneel', 'aftertasteEffectAboutCanKneel', 9, (args) => {\n            if (this.afterEffectSwitch.weakness) {\n                return { args, result: false }\n            }\n            return\n        });\n\n        // 处理余韵对听觉的限制\n        HookManager.setHook('Player.GetDeafLevel', 'aftertasteEffectAboutDeafLevel', -11, (args, lastResult) => {\n            let result = lastResult;\n            if (typeof result === 'number' && this.afterEffectSwitch.trance) {\n                let deafLevel = 1;\n                if (this.afterEffectSwitch.absentminded) deafLevel++;\n                if (result < deafLevel) result = deafLevel;\n                else result++;\n            }\n            return { args, result }\n        })\n\n        // 处理余韵对身体姿势的限制\n        HookManager.setHook('PoseAvailable', 'aftertasteEffectAboutPose', 3, (args) => {\n            const P = args[0] as Character;\n            if (P.IsPlayer() && this.afterEffectSwitch.twitch) {\n                return { args, result: false };\n            }\n            return;\n        });\n\n        // 处理余韵不能离开房间\n        HookManager.setHook('ChatRoomCanLeave', 'aftertasteEffectAboutCanLeave', 10, (args) => {\n            if (this.afterEffectSwitch.absentminded) return { args, result: false };\n            return;\n        });\n\n        // 处理余韵对发送消息的限制\n        HookManager.setHook('CommandParse', 'aftertasteEffectAboutChat', 10, (args) => {\n            if (this.afterEffectSwitch.relax) {\n                let msg = args[0] as string;\n                const firstChar = msg.charAt(0);\n                if (firstChar !== '*' && firstChar !== CommandsKey && firstChar !== '.' && firstChar !== '@' && firstChar !== '`' && firstChar !== '!') {\n                    const segmentList = segmentForCH(msg)\n                    if (segmentList === null) {\n                        conDebug('程序正在处理 消息分词，但您的浏览器不支持该功能!!! 无法显示余韵的特殊字符串加工效果。')\n                    } else {\n                        let cacheStr = '';\n                        for (let i = 0; i < segmentList.length; i++) {\n                            const subStr = segmentList[i];\n                            if (i === 0) cacheStr = subStr;\n                            else {\n                                cacheStr += this.msgSubStringHandle(subStr)\n                            }\n                        }\n                        msg = cacheStr;\n                    }\n                    (args[0] as string) = '*'.concat(msg).concat('....^(虚弱)');\n                }\n            }\n            return { args };\n        });\n    }\n    /**\n     * 处理消息中经过分词后的子字符串的显示效果\n     * 使用动态概率影响效果 概率分布符合 logistic 函数\n     * 简单来说 当余韵等级越高时 越容易出现屏蔽单词\n     * 等级越低时 越容易出现呻吟和口吃\n     * @param subStr 传入的子字符串\n     * @returns 处理后的字符串\n     */\n    private msgSubStringHandle(subStr: string): string {\n        // 获取三个概率判断结果\n        const probability_bold = Math.random() < getDynamicProbability(this._aftertaste, 0, ArousalModule.MAX_AFTERTASTE, 0.2, 0.8);\n        const probability_moan = Math.random() < getDynamicProbability(this._aftertaste, 0, ArousalModule.MAX_AFTERTASTE, 0.1, 0, true);\n        const probability_negative = Math.random() < getDynamicProbability(this._aftertaste, 0, ArousalModule.MAX_AFTERTASTE, 0.05, -0.02, true);\n\n        let formattedSubStr = subStr;\n\n        if (probability_bold) {\n            formattedSubStr = `..${'*'.repeat(subStr.length)}..`;\n        }\n\n        if (probability_moan) {\n            formattedSubStr += `${getMoan()}...`;\n        }\n\n        if (probability_negative) {\n            formattedSubStr += `-${formattedSubStr}`;\n        }\n\n        return formattedSubStr;\n    }\n\n    /**\n     * 处理本模块的TimerProcess\n     */\n    private TimerProcess(): void {\n        // 处理边缘增加抵抗高潮难度\n        TimerProcessInjector.add(101, 45000, () => {\n            return !!Player.ArousalSettings\n        }, {\n            code: () => {\n                if (Player.ArousalSettings!.Progress >= 93) {\n                    ActivityOrgasmGameResistCount++;\n                    DataManager.set('resistCount', ActivityOrgasmGameResistCount, true)\n                } else if (Player.ArousalSettings!.Progress < 60 && ActivityOrgasmGameResistCount >= 1) {\n                    ActivityOrgasmGameResistCount--;\n                    DataManager.set('resistCount', ActivityOrgasmGameResistCount, true)\n                }\n            },\n            name: \"EdgeTimer\"\n        });\n\n        // 处理高潮余韵的恢复 每15秒回复一次与当前高潮抵抗等级有关\n        TimerProcessInjector.add(100, 15000, () => {\n            return this._aftertaste > 0;\n        }, {\n            code: () => {\n                this.AftertasteFallBack();\n                this.AftertasteEffectSetHandler(true);\n            },\n            name: \"AftertasteFallBack\"\n        });\n\n        // 处理高潮余韵的无力效果\n        TimerProcessInjector.add(99, 0, () => {\n            return this._aftertaste >= 20;\n        }, {\n            code: () => {\n                if (this._aftertasteEffectSet.has('relax') && SkillGetModifier(Player, 'Bondage') >= 0) {\n                    SetSkillModifier('Bondage', 0.4, 5000);\n                    SetSkillModifier('SelfBondage', 0.4, 5000);\n                    SetSkillModifier('LockPicking', 0.4, 5000);\n                    SetSkillModifier('Evasion', 0.1, 5000);\n                    SetSkillModifier('Willpower', 0.8, 5000);\n                    SetSkillModifier('Infiltration', 0.2, 5000);\n                    SetSkillModifier('Dressage', 0.2, 5000);\n                }\n            },\n            name: \"AftertasteEffectHandle\"\n        });\n\n        // 处理是否需要禁用输入\n        TimerProcessInjector.add(-1, 200, () => {\n            return CurrentScreen == \"ChatRoom\" && Player.MemberNumber !== undefined;\n        }, {\n            code: () => {\n                // 高潮时的禁用\n                const orgasmStage = Player.ArousalSettings?.OrgasmStage;\n                if (orgasmStage == 1) {\n                    this.needSendEnduringMessage = true;\n                    if (!this.inputDisabled) {\n                        this.DisableInput(true);\n                    }\n                } else if (orgasmStage == 0) {\n                    this.needSendEnduringMessage = false;\n                    if (this.inputDisabled) {\n                        this.DisableInput(false);\n                    }\n                } else if (orgasmStage == 2) {\n                    this.needSendEnduringMessage = false;\n                }\n            },\n            name: \"DisableInput\"\n        });\n\n        // 处理是否需要发送忍耐的描述\n        TimerProcessInjector.add(-2, 2500, () => {\n            return this.needSendEnduringMessage;\n        }, {\n            code: () => {\n                MSGManager.SendActivity(this.getEndureDesc, Player.MemberNumber!);\n            },\n            name: 'SendEnduringMessage'\n        });\n\n    }\n\n\n    /**\n     * 补丁列表处理\n     */\n    private patchListHandler(): void {\n        // 处理OrgasmStart\n        HookManager.patchAdd(\"ActivityOrgasmStart\",\n            {// XSA补丁处理~ 基础高潮时间为 4~7秒, 每边缘45秒钟增加随机的 300ms ~ 1300ms 的高潮时间。 最多增加 20000ms，也就是最长高潮时间为 27 秒\n                \"C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\":\n                    `if (Player.XSBE && C.IsPlayer()) {\n                const addedTime = (Math.random() + 0.3) * 1000 * ActivityOrgasmGameResistCount;\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (addedTime > 20000 ? 20000 : addedTime) + 4000 + (3000 * Math.random());\n            } else {\n                C.ArousalSettings.OrgasmTimer = CurrentTime + (Math.random() * 10000) + 5000;\n            }`,\n                // 高潮时将抵抗难度减半而非变为0\n                \"ActivityOrgasmGameResistCount = 0;\":\n                    \"ActivityOrgasmGameResistCount = Math.round(ActivityOrgasmGameResistCount / 2);\"\n            });\n\n        HookManager.patchAdd('ChatRoomMenuDraw',\n            { // 处理余韵对跪下的按钮的颜色处理\n                // 处理什么时候为黄色\n                'else if (name === \"Kneel\" && (Player.AllowedActivePoseMapping.BodyLower || Player.AllowedActivePoseMapping.BodyFull))':\n                    'else if (name === \"Kneel\" && (Player.AllowedActivePoseMapping.BodyLower || Player.AllowedActivePoseMapping.BodyFull|| (Player?.XSBE?.aftertasteEffect?.has(\"weakness\"))))',\n                // 处理什么时候为红色\n                'if (ChatRoomGetUpTimer === 0 && (ChatRoomCanAttemptStand() || ChatRoomCanAttemptKneel()))':\n                    'if (ChatRoomGetUpTimer === 0 && (ChatRoomCanAttemptStand() || ChatRoomCanAttemptKneel()) && !Player?.XSBE?.aftertasteEffect?.has(\"absentminded\"))'\n            });\n    }\n\n    /**\n     * 处理余韵等级的回落\n     * 高潮抵抗等级越大恢复越少 最多恢复20点 如果高潮抵抗等级超过20 则每次只恢复1点\n     */\n    private AftertasteFallBack(): void {\n        const n = 20 - ActivityOrgasmGameResistCount\n        const fallBackNumber = n <= 0 ? 1 : n;\n        this.Aftertaste = this.Aftertaste - fallBackNumber;\n        if (this._aftertaste < 0) this.Aftertaste = 0;\n    }\n\n    /** 余韵效果开关 */\n    private afterEffectSwitch: { [name in AftertasteEffect]: boolean } = {\n        relax: false,\n        weakness: false,\n        twitch: false,\n        trance: false,\n        absentminded: false\n    }\n    /** 余韵效果描述 */\n    private afterEffectDescribe: { [name in AftertasteEffect]: string[] } = {\n        relax: [`${PH.s}的身体在快感冲击下软了下来。浑身软绵绵的使不上力气。`,\n        `${PH.s}的身体渐渐恢复，重新恢复了正常的体力。`],\n        weakness: [`${PH.s}的身体在连续的快感冲击中变得越来越软，越来越无力，已经难以控制自己的身体。`,\n        `${PH.s}的身体虽然还是软绵绵的，但大概可以正常走路了。`],\n        twitch: [`连续深度的高潮冲击下，${PH.s}的身体不自觉的开始抽搐，再这么下去...`,\n        `${PH.s}停止了抽搐，但还是很难支撑起自己的身体。`],\n        trance: [`高潮过于猛烈，${PH.s}的脑袋已经不清楚了。恍恍惚惚，意识断断续续。想要移动的话..应该需要很大的意志力才能挪动吧。`,\n        `${PH.s}的意识恢复了，但身体还是时不时的抽动一下。`],\n        absentminded: [`强大的、连续的、不可抵挡的高潮冲击下，${PH.s}已经完全无法控制自己的身体。只能在无意识中抽搐着身体，发出细软的声音。这样的话...`,\n        `${PH.s}虽然还是恍恍惚惚，意识算是渐渐恢复了，希望这段时间没有发生什么。`]\n    }\n\n    /**\n     * 开关余韵效果\n     * @param name 要开关的效果名字\n     * @param value 开还是关?\n     */\n    private setAftertasteEffectSwitch(name: AftertasteEffect, value: boolean) {\n        const switchState = this.afterEffectSwitch[name];\n        if (switchState != value) {\n            if (value) {\n                this._aftertasteEffectSet.add(name);\n\n                if (name === 'relax') {\n                    AssetManager.PlayAudio('heartbeat', 0.5);\n                    if (Player.IsStanding()) PoseSetActive(Player, 'Kneel'); // 当放松时 自动跪下\n                }\n                if (name === 'weakness') {\n                    AssetManager.PlayAudio('heartbeat');\n                }\n                if (name === 'twitch') {\n                    AssetManager.PlayAudio('faultSound'); // 当抽搐时 自动播放 心跳音效\n                }\n                if (name === 'trance') {\n                    // AssetManager.PlayAudio('heartbeat');\n                    AssetManager.PlayAudio('sleep');\n                }\n                if (name === 'absentminded') {\n                    // AssetManager.PlayAudio('heartbeat');\n                    AssetManager.PlayAudio('sleep')\n                }\n\n                MSGManager.SendActivity(this.afterEffectDescribe[name][0], Player.MemberNumber!);\n            } else {\n                this._aftertasteEffectSet.delete(name);\n                MSGManager.SendActivity(this.afterEffectDescribe[name][1], Player.MemberNumber!);\n            }\n            this.afterEffectSwitch[name] = value;\n        }\n    }\n    /** 余韵效果的集合 */\n    private _aftertasteEffectSet: Set<AftertasteEffect> = new Set();\n    /**\n     * 余韵效果的判断与处理\n     * @param pushToServer 是否同步到服务器\n     */\n    private AftertasteEffectSetHandler(pushToServer: boolean): void {\n        const effectThresholds: Array<{ threshold: number, effect: AftertasteEffect }> = [\n            { threshold: 20, effect: \"relax\" },\n            { threshold: 50, effect: \"weakness\" },\n            { threshold: 70, effect: \"twitch\" },\n            { threshold: 90, effect: \"trance\" },\n            { threshold: 100, effect: \"absentminded\" },\n        ];\n\n        for (const { threshold, effect } of effectThresholds) {\n            this.setAftertasteEffectSwitch(effect, this._aftertaste > threshold);\n        }\n\n        DataManager.set('aftertasteEffect', this._aftertasteEffectSet, pushToServer);\n    }\n\n    /** 默认的输入框样式 */\n    inputDefaultStyle: { backgroundColor: string, borderColor: string, borderRadius: string } | undefined = undefined;\n    inputDisabled: boolean = false;\n    /**\n     * 获取{@link HTMLTextAreaElement}的默认样式，根据{@param isAbsent}决定是否禁用或取消禁用\n     * @param isAbsent 是否为失能状态\n     */\n    private DisableInput(isAbsent: boolean): void {\n        const inputElement: HTMLTextAreaElement | null = document.getElementById(\"InputChat\") as HTMLTextAreaElement;\n        if (!inputElement) return;\n        if (isAbsent) {\n            if (!inputElement.readOnly) {\n                if (!this.inputDefaultStyle) {\n                    this.inputDefaultStyle = {\n                        backgroundColor: inputElement.style.backgroundColor,\n                        borderColor: inputElement.style.borderColor,\n                        borderRadius: inputElement.style.borderRadius\n                    };\n                }\n                inputElement.readOnly = true;\n                this.inputDisabled = true;\n                inputElement.style.backgroundColor = \"#8d6f83\";\n                inputElement.style.borderColor = \"#ea44a9\";\n                inputElement.style.borderRadius = \"5px\";\n            }\n        } else {\n            if (inputElement.readOnly) {\n                inputElement.readOnly = false;\n                this.inputDisabled = false;\n                if (this.inputDefaultStyle) {\n                    inputElement.style.backgroundColor = this.inputDefaultStyle.backgroundColor;\n                    inputElement.style.borderColor = this.inputDefaultStyle.borderColor;\n                    inputElement.style.borderRadius = this.inputDefaultStyle.borderRadius;\n                }\n            }\n        }\n    }\n}","import BaseModule from \"../Base/BaseModule\";\n// import HookManager from \"../Utilities/HookManager\";\n// import { setAPI } from \"../Utilities/Utilities\";\n// import { DataManager } from \"../Utilities/DataManager\";\n\n\n// type wombTattoosLayersName = \"Zoom\" | \"Big\" | \"Bloom\" | \"BottomSpike\" | \"Flash\" | \"Fly\" | \"Grass\" | \"Grow\" | \"GrowHollow\" | \"HeartSmallOutline\" | \"Heartline\" | \"HeartSmall\" | \"HeartSolid\" | \"HeartWings\" | \"In\" | \"Leaves\" | \"MidSpike\" | \"Ribow\" | \"Sense\" | \"Shake\" | \"SideHearts\" | \"Swim\" | \"Thorn\" | \"ThornOut\" | \"TopSpike\" | \"Venom\" | \"Viper\" | \"Waves\" | \"WingSmall\";\n\nexport default class WombTattoosModule extends BaseModule {\n    // 功能搭配 高潮余韵与失神 系统\n    // 功能构想:\n    // 1. 当高潮余韵大于100时 也就是失能状态时 激活可以对目标角色施加淫纹\n    // 2. 当激活角色被激活淫纹时 淫纹会根据条件 进一步发展\n    // 3. 随着淫纹的发展程度 会触发不同的淫纹效果\n    // 4. 淫纹的发展程度会有额外的触发条件\n    // 5. 淫纹分7个阶段\n    // 6. 基础阶段为敏感度提升\n    // 7. 二为欲望提升 (依托于BCT_API.ActivitySetBCTArousal())\n\n    public Init(): void { }\n    public Load(): void { }\n    public Run(): void {\n        // // PreferenceLoad函数在设置界面加载时被调用\n        // HookManager.setHook(\"PreferenceLoad\", 'PreferenceLoadDebug', 10, () => {\n        //     // 展示了设置如何 包装原函数并替换原函数，并且储存原函数到API的方法，如果后续用的多 可以尝试做出Manager!\n        //     if (typeof PreferenceSubscreenBCTArousalLoad === 'function' && !window.XSBE_API?.originalPreferenceSubscreenBCTArousalLoad) {\n        //         setAPI('originalPreferenceSubscreenBCTArousalLoad', PreferenceSubscreenBCTArousalLoad)\n        //         PreferenceSubscreenBCTArousalLoad = function () {\n        //             if (Player?.BCT) {\n        //                 if (!Player?.BCT?.bctSettings.splitOrgasmArousal) Player.BCT.bctSettings.splitOrgasmArousal = true;\n        //                 if (!Player?.BCT?.bctSettings.arousalAffectsOrgasmProgress) Player.BCT.bctSettings.splitOrgasmArousal = true;\n        //             }\n        //             (window.XSBE_API!.originalPreferenceSubscreenBCTArousalLoad as () => void)();\n        //             // 执行自己的操作!\n        //         }\n        //     }\n        //     if (typeof PreferenceSubscreenBCTArousalClick === 'function' && !window.XSBE_API?.originalPreferenceSubscreenBCTArousalClick) {\n        //         setAPI('originalPreferenceSubscreenBCTArousalClick', PreferenceSubscreenBCTArousalClick)\n        //         PreferenceSubscreenBCTArousalClick = function () {\n        //             (window.XSBE_API!.originalPreferenceSubscreenBCTArousalClick as () => void)();\n        //             if (Player?.BCT) {\n        //                 if (!Player?.BCT?.bctSettings.splitOrgasmArousal) Player.BCT.bctSettings.splitOrgasmArousal = true;\n        //                 if (!Player?.BCT?.bctSettings.arousalAffectsOrgasmProgress) Player.BCT.bctSettings.arousalAffectsOrgasmProgress = true;\n        //             }\n        //         }\n        //     }\n        //     if (typeof PreferenceSubscreenBCTArousalRun === 'function' && !window.XSBE_API?.originalPreferenceSubscreenBCTArousalRun) {\n        //         setAPI('originalPreferenceSubscreenBCTArousalRun', PreferenceSubscreenBCTArousalRun)\n        //         PreferenceSubscreenBCTArousalRun = function () {\n        //             (window.XSBE_API!.originalPreferenceSubscreenBCTArousalRun as () => void)();\n        //             const BCTInputElementsName = ['InputArousalProgressMultiplier',\n        //                     'InputOrgasmProgressMultiplier',\n        //                     'InputArousalDecayMultiplier',\n        //                     'InputOrgasmDecayMultiplier'];\n        //                 for (const n of BCTInputElementsName) {\n        //                     const e = document.getElementById(n) as HTMLInputElement | null;\n        //                     if (e !== null) {\n        //                         e.disabled = true;\n        //                     }\n        //                 }\n        //         }\n        //     }\n        // })\n    }\n    public Unload(): void { }\n\n    /**\n     * 判断目标角色是否有淫纹\n     */\n    public static haveWombTattoos(C: Character | PlayerCharacter): boolean {\n        //查找WombTattoos\n        for (const item of C.Appearance) {\n            if (item.Asset !== null && item.Asset.Name === \"WombTattoos\") return true;\n        }\n        return false;\n    }\n\n    // 添加淫纹\n    \n\n}","/** @模块加载器 */\n\nimport BaseModule from \"../../Base/BaseModule\";\nimport * as MInfo from \"../../Models/ModuleInfo\";\nimport ArousalModule from \"../../Modules/Arousal\";\nimport WombTattoosModule from \"../../Modules/WombTattoos\";\nimport { conDebug } from \"../Utilities\";\n\nexport default class ModulesLoader {\n    /** @模块集合 用于加载模块 */\n    private static modules = new Map<MInfo.moduleName, BaseModule>();\n    /** @模块列表 用于注册模块 并排序*/\n    private static modulesList: BaseModule[] = [];\n\n    /** 表示是否成功加载 */\n    public static successfulLoaded = false;\n    /** 加载模块数量 */\n    private static loadedCount = 0;\n    private static readonly fullLoadedCount = 2;\n\n    /** @注册模块 */\n    public static registerModule() {\n        for (const n in this.modulesBuilder) {\n            if (n === 'base') continue;\n            const module = this.modulesBuilder[n as MInfo.moduleName]();\n            this.modulesList.push(module);\n        }\n        this.modulesList.sort((a, b) => {\n            if (a.Info.priority === b.Info.priority) {\n                return 0;\n            }\n            return a.Info.priority > b.Info.priority ? 1 : -1;\n        });\n        for (const m of this.modulesList) this.modules.set(m.Info.name, m);\n    }\n\n    /** @初始化模块 */\n    public static initModules() {\n        for (const [name, module] of this.modules) {\n            module.Init();\n            conDebug(`模块 ${name} 初始化完成`);\n        }\n        conDebug(`模块初始化结束`);\n    }\n\n    /** @加载模块 */\n    public static loadModules() {\n        for (const [name, m] of this.modules) {\n            m.Load();\n            this.loadedCount++;\n            conDebug(`模块 ${name} 加载完成`);\n        }\n        conDebug(`模块加载结束 ${this.loadedCount}/${this.fullLoadedCount}`);\n        if (this.loadedCount === this.fullLoadedCount) {\n            this.successfulLoaded = true;\n            conDebug(`模块加载完成!`);\n        }\n    }\n\n    /** @运行模块 */\n    public static runModules() {\n        for (const [name, module] of this.modules) {\n            module.Run();\n            conDebug(`模块 ${name} 运行完成`);\n        }\n        conDebug(`模块运行结束`);\n    }\n\n    /**\n     * 获取已加载的特定模块\n     * @param name 需要获取的模块名字\n     * @returns 获取到的模块\n     */\n    public static getModule<T extends BaseModule>(name: MInfo.moduleName): T {\n        return this.modules.get(name) as T;\n    }\n\n\n    /** @模块生成器 用于生成模块 */\n    private static modulesBuilder: { [key in MInfo.moduleName]: () => BaseModule } = {\n        base: () => { throw new Error(\"BaseModule 不应该被创建\") },\n        WombTattoosModule: () => {\n            return new WombTattoosModule({\n                name: \"WombTattoosModule\",\n                priority: MInfo.ModulePriority.Observe,\n                description: \"淫纹相关的模块。修改与拓展了游戏淫纹的功能。\"\n            })\n        },\n        ArousalModule: () => {\n            return new ArousalModule({\n                name: \"ArousalModule\",\n                priority: MInfo.ModulePriority.Observe,\n                description: \"Arousal模块。修改与拓展了游戏Arousal的功能。包括高潮等机制。\"\n            })\n        }\n    }\n\n}","import { hookFunction } from \"./Utilities/BCSDK\";\nimport { conDebug, DebugMSGType } from \"./Utilities/Utilities\";\nimport DataManager from \"./Utilities/DataManager\";\nimport TimerProcessInjector from \"./Utilities/TimerProcessInjector\";\nimport ModulesLoader from \"./Utilities/Modules/ModulesLoader\";\nimport AssetManager from \"./Utilities/AssetManager\";\n// import { HookManager } from \"./Utilities/HookManager\";\n\nfunction initWait() {\n    conDebug({\n        name: \"Start Init\",\n        type: DebugMSGType.Workflow_Log,\n        content: \"Init wait\"\n    });\n    if (CurrentScreen == null || CurrentScreen === 'Login') {\n        // 加载模组\n        hookFunction('LoginResponse', -100, (args, next) => {\n            const result = next(args);\n            conDebug({\n                name: `Init! Login Response caught`,\n                content: args,\n                type: DebugMSGType.Workflow_Log\n            });\n            const response = args[0] as Character | string;\n            if (response && typeof response === 'object' && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n                init();\n            }\n            return result;\n        });\n    }\n}\n\nfunction init() {\n    if (ModulesLoader.successfulLoaded) return;\n\n    AssetManager.cacheAssets();\n    \n    // HookManager.setHook('ChatRoomSync', 'Test HookManager', -1, () => {\n    //     testOverrideFunction();\n    //     return\n    // })\n\n\n    // 数据处理\n    DataManager.Init()\n    conDebug({\n        name: \"Data Init Complete\",\n        type: DebugMSGType.Workflow_Log,\n        content: DataManager.data\n    });\n    TimerProcessInjector.Init();\n\n    ModulesLoader.registerModule();\n    ModulesLoader.initModules();\n    ModulesLoader.loadModules();\n    ModulesLoader.runModules();\n\n    TimerProcessInjector.Load();\n    TimerProcessInjector.Run();\n\n}\n\n\n\ninitWait();\n"],"names":["e","o","alert","Error","console","error","t","TextEncoder","n","Array","isArray","r","Set","filter","has","add","i","Map","a","d","warn","s","p","values","patching","get","name","push","hooks","patches","entries","set","sort","priority","size","toString","replaceAll","includes","eval","original","m","errorReporterHooks","hookChainExit","call","apply","this","length","hookEnter","mod","hook","arguments","patchesSources","enter","final","c","precomputed","window","split","slice","join","encode","padStart","toUpperCase","l","originalHash","Object","assign","router","context","contextProperty","keys","f","sdkEntrypoint","currentEntrypoint","hookedByMods","map","patchedByMods","from","u","delete","loaded","g","fullName","version","allowReplace","repository","unload","hookFunction","indexOf","splice","patchFunction","removePatches","clear","callOriginal","getOriginalHash","api","freeze","h","y","bcModSdk","apiVersion","registerMod","getModsInfo","getPatchingInfo","seal","startsWith","_shim10register","defineProperty","exports","value","bcModSDK","XSBE_VERSION","target","DebugMSGType","conDebug","msg","isError","color","style","DEBUG","result","type","DebugLog","content","time","Date","toLocaleString","ModVersion","debug","theColor","SetSkillModifier","duration","realLevel","SkillGetLevelReal","Player","targetValue","Math","floor","SkillSetModifier","XSBE_API","MOAN","getDynamicProbability","min","max","alpha","beta","reverse","x","probability","exp","LimitedScope","ExtensionStorage","ExtensionSettings","XSBE","DataBody","constructor","data","onlineKeys","settingKeys","localKeys","_a","defaultXSBE","OnlineSharedSettings","defaultCharacterOnlineSharedSettings","k","initSingleDataHandle","compareServerDataAndLocalDataAndUpdate","updateExtensionSettings","ExtObj","getExtensionSettings","serverExtensionSettingObject","serverTimestamp","localTimestamp","getDataFromLocalStorage","hasOwnProperty","dataValue","serverValue","setTimestampToLocalStorage","key","upload","updateLocalTimestamp","isSettings","localStorage","setItem","getLocalKeyFromKey","JSON","stringify","Settings","_value","updatePlayer","localValue","CommonTime","ExtensionSettingsObject","LZString","compressToBase64","ServerPlayerExtensionSettingsSync","parse","decompressFromBase64","getLocalStorage","localStorageObject","getItem","hasWombTattoos","aftertaste","defaultSetting","enabled","timestamp","DataManager","Init","private_data","resistCount","aftertasteEffect","progress","XSBE_Data","TimerProcessInjector","ProcessSequence","TimerProcessInjectorSequence","RegisteredProcess","ProcessCodeMap","activatedProcess","processSortList","Load","sortProcessList","item","itemInterval","interval","nextInterval","Run","args","next","currentTime","now","nextTriggerTime","condition","code","run","b","codeItem","codeMap","remove","runList","ModulePriority","BaseModule","info","Info","Bottom","description","Loaded","letSuccessfullyLoad","AssetManager","cacheImg","src","img","Image","onload","AssetMap","cacheSound","audio","Audio","load","cacheAssets","imgSrcList","soundSrcList","getAssets","GatImg","PlayAudio","volume","vol","AudioSettings","Volume","play","PlayerOriginalAudio","AudioPlayInstantSound","IOAssetSrc","suffix","HookManager","NewHookItem","HookItem","setHook","functionName","hookItem","_hookMap","topItem","bottom","_item","addHook","removeHook","completeHookItem","topRemoveCallback","topLastResult","undefined","bottomRemoveCallback","bottomLastResult","patchAdd","patchRemove","itemMap","itemSequence","forEach","index","findIndex","callback","resultList","callbackResult","Symbol","iterator","done","PH","MSGManager","SendEmote","ServerSend","Content","Type","SendChat","SendLocalMessage","className","timeout","ChatRoomSendLocal","SendActivity","sourceCharacter","targetCharacter","sourceCharacterObj","ChatRoomCharacter","find","MemberNumber","targetCharacterObj","sourceCharacterNickname","CharacterNickname","targetCharacterNickname","resultDict","Tag","Text","SourceCharacter","TargetCharacter","Dictionary","Sender","ArousalModule","_aftertaste","descriptionOfEnduranceActivities","needSendEnduringMessage","getArousalSettings","C","ArousalSettings","getOrgasmStage","OrgasmStage","afterEffectSwitch","relax","weakness","twitch","trance","absentminded","afterEffectDescribe","_aftertasteEffectSet","inputDefaultStyle","inputDisabled","getEndureDesc","random","HookList","patchListHandler","TimerProcess","Unload","Aftertaste","level","IsPlayer","ActivityOrgasmRuined","addedNumber","ActivityOrgasmGameResistCount","MAX_AFTERTASTE","AftertasteEffectSetHandler","Progress","lastResult","RestrictionSettings","SlowImmunity","slowLevel","blindLevel","deafLevel","firstChar","charAt","CommandsKey","segmentList","str","Intl","Segmenter","TranslationLanguage","toLowerCase","segmenterResult","granularity","segment","results","segmentForCH","cacheStr","subStr","msgSubStringHandle","concat","probability_bold","probability_moan","probability_negative","formattedSubStr","repeat","AftertasteFallBack","SkillGetModifier","CurrentScreen","orgasmStage","DisableInput","fallBackNumber","setAftertasteEffectSwitch","IsStanding","PoseSetActive","pushToServer","effectThresholds","threshold","effect","isAbsent","inputElement","document","getElementById","readOnly","backgroundColor","borderColor","borderRadius","WombTattoosModule","haveWombTattoos","Appearance","Asset","Name","ModulesLoader","registerModule","modulesBuilder","module","modulesList","modules","initModules","loadModules","loadedCount","fullLoadedCount","successfulLoaded","runModules","getModule","base","MInfo.ModulePriority","Observe","Workflow_Log","response","AccountName"],"mappings":"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","x_google_ignoreList":[0]}